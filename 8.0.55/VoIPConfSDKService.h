//
// ClassDump By HuangBai Private
//  Copyright (C) 1997-2019 Steve Nygard. Updated HuangBai-2024 
//

@class ConfAVMemberList, IConfSDKRegisterableCallbackHolder, MMConfSDKAudioMgr, MMConfSDKCGIImp, MMConfSDKMemberMgr, MMConfSDKNetworkMgr, MMConfSDKVideoHWdec, MMConfSDKVideoHWenc, MMContext, NSMutableArray, NSObject, NSString, VoIPConfSDKNativeCallbackMgr;
@protocol MultitalkApiDelegate, OS_dispatch_queue, ilinkApiDelegate;

@interface VoIPConfSDKService
{
    NSObject<OS_dispatch_queue> *_workerQueue;
    MMConfSDKMemberMgr *_memberMgr;
    MMConfSDKAudioMgr *_audioMgr;
    MMConfSDKNetworkMgr *_networkMgr;
    MMConfSDKCGIImp *_CGIImp;
    id <MultitalkApiDelegate> _apiDelegate;
    id <ilinkApiDelegate> _ilinkApiDelegate;
    VoIPConfSDKNativeCallbackMgr *voipCallbackMgr;
    IConfSDKRegisterableCallbackHolder *inviteSucc;
    IConfSDKRegisterableCallbackHolder *inviteFail;
    IConfSDKRegisterableCallbackHolder *inviteTimeout;
    IConfSDKRegisterableCallbackHolder *recvInvite;
    IConfSDKRegisterableCallbackHolder *recvInviteBusy;
    IConfSDKRegisterableCallbackHolder *recvNotifyFail;
    IConfSDKRegisterableCallbackHolder *ackSucc;
    IConfSDKRegisterableCallbackHolder *ackFail;
    IConfSDKRegisterableCallbackHolder *acceptSucc;
    IConfSDKRegisterableCallbackHolder *acceptFail;
    IConfSDKRegisterableCallbackHolder *acceptTimeout;
    IConfSDKRegisterableCallbackHolder *acceptByOtherDevice;
    IConfSDKRegisterableCallbackHolder *addResult;
    IConfSDKRegisterableCallbackHolder *memberChange;
    IConfSDKRegisterableCallbackHolder *videoMemberChange;
    IConfSDKRegisterableCallbackHolder *talkSucc;
    IConfSDKRegisterableCallbackHolder *talkFail;
    IConfSDKRegisterableCallbackHolder *callBroken;
    IConfSDKRegisterableCallbackHolder *callWording;
    IConfSDKRegisterableCallbackHolder *callExit;
    IConfSDKRegisterableCallbackHolder *switchAVFail;
    IConfSDKRegisterableCallbackHolder *ilinkInviteAck;
    IConfSDKRegisterableCallbackHolder *recvCmdMsg;
    IConfSDKRegisterableCallbackHolder *simuCall;
    IConfSDKRegisterableCallbackHolder *networkType;
    IConfSDKRegisterableCallbackHolder *simuCallerColseVideo;
    CDUnknownBlockType _currentInterruptedCallback;
    CDUnknownBlockType _currentSpeakerChangedCallback;
    ConfAVMemberList *confAVMemberList;
    int _currentStatus;
    NSString *_currentAppId;
    int _exitReason;
    _Bool _isInited;
    _Bool _isIniting;
    CDUnknownBlockType _pendingExitCallback;
    _Bool _isSyncJoinDone;
    _Bool _isCallbackJoinDone;
    _Bool _isCallbackTalkDone;
    _Bool _isCameraStarted;
    _Bool _isHandsFree;
    int _screenStatus;
    _Bool _alreadyNotifyReady;
    _Bool _alreadyNotifyScreenSharing;
    _Bool _isProcessingMemberChg;
    unsigned long long _roomId;
    int _audioType;
    int _roomType;
    int _videoRatio;
    int _videoLength;
    _Bool _isMicrophoneMute;
    int mLastSimCardType;
    int _hwEncStatus;
    int _capW;
    int _capH;
    int _capScreenW;
    int _capScreenH;
    int _encStatusList[2];
    _Bool _isSWEncUsing;
    int _capStatus;
    MMConfSDKVideoHWenc *_hwEncoderList[2];
    CDStruct_6fac3b9d _encModeStatus;
    int _screenEncStatusList[2];
    _Bool _isSWScreenEncUsing;
    MMConfSDKVideoHWenc *_hwScreenEncoderList[2];
    MMConfSDKVideoHWdec *_hwDecoderList[16];
    int _hwDecoderUsingList[16];
    MMContext *m_context;
    NSString *selfUsername;
    long long selfUin;
    NSString *callerName;
    NSString *_currentGroupid;
    NSString *_currentSdkGroupid;
    NSMutableArray *_displayUserList;
    int _memberRole;
    NSMutableArray *_cachedVideoMemberIds;
    NSMutableArray *_cachedInviteNotify;
    struct __CVBuffer *_screenPixelBuffer;
    int _lastScreenPlaneWidth;
    int _lastScreenPlaneHeight;
    struct __CVBuffer *_videoPixelBuffer;
    int _lastVideoPlaneWidth;
    int _lastVideoPlaneHeight;
    NSString *_talkingToUserName;
    _Bool _isSimuCall;
    _Bool _isChangeToMultiTalk;
    long long mStartInviteTime;
    long long mStartJoinTime;
    long long mRecvInviteTime;
    _Bool isAlreadySetAudio;
    long long _deviceOrientation;
}

- (void).cxx_destruct;
@property(nonatomic) long long deviceOrientation; // @synthesize deviceOrientation=_deviceOrientation;
- (void)OnConfEvent:(int)arg1 errCode:(int)arg2 data:(id)arg3 callbackData:(id)arg4;
- (void)callIfNotNil:(id)arg1 errCode:(int)arg2 data:(id)arg3 callbackData:(id)arg4;
- (void)thermalStateDidChange;
- (void)stopReportThermalStateDuration;
- (void)startThermalStateDurationReport;
- (void)voIPOrientationServiceDidChangeMotionOrientation;
- (void)voIPOrientationServiceDidChangeDeviceAngleDegree;
- (void)voIPOrientationServiceDidChangeDeviceOrientation;
- (void)resetStatus;
- (void)uninitEngine;
- (void)VoIPMPReleaseDevice;
- (void)releaseDevice;
- (void)svrReport;
- (void)RecvNotifyImp:(id)arg1 datalen:(int)arg2 groupId:(id)arg3 sdkGroupId:(id)arg4 displayUserList:(id)arg5 username:(id)arg6 receiveMsgTime:(unsigned int)arg7 roomID:(unsigned long long)arg8;
- (void)recvNotify:(id)arg1 datalen:(int)arg2 groupId:(id)arg3 sdkGroupId:(id)arg4 displayUserList:(id)arg5 username:(id)arg6 receiveMsgTime:(unsigned int)arg7 roomID:(unsigned long long)arg8 isCancelMsg:(_Bool)arg9;
- (void)inviteImp:(id)arg1 inviteCallback:(CDUnknownBlockType)arg2 username:(id)arg3;
- (void)inviteSync:(id)arg1 username:(id)arg2;
- (int)invite:(id)arg1 groupId:(id)arg2 isAudio:(_Bool)arg3 username:(id)arg4;
- (void)supplyInfo:(_Bool)arg1;
- (void)acceptSubCallWithInviteInfo:(id)arg1 inviteMsg:(id)arg2 muteVideo:(_Bool)arg3;
- (void)accept:(_Bool)arg1;
- (void)acceptWithRegister;
- (void)addMembers:(id)arg1;
- (void)hangup:(int)arg1;
- (void)hangup:(int)arg1 isSubCall:(_Bool)arg2;
- (void)changeFloatingWindowStatus:(int)arg1;
- (void)sendBannerMsg:(unsigned int)arg1;
- (int)engineDoMemberSelectForView:(id)arg1;
- (id)getMemberByMemberid:(int)arg1;
- (id)getMemberByUsername:(id)arg1;
- (id)getMemberByOpenid:(id)arg1;
- (int)checkUsingMultiPathCellularConn;
- (id)getMemberQualityInfoList;
- (id)sortedTalkingMembers;
- (id)getTalkingMember;
- (void)forceExitRoom:(int)arg1;
- (int)gotEncodeErrCode:(int)arg1 encIdx:(int)arg2;
- (int)gotXpsData:(id)arg1 codecType:(int)arg2 encIdx:(int)arg3 isScreen:(_Bool)arg4;
- (int)gotEncodedData:(id)arg1 isKeyFrame:(_Bool)arg2 codecType:(int)arg3 encIdx:(int)arg4 isScreen:(_Bool)arg5;
- (int)CloseHWDecoder:(int)arg1 codecType:(int)arg2;
- (void)gotDecVideoFrame:(int)arg1 Frame:(char *)arg2 Width:(unsigned int)arg3 Height:(unsigned int)arg4 format:(int)arg5;
- (void)stopVideo;
- (void)switchVideoToScreenPaused;
- (void)doVideoScreenSharingSecurityCheck:(id)arg1 fileId:(id)arg2;
- (void)switchVideoToScreen;
- (void)switchVideoToCamera;
- (void)switchVideoWithCameraEnabled:(_Bool)arg1 screenStatus:(int)arg2;
- (void)onVideoFrame:(int)arg1 data:(const char *)arg2 dataLen:(int)arg3 width:(int)arg4 height:(int)arg5 format:(int)arg6;
- (_Bool)checkIfMemberVideoOn:(int)arg1;
- (long long)getRemoteVideoOrientation:(int)arg1;
- (int)sendScreenData:(void *)arg1;
- (int)sendVideoData:(char *)arg1 dataLen:(int)arg2 imgBuf:(struct __CVBuffer *)arg3 width:(int)arg4 height:(int)arg5;
- (int)sendVideoData:(char *)arg1 dataLen:(int)arg2 imgBuf:(struct __CVBuffer *)arg3 width:(int)arg4 height:(int)arg5 format:(int)arg6;
- (int)sendVideoData:(void *)arg1;
- (void)doQosCtrl:(_Bool)arg1;
- (void)CloseCodec:(int)arg1 codecFlag:(int)arg2;
- (int)GetScreenHWEncHeight:(int)arg1;
- (int)GetScreenHWEncWidth:(int)arg1;
- (void)subscribeByUsername:(id)arg1 NeedBigVideo:(_Bool)arg2;
- (void)subscribeByUsernameList:(id)arg1 LargeUsers:(id)arg2;
- (void)subscribeAll;
- (void)mayRelease:(_Bool)arg1;
- (void)updateConfig:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)setMicroPhoneMute:(_Bool)arg1;
- (void)setSpeakerPhone:(_Bool)arg1;
- (void)cleanUpLongTermCallbacks;
- (int)exitConferenceSyncWithReason:(int)arg1;
- (int)convertReason:(int)arg1;
- (void)callbackAccept:(CDUnknownBlockType)arg1 errType:(int)arg2 errCode:(int)arg3 errMsg:(id)arg4;
- (void)callbackInvite:(CDUnknownBlockType)arg1 errType:(int)arg2 errCode:(int)arg3 errMsg:(id)arg4;
- (void)receiveInviteFailedDueToCallerRiskWithErrCode:(int)arg1 verificationUrlBase64:(id)arg2;
- (int)initWithSession:(_Bool)arg1 isSubCallEnable:(_Bool)arg2;
- (void)stopListenNetworkChange;
- (void)startListenNetworkChange;
- (void)cleanUpJoinStatus;
- (void)callbackDeviceStartFailed:(CDUnknownBlockType)arg1 errCode:(int)arg2;
- (void)notifyRemoteDeviceStartSucc;
- (void)startAudioDevice:(CDUnknownBlockType)arg1;
- (void)tryTriggerAcceptSucc:(CDUnknownBlockType)arg1;
- (void)tryTriggerInviteSucc:(CDUnknownBlockType)arg1;
- (void)setUpLongTermCallbackAfterJoin:(unsigned long long)arg1;
- (void)notifyVideoMemberChange:(id)arg1;
- (void)canSwitchToTalkingStatus;
- (void)readyToTalk;
- (void)onServiceClearData;
- (void)onServiceEnterForeground;
- (void)onServiceEnterBackground;
- (void)onServiceInit;
- (void)onServiceTerminate;
- (void)startPlay:(int)arg1 channels:(int)arg2 frameDuration:(int)arg3;
- (void)startRecord:(int)arg1 channels:(int)arg2 frameDuration:(int)arg3;
- (id)getCallerName;
- (void)notifyAudioDeviceChange:(_Bool)arg1 isWirelessDevice:(_Bool)arg2 isWiredDevice:(_Bool)arg3;
- (void)HeadSetPlugin:(_Bool)arg1;
- (void)restartDeviceForFail;
- (int)getSelfMemberID;
- (id)getCurrentConfSDKMemberMgr;
- (void)setIsHandsFree:(_Bool)arg1;
- (int)getRemoteVideoRatio;
- (void)sendCmdMsgData:(id)arg1;
- (void)EndSysCallInterruption;
- (void)BeginSysCallInterruption;
- (void)interruptByCall:(_Bool)arg1;
- (void)dealloc;
- (void)initEngineForInviteVoIP;
- (void)initEngine:(CDUnknownBlockType)arg1;
- (void)setMultitalkSelf:(id)arg1 useruin:(long long)arg2 multitalkApiDelegate:(id)arg3 ilinkDelegate:(id)arg4;
- (_Bool)isMemberWithUserName:(id)arg1;
- (int)currentStatus;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

