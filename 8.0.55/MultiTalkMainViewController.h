//
// ClassDump By HuangBai Private
//  Copyright (C) 1997-2019 Steve Nygard. Updated HuangBai-2024 
//

@class AVRoutePickerView, CContact, MMConfSDKMemberMgr, MMTimer, MMUIButton, MMUILabel, MMUIView, MinimizeNewTransitionController, MultiTalkBeforeTalkingOperateView, MultiTalkBottomOperatePanel, MultiTalkHDHeadView, MultiTalkScreenSharingAudienceViewController, MultiTalkScreenSharingLogic, MultitalkSecondOperateView, NSArray, NSDictionary, NSString, UIImageView, UIView, VoipDescriptionButton, WCUIAlertView, ilinkMultiSelectLogic;
@protocol MultiTalkMainViewControllerDelegate, MultiTalkMembersViewProtocol;

@interface MultiTalkMainViewController
{
    _Bool m_isMinCardMode;
    MultiTalkHDHeadView *m_minCardHeadImageView;
    MMUILabel *m_minCardUsrnameLabel;
    MMUILabel *m_minCardDescriptionLabel;
    VoipDescriptionButton *m_minCardAcceptBtn;
    VoipDescriptionButton *m_minCardHangupBtn;
    MMUIButton *m_minCardExpandVideoVipViewButton;
    MMUIView *m_minCardmMemberDisplayBigHeadView;
    UIImageView *m_minCardBlurView;
    ilinkMultiSelectLogic *m_ilinkMultiSelectLogic;
    vector_cd3186ef memberIDMsgVector;
    _Bool m_isMinCardExpandIng;
    _Bool _m_isCaller;
    _Bool _m_connect_hangup;
    _Bool _isFromNewIlink;
    _Bool _isBottomOperatePanelInited;
    _Bool _shouldHideBottomOperatePanel;
    _Bool _m_hasClickAcceptButton;
    _Bool _m_hasClickHangupButton;
    _Bool _m_hasStartTimerView;
    _Bool _m_talkReady;
    _Bool _m_deviceLaunchSuccess;
    _Bool _m_hasBlurBackground;
    _Bool _m_isMinimizeMode;
    _Bool _isMemberDisplayBigHeadListUpdated;
    _Bool _isMemberTalkingListUpdated;
    _Bool _isMemberWaitListUpdated;
    _Bool _m_hasCreateOk;
    _Bool _m_connect_onePersonLeft;
    _Bool _m_connect_timeOut;
    _Bool _m_connect_netWorkError;
    _Bool _m_connect_beCanceled;
    _Bool _m_connect_interruptByCall;
    _Bool _canShareScreen;
    _Bool _isCameraInterrupt;
    _Bool _isInviterQuitEarly;
    _Bool _isViewAppeared;
    int _m_layoutType;
    int _multiPathCellularCounter;
    int _m_deviceStateInfoCounter;
    unsigned int _m_messageId;
    int _m_networkStatus;
    unsigned int _m_audio_duration;
    unsigned int _m_video_start_time;
    int _mInitThermalState;
    int _mThermalState;
    int _mPrevThermalState;
    int _mMaxThermalState;
    unsigned int _mInitCpuUsage;
    unsigned int _mCpuUsage;
    unsigned int _mPrevCpuUsage;
    unsigned int _mMaxCpuUsage;
    unsigned int _mIsLowPowerModeEnabled;
    unsigned int _mInitBatteryInfo;
    unsigned int _mBatteryInfo;
    unsigned int _mPrevBatteryInfo;
    unsigned int _mLowBattery;
    unsigned int _mPrevLowBattery;
    unsigned int _mInitDeviceCpuUsage;
    unsigned int _mDeviceCpuUsage;
    unsigned int _mPrevTotalCpuUsage;
    unsigned int _mMaxTotalCpuUsage;
    unsigned int _mInitBatteryChargeInfo;
    unsigned int _mBatteryChargeInfo;
    unsigned int _mPrevBatteryChargeInfo;
    unsigned int _m_minimizeClickCount;
    unsigned int _m_muteClickCount;
    unsigned int _m_speakerClickCount;
    unsigned int _m_videoClickCount;
    unsigned int _m_addMemberClickCount;
    MultiTalkScreenSharingLogic *_screenSharingLogic;
    MMUIView *m_minCardModeBackgroundView;
    UIImageView *m_minCardModeBackgroundViewBlurView;
    UIImageView *m_minCardModeBackgroundViewMaskView;
    id <MultiTalkMainViewControllerDelegate> _m_mainWindowDelegate;
    MultiTalkScreenSharingAudienceViewController *_screenSharingAudienceViewController;
    UIView<MultiTalkMembersViewProtocol> *_m_contactView;
    MultiTalkBeforeTalkingOperateView *_m_beforeTalkingView;
    MultiTalkBottomOperatePanel *_bottomOperatePanel;
    MultitalkSecondOperateView *_m_secondTalkingView;
    UIImageView *_m_backgroundView;
    MMTimer *_m_checkTalkingTimer;
    MMTimer *_m_updateMessageTimer;
    MMTimer *_m_checkQualityTimer;
    MMTimer *_checkMultiPathCellularTimer;
    MMTimer *_hideMultiPathCellularTimer;
    MMTimer *_m_deviceStateInfoTimer;
    MMConfSDKMemberMgr *_m_group;
    CContact *_m_contactInviteMe;
    NSDictionary *_m_videoMemberInfo;
    NSArray *_m_memberTalkArray;
    NSDictionary *_m_memberTalkingDic;
    NSArray *_m_memberWaitList;
    NSArray *_m_memberDisplayBigHeadList;
    NSArray *_m_contactWaitList;
    NSArray *_m_contactArrayOther;
    MMTimer *_m_timeOutTimer;
    MMTimer *_m_onePersonCheckFroMinimizeTimer;
    id _m_selfMember;
    WCUIAlertView *_currentAlertView;
    unsigned long long _m_connect_startTime;
    MinimizeNewTransitionController *_transitionController;
    UIImageView *_m_snapshotBlurView;
    CContact *_m_roomContact;
    AVRoutePickerView *_avRouteView;
    NSString *_prevPortType;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(retain, nonatomic) NSString *prevPortType; // @synthesize prevPortType=_prevPortType;
@property(retain, nonatomic) AVRoutePickerView *avRouteView; // @synthesize avRouteView=_avRouteView;
@property(nonatomic) _Bool isViewAppeared; // @synthesize isViewAppeared=_isViewAppeared;
@property(nonatomic) _Bool isInviterQuitEarly; // @synthesize isInviterQuitEarly=_isInviterQuitEarly;
@property(retain, nonatomic) CContact *m_roomContact; // @synthesize m_roomContact=_m_roomContact;
@property(nonatomic) _Bool isCameraInterrupt; // @synthesize isCameraInterrupt=_isCameraInterrupt;
@property(retain, nonatomic) UIImageView *m_snapshotBlurView; // @synthesize m_snapshotBlurView=_m_snapshotBlurView;
@property(retain, nonatomic) MinimizeNewTransitionController *transitionController; // @synthesize transitionController=_transitionController;
@property(nonatomic) _Bool canShareScreen; // @synthesize canShareScreen=_canShareScreen;
@property(nonatomic) unsigned int m_addMemberClickCount; // @synthesize m_addMemberClickCount=_m_addMemberClickCount;
@property(nonatomic) unsigned int m_videoClickCount; // @synthesize m_videoClickCount=_m_videoClickCount;
@property(nonatomic) unsigned int m_speakerClickCount; // @synthesize m_speakerClickCount=_m_speakerClickCount;
@property(nonatomic) unsigned int m_muteClickCount; // @synthesize m_muteClickCount=_m_muteClickCount;
@property(nonatomic) unsigned int m_minimizeClickCount; // @synthesize m_minimizeClickCount=_m_minimizeClickCount;
@property(nonatomic) unsigned int mPrevBatteryChargeInfo; // @synthesize mPrevBatteryChargeInfo=_mPrevBatteryChargeInfo;
@property(nonatomic) unsigned int mBatteryChargeInfo; // @synthesize mBatteryChargeInfo=_mBatteryChargeInfo;
@property(nonatomic) unsigned int mInitBatteryChargeInfo; // @synthesize mInitBatteryChargeInfo=_mInitBatteryChargeInfo;
@property(nonatomic) unsigned int mMaxTotalCpuUsage; // @synthesize mMaxTotalCpuUsage=_mMaxTotalCpuUsage;
@property(nonatomic) unsigned int mPrevTotalCpuUsage; // @synthesize mPrevTotalCpuUsage=_mPrevTotalCpuUsage;
@property(nonatomic) unsigned int mDeviceCpuUsage; // @synthesize mDeviceCpuUsage=_mDeviceCpuUsage;
@property(nonatomic) unsigned int mInitDeviceCpuUsage; // @synthesize mInitDeviceCpuUsage=_mInitDeviceCpuUsage;
@property(nonatomic) unsigned int mPrevLowBattery; // @synthesize mPrevLowBattery=_mPrevLowBattery;
@property(nonatomic) unsigned int mLowBattery; // @synthesize mLowBattery=_mLowBattery;
@property(nonatomic) unsigned int mPrevBatteryInfo; // @synthesize mPrevBatteryInfo=_mPrevBatteryInfo;
@property(nonatomic) unsigned int mBatteryInfo; // @synthesize mBatteryInfo=_mBatteryInfo;
@property(nonatomic) unsigned int mInitBatteryInfo; // @synthesize mInitBatteryInfo=_mInitBatteryInfo;
@property(nonatomic) unsigned int mIsLowPowerModeEnabled; // @synthesize mIsLowPowerModeEnabled=_mIsLowPowerModeEnabled;
@property(nonatomic) unsigned int mMaxCpuUsage; // @synthesize mMaxCpuUsage=_mMaxCpuUsage;
@property(nonatomic) unsigned int mPrevCpuUsage; // @synthesize mPrevCpuUsage=_mPrevCpuUsage;
@property(nonatomic) unsigned int mCpuUsage; // @synthesize mCpuUsage=_mCpuUsage;
@property(nonatomic) unsigned int mInitCpuUsage; // @synthesize mInitCpuUsage=_mInitCpuUsage;
@property(nonatomic) int mMaxThermalState; // @synthesize mMaxThermalState=_mMaxThermalState;
@property(nonatomic) int mPrevThermalState; // @synthesize mPrevThermalState=_mPrevThermalState;
@property(nonatomic) int mThermalState; // @synthesize mThermalState=_mThermalState;
@property(nonatomic) int mInitThermalState; // @synthesize mInitThermalState=_mInitThermalState;
@property(nonatomic) unsigned int m_video_start_time; // @synthesize m_video_start_time=_m_video_start_time;
@property(nonatomic) unsigned int m_audio_duration; // @synthesize m_audio_duration=_m_audio_duration;
@property(nonatomic) unsigned long long m_connect_startTime; // @synthesize m_connect_startTime=_m_connect_startTime;
@property(nonatomic) _Bool m_connect_interruptByCall; // @synthesize m_connect_interruptByCall=_m_connect_interruptByCall;
@property(nonatomic) _Bool m_connect_beCanceled; // @synthesize m_connect_beCanceled=_m_connect_beCanceled;
@property(nonatomic) _Bool m_connect_netWorkError; // @synthesize m_connect_netWorkError=_m_connect_netWorkError;
@property(nonatomic) _Bool m_connect_timeOut; // @synthesize m_connect_timeOut=_m_connect_timeOut;
@property(nonatomic) _Bool m_connect_onePersonLeft; // @synthesize m_connect_onePersonLeft=_m_connect_onePersonLeft;
@property(nonatomic) _Bool m_hasCreateOk; // @synthesize m_hasCreateOk=_m_hasCreateOk;
@property(retain, nonatomic) WCUIAlertView *currentAlertView; // @synthesize currentAlertView=_currentAlertView;
@property(nonatomic) int m_networkStatus; // @synthesize m_networkStatus=_m_networkStatus;
@property(retain, nonatomic) id m_selfMember; // @synthesize m_selfMember=_m_selfMember;
@property(retain, nonatomic) MMTimer *m_onePersonCheckFroMinimizeTimer; // @synthesize m_onePersonCheckFroMinimizeTimer=_m_onePersonCheckFroMinimizeTimer;
@property(retain, nonatomic) MMTimer *m_timeOutTimer; // @synthesize m_timeOutTimer=_m_timeOutTimer;
@property(retain, nonatomic) NSArray *m_contactArrayOther; // @synthesize m_contactArrayOther=_m_contactArrayOther;
@property(retain, nonatomic) NSArray *m_contactWaitList; // @synthesize m_contactWaitList=_m_contactWaitList;
@property(retain, nonatomic) NSArray *m_memberDisplayBigHeadList; // @synthesize m_memberDisplayBigHeadList=_m_memberDisplayBigHeadList;
@property(retain, nonatomic) NSArray *m_memberWaitList; // @synthesize m_memberWaitList=_m_memberWaitList;
@property(retain, nonatomic) NSDictionary *m_memberTalkingDic; // @synthesize m_memberTalkingDic=_m_memberTalkingDic;
@property(retain, nonatomic) NSArray *m_memberTalkArray; // @synthesize m_memberTalkArray=_m_memberTalkArray;
@property(retain, nonatomic) NSDictionary *m_videoMemberInfo; // @synthesize m_videoMemberInfo=_m_videoMemberInfo;
@property(nonatomic) unsigned int m_messageId; // @synthesize m_messageId=_m_messageId;
@property(retain, nonatomic) CContact *m_contactInviteMe; // @synthesize m_contactInviteMe=_m_contactInviteMe;
@property(retain, nonatomic) MMConfSDKMemberMgr *m_group; // @synthesize m_group=_m_group;
@property(retain, nonatomic) MMTimer *m_deviceStateInfoTimer; // @synthesize m_deviceStateInfoTimer=_m_deviceStateInfoTimer;
@property(nonatomic) int m_deviceStateInfoCounter; // @synthesize m_deviceStateInfoCounter=_m_deviceStateInfoCounter;
@property(nonatomic) int multiPathCellularCounter; // @synthesize multiPathCellularCounter=_multiPathCellularCounter;
@property(retain, nonatomic) MMTimer *hideMultiPathCellularTimer; // @synthesize hideMultiPathCellularTimer=_hideMultiPathCellularTimer;
@property(retain, nonatomic) MMTimer *checkMultiPathCellularTimer; // @synthesize checkMultiPathCellularTimer=_checkMultiPathCellularTimer;
@property(retain, nonatomic) MMTimer *m_checkQualityTimer; // @synthesize m_checkQualityTimer=_m_checkQualityTimer;
@property(retain, nonatomic) MMTimer *m_updateMessageTimer; // @synthesize m_updateMessageTimer=_m_updateMessageTimer;
@property(retain, nonatomic) MMTimer *m_checkTalkingTimer; // @synthesize m_checkTalkingTimer=_m_checkTalkingTimer;
@property(nonatomic) _Bool isMemberWaitListUpdated; // @synthesize isMemberWaitListUpdated=_isMemberWaitListUpdated;
@property(nonatomic) _Bool isMemberTalkingListUpdated; // @synthesize isMemberTalkingListUpdated=_isMemberTalkingListUpdated;
@property(nonatomic) _Bool isMemberDisplayBigHeadListUpdated; // @synthesize isMemberDisplayBigHeadListUpdated=_isMemberDisplayBigHeadListUpdated;
@property(nonatomic) _Bool m_isMinimizeMode; // @synthesize m_isMinimizeMode=_m_isMinimizeMode;
@property(nonatomic) _Bool m_hasBlurBackground; // @synthesize m_hasBlurBackground=_m_hasBlurBackground;
@property(nonatomic) _Bool m_deviceLaunchSuccess; // @synthesize m_deviceLaunchSuccess=_m_deviceLaunchSuccess;
@property(nonatomic) _Bool m_talkReady; // @synthesize m_talkReady=_m_talkReady;
@property(nonatomic) _Bool m_hasStartTimerView; // @synthesize m_hasStartTimerView=_m_hasStartTimerView;
@property(nonatomic) _Bool m_hasClickHangupButton; // @synthesize m_hasClickHangupButton=_m_hasClickHangupButton;
@property(nonatomic) _Bool m_hasClickAcceptButton; // @synthesize m_hasClickAcceptButton=_m_hasClickAcceptButton;
@property(nonatomic) int m_layoutType; // @synthesize m_layoutType=_m_layoutType;
@property(retain, nonatomic) UIImageView *m_backgroundView; // @synthesize m_backgroundView=_m_backgroundView;
@property(retain, nonatomic) MultitalkSecondOperateView *m_secondTalkingView; // @synthesize m_secondTalkingView=_m_secondTalkingView;
@property(nonatomic) _Bool shouldHideBottomOperatePanel; // @synthesize shouldHideBottomOperatePanel=_shouldHideBottomOperatePanel;
@property(nonatomic) _Bool isBottomOperatePanelInited; // @synthesize isBottomOperatePanelInited=_isBottomOperatePanelInited;
@property(retain, nonatomic) MultiTalkBottomOperatePanel *bottomOperatePanel; // @synthesize bottomOperatePanel=_bottomOperatePanel;
@property(retain, nonatomic) MultiTalkBeforeTalkingOperateView *m_beforeTalkingView; // @synthesize m_beforeTalkingView=_m_beforeTalkingView;
@property(retain, nonatomic) UIView<MultiTalkMembersViewProtocol> *m_contactView; // @synthesize m_contactView=_m_contactView;
@property(retain, nonatomic) MultiTalkScreenSharingAudienceViewController *screenSharingAudienceViewController; // @synthesize screenSharingAudienceViewController=_screenSharingAudienceViewController;
@property(nonatomic) _Bool isFromNewIlink; // @synthesize isFromNewIlink=_isFromNewIlink;
@property(nonatomic) _Bool m_connect_hangup; // @synthesize m_connect_hangup=_m_connect_hangup;
@property(nonatomic) __weak id <MultiTalkMainViewControllerDelegate> m_mainWindowDelegate; // @synthesize m_mainWindowDelegate=_m_mainWindowDelegate;
@property(nonatomic) _Bool m_isCaller; // @synthesize m_isCaller=_m_isCaller;
@property(nonatomic) _Bool m_isMinCardExpandIng; // @synthesize m_isMinCardExpandIng;
@property(retain, nonatomic) UIImageView *m_minCardModeBackgroundViewMaskView; // @synthesize m_minCardModeBackgroundViewMaskView;
@property(retain, nonatomic) UIImageView *m_minCardModeBackgroundViewBlurView; // @synthesize m_minCardModeBackgroundViewBlurView;
@property(retain, nonatomic) MMUIView *m_minCardModeBackgroundView; // @synthesize m_minCardModeBackgroundView;
- (void)multiTalkScreenSharingAudienceViewController:(id)arg1 didTapToChangeOperationViewsAppearance:(_Bool)arg2;
- (void)multiTalkScreenSharingAudienceViewControllerDidClose:(id)arg1;
- (void)onMultiSelectContactReturn:(id)arg1;
- (void)addMembersToIlinkChatRoomGroup:(id)arg1;
- (id)getMembersInRoom;
- (unsigned long long)getMembersInRoomNum;
- (_Bool)getIfMemberAlreadyInRoom:(id)arg1;
- (long long)cameraModuleReportScene;
- (void)cameraModuleInterruptionCancel:(id)arg1;
- (void)cameraModuleInterruptionEnd:(id)arg1;
- (void)cameraModuleInterruptionBegin:(id)arg1;
- (_Bool)shouldBlockSlipGesture;
- (void)onMinimizeTransitionBeginWithoutContext;
- (void)onMinimizeTransitionChanged:(double)arg1 translation:(struct CGPoint)arg2;
- (void)onMinimizeAnimationRecoverDone;
- (void)onMinimizeAnimationCompleteDone;
- (void)onMinimizeTransitionEnd:(unsigned int)arg1 isComplete:(_Bool)arg2;
- (void)onMinimizeTransitionBegin:(unsigned int)arg1;
- (id)getMinimizationTransitionContext;
- (void)onFinishMinimizeCircleInteraction:(_Bool)arg1;
- (_Bool)shouldBeginMinimizeCircleInteraction;
- (_Bool)isSupportScreenEdgeSwipeFromLeftToRight:(id)arg1;
- (_Bool)useNewMinimizeTransition:(id)arg1 withTransitionType:(unsigned int)arg2;
- (id)mmNavigationController:(id)arg1 interactionControllerForAnimationController:(id)arg2;
- (id)mmNavigationController:(id)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(id)arg3 toViewController:(id)arg4;
- (void)slipToMinimizeView:(id)arg1 talkReady:(_Bool)arg2;
- (struct CGRect)viewRect;
- (struct CGSize)viewSize;
- (void)resetNormalView;
- (void)clearPanGesture;
- (void)addScreenEdgePanGestureRecognizer:(id)arg1;
- (void)initMinimizePanGesture;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)applicationWillEnterForeground;
- (void)adjustViewAndNavBarRect;
- (void)OnRecordDeniedByWeChat;
- (void)OnRecordDenied;
- (void)OnRecordPermissioned;
- (id)onMultiTalkMainWindowGetMinimizeImage;
- (id)onMultiTalkMainWindowGetMainRootView;
- (struct CGRect)onMultiTalkMainWindowRequestMinimizeFrame;
- (void)onMultiTalkMainWindowExtendFromCollapseAnimationDidEnd;
- (void)onMultiTalkMainWindowCollapseAnimationWillStart;
- (void)onMultiTalkMainWindowCollapseAnimationDidEnd;
- (void)onMultiTalkMainWindowExtendFromCollapseAnimationWillStart;
- (void)onMultiTalkMainWindowQuitAnimationDidEnd;
- (void)onMultiTalkMainWindowQuitAnimationWillStart;
- (void)onMultiTalkMainWindowExtendAnimationDidEnd;
- (void)clearBlurMode;
- (void)showBlurMode;
- (void)onClickTipsBtn:(unsigned long long)arg1;
- (int)multitalkSecondOperatePanelLayoutType;
- (unsigned long long)multitalkSecondOperateRoomKey;
- (unsigned long long)multitalkSecondOperateRoomID;
- (void)onMultitalkSecondOperateViewMinimizeButtonClick;
- (void)onMultitalkSecondOperateViewShareScreen;
- (void)onMultitalkSecondOperateViewAddMember;
- (void)routePickerViewDidEndPresentingRoutes:(id)arg1;
- (void)routePickerViewWillBeginPresentingRoutes:(id)arg1;
- (void)showAirplayOvertime;
- (void)showAirplayLoading;
- (void)showAirplay;
- (void)addMultiAudioDeviceView;
- (_Bool)getIfTalkReady;
- (void)setPanelSpeakerReady:(_Bool)arg1;
- (void)changeAudioToPort:(id)arg1 hasChanged:(_Bool)arg2;
- (void)showToastOnMultiTalkVC:(id)arg1;
- (_Bool)showAirplayOrJustChange;
- (void)updateProximityWithPort:(id)arg1;
- (id)getSpeakerBtnText:(id)arg1;
- (id)curOutputPort;
- (_Bool)hasExtenalOutput;
- (id)settingPortType;
- (void)multiTalkBottomOperatePanelDidUpdateSpeakerButtonState:(id)arg1;
- (void)onMultiTalkBottomOperatePanelArrowButtonClick;
- (unsigned long long)getCurrentRoomKey;
- (unsigned long long)getCurrentRoomId;
- (void)onMultiTalkBottomOperatePanelOpenMultiPathCellularSetting;
- (void)onMultiTalkBottomOperatePanelFlipCameraButtonClick;
- (void)onMultiTalkBottomOperatePanelHangup;
- (void)onMultiTalkBottomOperatePanelSpeakerOff;
- (void)onMultiTalkBottomOperatePanelSpeakerOn;
- (void)onMultiTalkBottomOperatePanelMicrophoneOff;
- (void)onMultiTalkBottomOperatePanelMicrophoneOn;
- (void)onMultiTalkBottomOperatePanelVideoClose;
- (void)_onMultiTalkBottomOperatePanelVideoOpen;
- (void)onMultiTalkBottomOperatePanelVideoOpen;
- (unsigned long long)getBeforeTalkingOtherMemberCount;
- (void)onMultiTalkBeforeTalkingOperateViewMinimizeWithNotAnimation;
- (void)onMultiTalkBeforeTalkingOperateViewMinimize;
- (void)onMultiTalkBeforeTalkingOperateViewEnterCall;
- (void)onMultiTalkBeforeTalkingOperateViewHanup;
- (void)callAcceptDelegate;
- (void)callHangupDelegate;
- (void)realCallHangupDelegate;
- (double)multiTalkMembersViewBottomOperationPanelDisplayHeight;
- (double)multiTalkMembersView:(id)arg1 bottomOperationPanelDisplayHeight:(int)arg2;
- (id)onMultiTalkMemberGetCallerName:(id)arg1;
- (int)multiTalkMembersViewPanelLayoutType;
- (unsigned long long)multiTalkMembersViewRoomKey;
- (unsigned long long)multiTalkMembersViewRoomId;
- (id)onMultiTalkMembersViewMemberThatInviteMeBeforeTalking;
- (unsigned long long)onMultiTalkMembersViewMemberCountBeforeTalking;
- (id)onMultiTalkMembersViewMemberBeforeTalkingAtIndex:(unsigned long long)arg1;
- (id)onMultiTalkMembersViewGetVideoMember:(id)arg1;
- (void)onMultiTalkMembersViewChangeOperationViewsAppearance:(_Bool)arg1;
- (_Bool)onMultiTalkMembersViewIsSharingScreenUser:(id)arg1;
- (void)onMultiTalkMembersViewUpdateVideoDisplay:(id)arg1;
- (void)onMultiTalkMembersViewUpdateSelectedUserNames:(id)arg1 remainingVisableUserNames:(id)arg2;
- (void)onMultiTalkMembersViewChangedToNormalViewFromShareScreenView:(_Bool)arg1;
- (void)onMultiTalkMembersViewDidLayoutCells:(id)arg1;
- (void)multiTalkMembersView:(id)arg1 onChangedToBigViewWithAnimation:(_Bool)arg2 isSharedScreenData:(_Bool)arg3;
- (void)onMultiTalkMembersViewClickdToBigViewWithAnimation:(_Bool)arg1 isSharedScreenData:(_Bool)arg2;
- (void)onMultiTalkMembersViewAnimateToOnePerson;
- (id)multiTalkMembersViewMembers;
- (id)onMultiTalkMembersViewMemberAtIndex:(unsigned long long)arg1;
- (unsigned long long)onMultiTalkMembersViewTotalMemberCount;
- (id)onMultiTalkMembersViewRequestRenderForUsername:(id)arg1;
- (_Bool)onMultiTalkMembersViewIsVideoUserName:(id)arg1;
- (void)onMultiSelectContactsEndWithReportSelectedCount:(unsigned int)arg1 hasReachLimit:(_Bool)arg2 clickCount:(unsigned int)arg3;
- (void)onSingleSelectContactDidFinishSelect:(id)arg1;
- (void)onMultiSelectContactsDidFinishSelect:(id)arg1;
- (void)onMultiTalkSysInterruptEnd;
- (void)onMultiTalkSysInterrupt;
- (void)onMultiTalkMgrBeginToCleanStatus;
- (void)screenSharingLogic:(id)arg1 didTransiteSharingInViewController:(id)arg2;
- (void)screenSharingLogic:(id)arg1 willTransiteSharingInViewController:(id)arg2;
- (void)screenSharingLogic:(id)arg1 didResumeSharingInViewController:(id)arg2;
- (void)screenSharingLogic:(id)arg1 didPauseSharingInViewController:(id)arg2;
- (void)screenSharingLogic:(id)arg1 didStopSharingInViewController:(id)arg2;
- (void)screenSharingLogic:(id)arg1 didStartSharingInViewController:(id)arg2;
- (id)groupForScreenSharingLogic;
@property(readonly, nonatomic) MultiTalkScreenSharingLogic *screenSharingLogic; // @synthesize screenSharingLogic=_screenSharingLogic;
- (void)recoverVideoOn:(_Bool)arg1 screenStatus:(unsigned int)arg2;
- (void)closeVideoSendAndRecv;
- (void)changeVideoModeBaseOnNetwork;
- (void)resubscribeLargeVideo;
- (void)onOtherDeviceHandleTalk:(id)arg1;
- (void)onMultiTalkRedirectOk;
- (void)onMultiTalkMgrChangeToLowNetwork;
- (void)onMultiTalkMgrChangeToHighWWan;
- (void)onMultiTalkMgrChangeToWiFi;
- (void)onMultiTalkMgrChangeToUnReachable;
- (void)onMultiTalkMgrNetworkChange;
- (void)delayCheckUnReachable;
- (void)onMultiTalkMgrVideoDeviceAuthFailed;
- (void)onMultiTalkMgrChangeVideoFailed;
- (void)onMultiTalkMgrVideoSessionStopComplete;
- (void)onMultiTalkMgrVideoSessionStartComplete;
- (void)onReceiveVideoMemberChangeMsg:(id)arg1 extDic:(id)arg2;
- (void)onMultiTalkMgrOpenVideoServerNotAllowed;
- (void)OnVideoStateChange:(_Bool)arg1 VideoOn:(_Bool)arg2;
- (void)OnScreenVideoStateChange:(_Bool)arg1 ScreenOn:(_Bool)arg2;
- (void)OnCameraVideoStateChange:(_Bool)arg1 CameraOn:(_Bool)arg2;
- (void)updateSpeakerButtonStatus:(id)arg1 hasExtenalOutput:(_Bool)arg2;
- (void)multiTalkMembersView:(id)arg1 didReloadScreenSharingAudienceWithEnable:(_Bool)arg2;
- (void)reloadScreenSharingAudienceWithEnable:(_Bool)arg1;
- (void)onIlinkChangeToMultiTalk:(double)arg1 isMicMute:(_Bool)arg2 isSpeakerOn:(_Bool)arg3 localVideoClosed:(_Bool)arg4;
- (void)onMultiTalkFailToAddMinimizeTask;
- (void)onBackgroundSelect:(_Bool)arg1;
- (void)onRejectToOpenCameraForServerOverloadWithTimeInterval:(int)arg1;
- (void)onRejectToCreateRoomForServerOverloadWithTimeInterval:(int)arg1;
- (void)onMultiTalkBannerItemChange:(id)arg1;
- (void)onAddMultiTalkMemberFailedDueToRiskWithGroupInfo:(id)arg1;
- (void)onAddMultiTalkMemberResult:(_Bool)arg1 errorType:(int)arg2 groupInfo:(id)arg3;
- (void)onAlertError;
- (void)onCreateFailedDueToRisk;
- (void)onErr:(int)arg1;
- (void)onSpeakerStateChange:(_Bool)arg1;
- (void)onMuteStateChange:(_Bool)arg1;
- (void)onMultiTalkDeviceLauchSuccess;
- (void)onMultiTalkReady;
- (void)hideMultiPathCellularTips;
- (void)uploadDeviceStateCheck;
- (void)checkUsingCellar;
- (void)tryStartTimerView;
- (void)onMemberChange:(id)arg1;
- (void)onReceiveMissMultiTalk:(id)arg1;
- (void)onInviteOrAcceptTimeout:(id)arg1;
- (void)onEnterMultiTalk:(id)arg1;
- (void)doCancelCreateMultiTalk:(id)arg1;
- (void)onCancelCreateMultiTalk:(id)arg1;
- (void)onCreateMultiTalk:(id)arg1;
- (void)onInviteMultiTalk:(id)arg1;
- (void)changeToTalkingLayout;
- (void)changeToJoinACallLayout;
- (void)changeToReceiveACallLayout;
- (void)setStatusBarHidden:(_Bool)arg1 withAnimation:(long long)arg2;
- (void)setStatusBarHidden:(_Bool)arg1;
- (_Bool)isIgnoreSpeakerButtonDevice;
- (_Bool)isUsingEarDevice;
- (void)hangupMultiTalkByCallEnd;
- (void)onClickAddMemberButton;
- (void)initBeforeTalkingView;
- (void)initSecondTalkingView;
- (void)initBottomOperatePanel;
- (void)initContactView;
- (void)updateBackgroundViewBlur;
- (void)initBackgroundView;
- (void)getMemberQualityInfoList;
- (void)checkTalkMember;
- (void)initCheckQualityTimer;
- (void)initCheckTalkingTimer;
- (void)updateMessageDuration;
- (void)initUpdateMessageTimer;
- (void)timeOutLogic;
- (void)initTimeOutTimer;
- (void)initOnePersonCheck;
- (void)updateVideoMemberInfo;
- (void)updateMemberDisplayBigHeadList;
- (void)updateMemberWaitList;
- (void)updateContactWaitList;
- (void)updateContactOtherList;
- (void)updateMemberTalkingList;
- (void)checkIfOnePerson;
- (_Bool)isMemberReachLimit;
- (_Bool)isTheSameWithGroup:(id)arg1;
- (void)updateGroupInfo:(id)arg1;
- (void)updateMessageId:(unsigned int)arg1;
- (id)groupInfo;
- (void)restoreMinCardStatusBarColor;
- (void)onMinCardMinimize;
- (void)onMinCardAcceptCall;
- (void)onMinCardHangup;
- (void)scrollClickClose;
- (void)handleContentViewPanGesture:(id)arg1;
- (id)getMinCardContentView;
- (void)expandVideoVipView;
- (void)onMinCardExpandVideoVipViewButton;
- (void)updateAccessibility;
- (void)layoutMinCardExpandVideoVipViewButton;
- (void)updateMinCardmMemberDisplayBigHeadView;
- (void)resetMinCardmMemberDisplayBigHeadView;
- (void)layoutMinCardmMemberDisplayBigHeadView;
- (void)layMinCardModeBackgroundViewMaskView;
- (void)layoutMinCardBlurView;
- (void)layoutMinCardDescriptionLabel;
- (void)layoutMinUsernameLabel;
- (void)layoutMinCardButton;
- (void)layoutMinCardHeadImageView;
- (void)layMinCardModeBackgroundView;
- (void)layMinCardModeBackgroundViewBlurView;
- (void)resetMinCardRound:(id)arg1;
- (struct CGRect)getMinCardSize;
- (void)resetMinCardModeBackgroundViewInfo;
- (void)layMinCardModeView;
- (void)resetExpandViewElement:(_Bool)arg1;
- (void)changeViewInLayoutType;
- (void)viewDidLayoutSubviews;
- (void)layoutSubviewsManually;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidTransitionToNewSize;
- (void)didReceiveMemoryWarning;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (_Bool)useTransparentNavibar;
- (void)viewDidLoad;
- (void)functionReport;
- (void)videoDurationReport;
- (void)durationReport;
- (void)connectReportFailed;
- (void)connectReportSuccess;
- (void)callReport;
- (void)whenGoingToResign;
- (void)dealloc;
- (id)init;
- (unsigned long long)supportedInterfaceOrientations;
- (void)updateProximityBySpeakerButtonState;
- (void)hangupManually;
- (_Bool)isVideoSteamingWithUserName:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

