//
// ClassDump By HuangBai Private
//  Copyright (C) 1997-2019 Steve Nygard. Updated HuangBai-2024 
//

#import <objc/NSObject.h>

@class NSString;

@interface WCTDatabase : NSObject
{
    struct Recyclable<WCDB::InnerDatabase *> _databaseHolder;
    _Bool m_isInMemory;
    void *_database;
}

+ (void)swizzleCRUDMethod;
+ (id)databaseWithRouterInfo:(id)arg1;
+ (void)simulateIOError:(unsigned long long)arg1;
+ (void)purgeAll;
+ (_Bool)setDefaultTemporaryDatabaseFileDirectory:(id)arg1;
+ (void)globalTraceBusy:(CDUnknownBlockType)arg1 withTimeOut:(double)arg2;
+ (void)globalTraceDatabaseOperation:(CDUnknownBlockType)arg1;
+ (void)globalTraceSQL:(CDUnknownBlockType)arg1;
+ (void)globalTracePerformance:(CDUnknownBlockType)arg1;
+ (void)globalTraceError:(CDUnknownBlockType)arg1;
+ (id)sourceId;
+ (id)version;
+ (void)registerAuxiliaryFunction:(const struct FTS5AuxiliaryFunctionModule *)arg1 named:(id)arg2;
+ (void)configTraditionalChineseDict:(id)arg1;
+ (void)configPinYinDict:(id)arg1;
+ (void)registerTokenizer:(const void *)arg1 named:(id)arg2;
+ (_Bool)registerZSTDDict:(id)arg1 andDictId:(unsigned char)arg2;
+ (id)trainDictWithDatas:(id)arg1 andDictId:(unsigned char)arg2;
+ (id)trainDictWithStrings:(id)arg1 andDictId:(unsigned char)arg2;
+ (id)getABTestConfigWithName:(id)arg1;
+ (void)removeABTestConfigWithName:(id)arg1;
+ (void)setABTestConfigWithName:(id)arg1 andValue:(id)arg2;
+ (void)registerScalarFunction:(const struct ScalarFunctionModule *)arg1 named:(id)arg2;
+ (void)setDefaultCipherConfiguration:(int)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (struct RecyclableHandle)generateHandle:(_Bool)arg1;
- (id)error;
- (_Bool)incrementalVacuum:(int)arg1;
- (void)enableAutoVacuum:(_Bool)arg1;
- (_Bool)vacuum:(CDUnknownBlockType)arg1;
- (void)close:(CDUnknownBlockType)arg1;
@property(readonly) NSString *path;
@property long long tag;
- (void)dealloc;
- (id)initInMemoryDatabase;
- (id)initWithPath:(id)arg1;
- (id)initWithUnsafeDatabase:(void *)arg1;
- (id)swizzledPrepareUpdate;
- (id)swizzledPrepareSelect;
- (id)swizzledPrepareDelete;
- (id)swizzledPrepareInsert;
- (void)showFileInfo;
- (void)showUsageForTable:(id)arg1;
- (void)showUsage;
- (id)getFileDescription:(id)arg1 ofRoot:(id)arg2;
- (void)enablePerformanceTrace:(_Bool)arg1;
- (void)enableSQLTrace:(_Bool)arg1;
- (void)enableSecureDelete;
- (_Bool)runPausableTransactionWithOneLoop:(CDUnknownBlockType)arg1;
- (_Bool)runTransaction:(CDUnknownBlockType)arg1;
- (void)rollbackTransaction;
- (_Bool)commitOrRollbackTransaction;
- (_Bool)beginTransaction;
- (_Bool)isInTransaction;
- (_Bool)dropIndex:(id)arg1;
- (_Bool)dropTable:(id)arg1;
- (_Bool)createVirtualTable:(id)arg1 withClass:(Class)arg2;
- (id)getTable:(id)arg1 withClass:(Class)arg2;
- (_Bool)createTable:(id)arg1 withClass:(Class)arg2;
- (struct WCTOptionalBool)tableExists:(id)arg1;
- (void)unblockade;
- (void)blockade;
- (_Bool)isBlockaded;
- (void)close;
- (_Bool)canOpen;
- (_Bool)isOpened;
- (_Bool)passiveCheckpoint;
- (_Bool)truncateCheckpoint;
- (void)enableAutoCheckpoint:(_Bool)arg1;
- (void)purge;
- (struct WCTOptionalSize)getFilesSize;
- (id)paths;
- (_Bool)moveFilesToDirectory:(id)arg1;
- (_Bool)removeFiles;
- (void)enableFullSQLTrace:(_Bool)arg1;
- (void)traceSQL:(CDUnknownBlockType)arg1;
- (void)tracePerformance:(CDUnknownBlockType)arg1;
- (void)traceError:(CDUnknownBlockType)arg1;
- (void)addAuxiliaryFunction:(id)arg1;
- (void)addTokenizer:(id)arg1;
- (void)enableAutoMergeFTS5Index:(_Bool)arg1;
- (id)getRowsFromStatement:(const void *)arg1;
- (id)getColumnFromStatement:(const void *)arg1;
- (id)getRowFromStatement:(const void *)arg1;
- (id)getValueFromStatement:(const void *)arg1;
- (id)getRowsOnResultColumns:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 orders:(const void *)arg4 limit:(const void *)arg5 offset:(const void *)arg6;
- (id)getRowsOnResultColumns:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 limit:(const void *)arg4 offset:(const void *)arg5;
- (id)getRowsOnResultColumns:(const void *)arg1 fromTable:(id)arg2 orders:(const void *)arg3 limit:(const void *)arg4 offset:(const void *)arg5;
- (id)getRowsOnResultColumns:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 orders:(const void *)arg4 limit:(const void *)arg5;
- (id)getRowsOnResultColumns:(const void *)arg1 fromTable:(id)arg2 limit:(const void *)arg3 offset:(const void *)arg4;
- (id)getRowsOnResultColumns:(const void *)arg1 fromTable:(id)arg2 orders:(const void *)arg3 limit:(const void *)arg4;
- (id)getRowsOnResultColumns:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 limit:(const void *)arg4;
- (id)getRowsOnResultColumns:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 orders:(const void *)arg4;
- (id)getRowsOnResultColumns:(const void *)arg1 fromTable:(id)arg2 limit:(const void *)arg3;
- (id)getRowsOnResultColumns:(const void *)arg1 fromTable:(id)arg2 orders:(const void *)arg3;
- (id)getRowsOnResultColumns:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3;
- (id)getRowsOnResultColumns:(const void *)arg1 fromTable:(id)arg2;
- (id)getColumnOnResultColumn:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 orders:(const void *)arg4 limit:(const void *)arg5 offset:(const void *)arg6;
- (id)getColumnOnResultColumn:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 limit:(const void *)arg4 offset:(const void *)arg5;
- (id)getColumnOnResultColumn:(const void *)arg1 fromTable:(id)arg2 orders:(const void *)arg3 limit:(const void *)arg4 offset:(const void *)arg5;
- (id)getColumnOnResultColumn:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 orders:(const void *)arg4 limit:(const void *)arg5;
- (id)getColumnOnResultColumn:(const void *)arg1 fromTable:(id)arg2 limit:(const void *)arg3 offset:(const void *)arg4;
- (id)getColumnOnResultColumn:(const void *)arg1 fromTable:(id)arg2 orders:(const void *)arg3 limit:(const void *)arg4;
- (id)getColumnOnResultColumn:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 limit:(const void *)arg4;
- (id)getColumnOnResultColumn:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 orders:(const void *)arg4;
- (id)getColumnOnResultColumn:(const void *)arg1 fromTable:(id)arg2 limit:(const void *)arg3;
- (id)getColumnOnResultColumn:(const void *)arg1 fromTable:(id)arg2 orders:(const void *)arg3;
- (id)getColumnOnResultColumn:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3;
- (id)getColumnOnResultColumn:(const void *)arg1 fromTable:(id)arg2;
- (id)getRowOnResultColumns:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 orders:(const void *)arg4 offset:(const void *)arg5;
- (id)getRowOnResultColumns:(const void *)arg1 fromTable:(id)arg2 orders:(const void *)arg3 offset:(const void *)arg4;
- (id)getRowOnResultColumns:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 offset:(const void *)arg4;
- (id)getRowOnResultColumns:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 orders:(const void *)arg4;
- (id)getRowOnResultColumns:(const void *)arg1 fromTable:(id)arg2 offset:(const void *)arg3;
- (id)getRowOnResultColumns:(const void *)arg1 fromTable:(id)arg2 orders:(const void *)arg3;
- (id)getRowOnResultColumns:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3;
- (id)getRowOnResultColumns:(const void *)arg1 fromTable:(id)arg2;
- (id)getValueOnResultColumn:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 orders:(const void *)arg4 offset:(const void *)arg5;
- (id)getValueOnResultColumn:(const void *)arg1 fromTable:(id)arg2 orders:(const void *)arg3 offset:(const void *)arg4;
- (id)getValueOnResultColumn:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 offset:(const void *)arg4;
- (id)getValueOnResultColumn:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 orders:(const void *)arg4;
- (id)getValueOnResultColumn:(const void *)arg1 fromTable:(id)arg2 offset:(const void *)arg3;
- (id)getValueOnResultColumn:(const void *)arg1 fromTable:(id)arg2 orders:(const void *)arg3;
- (id)getValueOnResultColumn:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3;
- (id)getValueOnResultColumn:(const void *)arg1 fromTable:(id)arg2;
- (_Bool)deleteFromTable:(id)arg1 where:(const void *)arg2 orders:(const void *)arg3 limit:(const void *)arg4 offset:(const void *)arg5;
- (_Bool)deleteFromTable:(id)arg1 orders:(const void *)arg2 limit:(const void *)arg3 offset:(const void *)arg4;
- (_Bool)deleteFromTable:(id)arg1 where:(const void *)arg2 limit:(const void *)arg3 offset:(const void *)arg4;
- (_Bool)deleteFromTable:(id)arg1 where:(const void *)arg2 orders:(const void *)arg3 limit:(const void *)arg4;
- (_Bool)deleteFromTable:(id)arg1 limit:(const void *)arg2 offset:(const void *)arg3;
- (_Bool)deleteFromTable:(id)arg1 orders:(const void *)arg2 limit:(const void *)arg3;
- (_Bool)deleteFromTable:(id)arg1 where:(const void *)arg2 limit:(const void *)arg3;
- (_Bool)deleteFromTable:(id)arg1 limit:(const void *)arg2;
- (_Bool)deleteFromTable:(id)arg1 where:(const void *)arg2;
- (_Bool)deleteFromTable:(id)arg1;
- (_Bool)updateTable:(id)arg1 setProperty:(const void *)arg2 toValue:(id)arg3 where:(const void *)arg4 orders:(const void *)arg5 limit:(const void *)arg6 offset:(const void *)arg7;
- (_Bool)updateTable:(id)arg1 setProperty:(const void *)arg2 toValue:(id)arg3 orders:(const void *)arg4 limit:(const void *)arg5 offset:(const void *)arg6;
- (_Bool)updateTable:(id)arg1 setProperty:(const void *)arg2 toValue:(id)arg3 where:(const void *)arg4 limit:(const void *)arg5 offset:(const void *)arg6;
- (_Bool)updateTable:(id)arg1 setProperty:(const void *)arg2 toValue:(id)arg3 where:(const void *)arg4 orders:(const void *)arg5 limit:(const void *)arg6;
- (_Bool)updateTable:(id)arg1 setProperty:(const void *)arg2 toValue:(id)arg3 limit:(const void *)arg4 offset:(const void *)arg5;
- (_Bool)updateTable:(id)arg1 setProperty:(const void *)arg2 toValue:(id)arg3 orders:(const void *)arg4 limit:(const void *)arg5;
- (_Bool)updateTable:(id)arg1 setProperty:(const void *)arg2 toValue:(id)arg3 where:(const void *)arg4 limit:(const void *)arg5;
- (_Bool)updateTable:(id)arg1 setProperty:(const void *)arg2 toValue:(id)arg3 limit:(const void *)arg4;
- (_Bool)updateTable:(id)arg1 setProperty:(const void *)arg2 toValue:(id)arg3 where:(const void *)arg4;
- (_Bool)updateTable:(id)arg1 setProperty:(const void *)arg2 toValue:(id)arg3;
- (_Bool)updateTable:(id)arg1 setProperties:(const void *)arg2 toRow:(id)arg3 where:(const void *)arg4 orders:(const void *)arg5 limit:(const void *)arg6 offset:(const void *)arg7;
- (_Bool)updateTable:(id)arg1 setProperties:(const void *)arg2 toRow:(id)arg3 orders:(const void *)arg4 limit:(const void *)arg5 offset:(const void *)arg6;
- (_Bool)updateTable:(id)arg1 setProperties:(const void *)arg2 toRow:(id)arg3 where:(const void *)arg4 limit:(const void *)arg5 offset:(const void *)arg6;
- (_Bool)updateTable:(id)arg1 setProperties:(const void *)arg2 toRow:(id)arg3 where:(const void *)arg4 orders:(const void *)arg5 limit:(const void *)arg6;
- (_Bool)updateTable:(id)arg1 setProperties:(const void *)arg2 toRow:(id)arg3 limit:(const void *)arg4 offset:(const void *)arg5;
- (_Bool)updateTable:(id)arg1 setProperties:(const void *)arg2 toRow:(id)arg3 orders:(const void *)arg4 limit:(const void *)arg5;
- (_Bool)updateTable:(id)arg1 setProperties:(const void *)arg2 toRow:(id)arg3 where:(const void *)arg4 limit:(const void *)arg5;
- (_Bool)updateTable:(id)arg1 setProperties:(const void *)arg2 toRow:(id)arg3 limit:(const void *)arg4;
- (_Bool)updateTable:(id)arg1 setProperties:(const void *)arg2 toRow:(id)arg3 where:(const void *)arg4;
- (_Bool)updateTable:(id)arg1 setProperties:(const void *)arg2 toRow:(id)arg3;
- (_Bool)updateTable:(id)arg1 setProperties:(const void *)arg2 toObject:(id)arg3 where:(const void *)arg4 orders:(const void *)arg5 limit:(const void *)arg6 offset:(const void *)arg7;
- (_Bool)updateTable:(id)arg1 setProperties:(const void *)arg2 toObject:(id)arg3 orders:(const void *)arg4 limit:(const void *)arg5 offset:(const void *)arg6;
- (_Bool)updateTable:(id)arg1 setProperties:(const void *)arg2 toObject:(id)arg3 where:(const void *)arg4 limit:(const void *)arg5 offset:(const void *)arg6;
- (_Bool)updateTable:(id)arg1 setProperties:(const void *)arg2 toObject:(id)arg3 where:(const void *)arg4 orders:(const void *)arg5 limit:(const void *)arg6;
- (_Bool)updateTable:(id)arg1 setProperties:(const void *)arg2 toObject:(id)arg3 limit:(const void *)arg4 offset:(const void *)arg5;
- (_Bool)updateTable:(id)arg1 setProperties:(const void *)arg2 toObject:(id)arg3 orders:(const void *)arg4 limit:(const void *)arg5;
- (_Bool)updateTable:(id)arg1 setProperties:(const void *)arg2 toObject:(id)arg3 where:(const void *)arg4 limit:(const void *)arg5;
- (_Bool)updateTable:(id)arg1 setProperties:(const void *)arg2 toObject:(id)arg3 limit:(const void *)arg4;
- (_Bool)updateTable:(id)arg1 setProperties:(const void *)arg2 toObject:(id)arg3 where:(const void *)arg4;
- (_Bool)updateTable:(id)arg1 setProperties:(const void *)arg2 toObject:(id)arg3;
- (_Bool)insertOrIgnoreObjects:(id)arg1 onProperties:(const void *)arg2 intoTable:(id)arg3;
- (_Bool)insertOrIgnoreObject:(id)arg1 onProperties:(const void *)arg2 intoTable:(id)arg3;
- (_Bool)insertOrReplaceObjects:(id)arg1 onProperties:(const void *)arg2 intoTable:(id)arg3;
- (_Bool)insertOrReplaceObject:(id)arg1 onProperties:(const void *)arg2 intoTable:(id)arg3;
- (_Bool)insertObjects:(id)arg1 onProperties:(const void *)arg2 intoTable:(id)arg3;
- (_Bool)insertObject:(id)arg1 onProperties:(const void *)arg2 intoTable:(id)arg3;
- (_Bool)insertOrIgnoreObjects:(id)arg1 intoTable:(id)arg2;
- (_Bool)insertOrIgnoreObject:(id)arg1 intoTable:(id)arg2;
- (_Bool)insertOrReplaceObjects:(id)arg1 intoTable:(id)arg2;
- (_Bool)insertOrReplaceObject:(id)arg1 intoTable:(id)arg2;
- (_Bool)insertObjects:(id)arg1 intoTable:(id)arg2;
- (_Bool)insertObject:(id)arg1 intoTable:(id)arg2;
- (id)getObjectsOnResultColumns:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 orders:(const void *)arg4 limit:(const void *)arg5 offset:(const void *)arg6;
- (id)getObjectsOnResultColumns:(const void *)arg1 fromTable:(id)arg2 orders:(const void *)arg3 limit:(const void *)arg4 offset:(const void *)arg5;
- (id)getObjectsOnResultColumns:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 limit:(const void *)arg4 offset:(const void *)arg5;
- (id)getObjectsOnResultColumns:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 orders:(const void *)arg4 limit:(const void *)arg5;
- (id)getObjectsOnResultColumns:(const void *)arg1 fromTable:(id)arg2 limit:(const void *)arg3 offset:(const void *)arg4;
- (id)getObjectsOnResultColumns:(const void *)arg1 fromTable:(id)arg2 orders:(const void *)arg3 limit:(const void *)arg4;
- (id)getObjectsOnResultColumns:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 limit:(const void *)arg4;
- (id)getObjectsOnResultColumns:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 orders:(const void *)arg4;
- (id)getObjectsOnResultColumns:(const void *)arg1 fromTable:(id)arg2 limit:(const void *)arg3;
- (id)getObjectsOnResultColumns:(const void *)arg1 fromTable:(id)arg2 orders:(const void *)arg3;
- (id)getObjectsOnResultColumns:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3;
- (id)getObjectsOnResultColumns:(const void *)arg1 fromTable:(id)arg2;
- (id)getObjectOnResultColumns:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 orders:(const void *)arg4 offset:(const void *)arg5;
- (id)getObjectOnResultColumns:(const void *)arg1 fromTable:(id)arg2 orders:(const void *)arg3 offset:(const void *)arg4;
- (id)getObjectOnResultColumns:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 offset:(const void *)arg4;
- (id)getObjectOnResultColumns:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3 orders:(const void *)arg4;
- (id)getObjectOnResultColumns:(const void *)arg1 fromTable:(id)arg2 offset:(const void *)arg3;
- (id)getObjectOnResultColumns:(const void *)arg1 fromTable:(id)arg2 orders:(const void *)arg3;
- (id)getObjectOnResultColumns:(const void *)arg1 fromTable:(id)arg2 where:(const void *)arg3;
- (id)getObjectOnResultColumns:(const void *)arg1 fromTable:(id)arg2;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2 where:(const void *)arg3 orders:(const void *)arg4 limit:(const void *)arg5 offset:(const void *)arg6;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2 where:(const void *)arg3 limit:(const void *)arg4 offset:(const void *)arg5;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2 orders:(const void *)arg3 limit:(const void *)arg4 offset:(const void *)arg5;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2 where:(const void *)arg3 orders:(const void *)arg4 limit:(const void *)arg5;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2 limit:(const void *)arg3 offset:(const void *)arg4;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2 orders:(const void *)arg3 limit:(const void *)arg4;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2 where:(const void *)arg3 limit:(const void *)arg4;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2 where:(const void *)arg3 orders:(const void *)arg4;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2 limit:(const void *)arg3;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2 orders:(const void *)arg3;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2 where:(const void *)arg3;
- (id)getObjectsOfClass:(Class)arg1 fromTable:(id)arg2;
- (id)getObjectOfClass:(Class)arg1 fromTable:(id)arg2 where:(const void *)arg3 orders:(const void *)arg4 offset:(const void *)arg5;
- (id)getObjectOfClass:(Class)arg1 fromTable:(id)arg2 orders:(const void *)arg3 offset:(const void *)arg4;
- (id)getObjectOfClass:(Class)arg1 fromTable:(id)arg2 where:(const void *)arg3 offset:(const void *)arg4;
- (id)getObjectOfClass:(Class)arg1 fromTable:(id)arg2 where:(const void *)arg3 orders:(const void *)arg4;
- (id)getObjectOfClass:(Class)arg1 fromTable:(id)arg2 offset:(const void *)arg3;
- (id)getObjectOfClass:(Class)arg1 fromTable:(id)arg2 orders:(const void *)arg3;
- (id)getObjectOfClass:(Class)arg1 fromTable:(id)arg2 where:(const void *)arg3;
- (id)getObjectOfClass:(Class)arg1 fromTable:(id)arg2;
- (_Bool)rollbackCompression:(CDUnknownBlockType)arg1;
- (_Bool)isCompressed;
- (void)setNotificationWhenCompressed:(CDUnknownBlockType)arg1;
- (void)enableAutoCompression:(_Bool)arg1;
- (_Bool)stepCompression;
- (void)disableCompresssNewData:(_Bool)arg1;
- (void)setCompressionWithFilter:(CDUnknownBlockType)arg1;
- (_Bool)rawExecute:(id)arg1;
- (_Bool)execute:(const void *)arg1;
- (id)getHandle;
- (_Bool)isMigrated;
- (void)setNotificationWhenMigrated:(CDUnknownBlockType)arg1;
- (void)enableAutoMigration:(_Bool)arg1;
- (_Bool)stepMigration;
- (void)addMigration:(id)arg1 withSourceCipher:(id)arg2 withFilter:(CDUnknownBlockType)arg3;
- (void)addMigration:(id)arg1 withFilter:(CDUnknownBlockType)arg2;
- (void)addScalarFunction:(id)arg1;
- (void)enableLiteMode:(_Bool)arg1;
- (void)removeConfigForName:(id)arg1;
- (void)setConfig:(CDUnknownBlockType)arg1 withUninvocation:(CDUnknownBlockType)arg2 forName:(id)arg3;
- (void)setConfig:(CDUnknownBlockType)arg1 withUninvocation:(CDUnknownBlockType)arg2 forName:(id)arg3 withPriority:(int)arg4;
- (void)setCipherKey:(id)arg1 andCipherPageSize:(int)arg2 andCipherViersion:(int)arg3;
- (void)setCipherKey:(id)arg1 andCipherPageSize:(int)arg2;
- (void)setCipherKey:(id)arg1;
- (_Bool)containsDeposited;
- (_Bool)removeDeposited;
- (double)retrieve:(CDUnknownBlockType)arg1;
- (_Bool)backup;
- (void)enableAutoBackup:(_Bool)arg1;
- (_Bool)deposit;
- (void)filterBackup:(CDUnknownBlockType)arg1;
- (_Bool)isAlreadyCorrupted;
- (_Bool)checkIfCorrupted;
- (void)setNotificationWhenCorrupted:(CDUnknownBlockType)arg1;
- (id)prepareMultiSelect;
- (id)prepareSelect;
- (id)prepareUpdate;
- (id)prepareDelete;
- (id)prepareInsert;

@end

