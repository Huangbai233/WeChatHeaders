//
// ClassDump By HuangBai Private
//  Copyright (C) 1997-2019 Steve Nygard. Updated HuangBai-2024 
//

@class BTOftenReadBizCache, BTResortPerformanceItem, BrandMsgResortContext, BrandResortConfig, BrandSessionCache, BrandTLExptConfig, BrandTLMainSessionExposeItem, BrandTimelineMsgDB, FlutterBrandNavigator, MMBaseSessionStorage, MMFlutterInstance, MMTimer, MemoryMappedKV, NSData, NSDate, NSMutableArray, NSMutableDictionary, NSMutableSet, NSObject, NSString, WCEliminatedSlotMMKV;
@protocol OS_dispatch_queue;

@interface BrandTimelineMsgMgr
{
    _Bool _isMigratingData;
    _Bool _needUpdateMainSession;
    _Bool _isTimelinePageActive;
    _Bool _isTimelinePageDidScroll;
    _Bool _hasShowFirstGuideLine;
    _Bool _isTlPicPreloadCgiRequesting;
    _Bool _hasMainBizCellExposed;
    _Bool _msgExposedNeedReloadTableView;
    _Bool _isCurFlutterAffEnable;
    _Bool _isLastFlutterAffEnable;
    _Bool _isAffHasInit;
    _Bool _isInDelayPreload;
    _Bool _isCurrentResorting;
    _Bool _shouldUseNewFinderRecommendCardHorizontalStyle;
    unsigned int _serviceInitTs;
    unsigned int _tlPicPreloadSyncGapTimerLoopCount;
    unsigned int _tlPicPreloadUnreadCountBeforeSync;
    unsigned int _tlPicPreloadDownloadPicTimerLoopCount;
    unsigned int _tlPicPreloadDownloadStartTimeSec;
    unsigned int _tlPicPreloadDownloadPicCount;
    unsigned int _lastMemoryWarningTs;
    unsigned int _curResortCgiEvenId;
    unsigned int _validExposeUpgradeTime;
    MemoryMappedKV *_mappedKV;
    BrandTimelineMsgDB *_brandMsgDB;
    MMBaseSessionStorage *_sessionStorage;
    BrandSessionCache *_mainSessionCache;
    NSData *_oldSessionCacheData;
    NSObject<OS_dispatch_queue> *_m_workerThread;
    NSMutableArray *_arrTmpToAddMsg;
    unsigned long long _lastDeleteTooOldTLRecordTime;
    BTOftenReadBizCache *_oftenReadBizCache;
    NSData *_oldOftenReadBizCacheData;
    unsigned long long _currentTLMinExposedSeqId;
    NSDate *_lastExpandMoreSubscribedMsgDate;
    NSMutableSet *_recoFlowFeedbackCardIdHistory;
    NSString *_brandSessionFullFormattedMessage;
    MMTimer *_tlPicPreloadSyncGapTimer;
    MMTimer *_tlPicPreloadDownloadPicTimer;
    NSMutableArray *_tlPicPreloadDownloadPicUrlArr;
    BrandTLMainSessionExposeItem *_exposeItemInMainSession;
    MemoryMappedKV *_digestExposeMMKV;
    NSMutableArray *_arrRedDotReportItems;
    unsigned long long _lastRedDotReportTime;
    unsigned long long _lastInsertRecCardFakeSvrId;
    NSMutableDictionary *_cacheBrandFlowListModelFromSvrSupply;
    BrandTLExptConfig *_exptConfig;
    MMFlutterInstance *_preloadFlutterInstance;
    BrandTLExptConfig *_preloadExptConfig;
    FlutterBrandNavigator *_flutterNavigator;
    MMTimer *_checkReleaseInstanceTimer;
    unsigned long long _curResortScene;
    BrandMsgResortContext *_curResortContext;
    BrandResortConfig *_curResortConfig;
    BTResortPerformanceItem *_resortPerformance;
    CDUnknownBlockType _tlResortCompleteBlock;
    NSMutableArray *_batchPreloadFinderObjectIdArr;
    long long _mpFinderFlowStyleConfig;
    WCEliminatedSlotMMKV *_exposeCountSlotKV;
    WCEliminatedSlotMMKV *_exposeRatioSlotKV;
}

+ (_Bool)isBrandTimelineOpen;
+ (id)getAffBizManagerShareInstance;
+ (int)genAffTaskId;
+ (id)setOnlySubsFilterBizMsgType;
+ (_Bool)enableTLMagicBrushBrandRecAd;
+ (_Bool)enableTLMagicBrushBrandRec;
+ (_Bool)enableTLMagicBrushBrand;
+ (_Bool)enableTLMagicBrushAd;
+ (id)getMainSessionNoPrefixContentByMsg:(id)arg1;
+ (_Bool)isBrandNotifyNoPrefixNameWithWrapMsg:(id)arg1;
+ (_Bool)checkCGIBaseRespSuccess:(id)arg1;
+ (id)bizUserNameForMsgWrap:(id)arg1;
+ (_Bool)canTimlineMsgDiscard:(id)arg1;
- (void).cxx_destruct;
@property(nonatomic) unsigned int validExposeUpgradeTime; // @synthesize validExposeUpgradeTime=_validExposeUpgradeTime;
@property(retain, nonatomic) WCEliminatedSlotMMKV *exposeRatioSlotKV; // @synthesize exposeRatioSlotKV=_exposeRatioSlotKV;
@property(retain, nonatomic) WCEliminatedSlotMMKV *exposeCountSlotKV; // @synthesize exposeCountSlotKV=_exposeCountSlotKV;
@property(nonatomic) long long mpFinderFlowStyleConfig; // @synthesize mpFinderFlowStyleConfig=_mpFinderFlowStyleConfig;
@property(nonatomic) _Bool shouldUseNewFinderRecommendCardHorizontalStyle; // @synthesize shouldUseNewFinderRecommendCardHorizontalStyle=_shouldUseNewFinderRecommendCardHorizontalStyle;
@property(retain, nonatomic) NSMutableArray *batchPreloadFinderObjectIdArr; // @synthesize batchPreloadFinderObjectIdArr=_batchPreloadFinderObjectIdArr;
@property(copy, nonatomic) CDUnknownBlockType tlResortCompleteBlock; // @synthesize tlResortCompleteBlock=_tlResortCompleteBlock;
@property(retain, nonatomic) BTResortPerformanceItem *resortPerformance; // @synthesize resortPerformance=_resortPerformance;
@property(retain, nonatomic) BrandResortConfig *curResortConfig; // @synthesize curResortConfig=_curResortConfig;
@property(retain, nonatomic) BrandMsgResortContext *curResortContext; // @synthesize curResortContext=_curResortContext;
@property(nonatomic) unsigned int curResortCgiEvenId; // @synthesize curResortCgiEvenId=_curResortCgiEvenId;
@property(nonatomic) unsigned long long curResortScene; // @synthesize curResortScene=_curResortScene;
@property(nonatomic) _Bool isCurrentResorting; // @synthesize isCurrentResorting=_isCurrentResorting;
@property(nonatomic) _Bool isInDelayPreload; // @synthesize isInDelayPreload=_isInDelayPreload;
@property(nonatomic) unsigned int lastMemoryWarningTs; // @synthesize lastMemoryWarningTs=_lastMemoryWarningTs;
@property(retain, nonatomic) MMTimer *checkReleaseInstanceTimer; // @synthesize checkReleaseInstanceTimer=_checkReleaseInstanceTimer;
@property(retain, nonatomic) FlutterBrandNavigator *flutterNavigator; // @synthesize flutterNavigator=_flutterNavigator;
@property(retain, nonatomic) BrandTLExptConfig *preloadExptConfig; // @synthesize preloadExptConfig=_preloadExptConfig;
@property(retain, nonatomic) MMFlutterInstance *preloadFlutterInstance; // @synthesize preloadFlutterInstance=_preloadFlutterInstance;
@property(retain, nonatomic) BrandTLExptConfig *exptConfig; // @synthesize exptConfig=_exptConfig;
@property(nonatomic) _Bool isAffHasInit; // @synthesize isAffHasInit=_isAffHasInit;
@property(nonatomic) _Bool isLastFlutterAffEnable; // @synthesize isLastFlutterAffEnable=_isLastFlutterAffEnable;
@property(nonatomic) _Bool isCurFlutterAffEnable; // @synthesize isCurFlutterAffEnable=_isCurFlutterAffEnable;
@property(retain, nonatomic) NSMutableDictionary *cacheBrandFlowListModelFromSvrSupply; // @synthesize cacheBrandFlowListModelFromSvrSupply=_cacheBrandFlowListModelFromSvrSupply;
@property(nonatomic) _Bool msgExposedNeedReloadTableView; // @synthesize msgExposedNeedReloadTableView=_msgExposedNeedReloadTableView;
@property(nonatomic) _Bool hasMainBizCellExposed; // @synthesize hasMainBizCellExposed=_hasMainBizCellExposed;
@property(nonatomic) unsigned long long lastInsertRecCardFakeSvrId; // @synthesize lastInsertRecCardFakeSvrId=_lastInsertRecCardFakeSvrId;
@property(nonatomic) unsigned long long lastRedDotReportTime; // @synthesize lastRedDotReportTime=_lastRedDotReportTime;
@property(retain, nonatomic) NSMutableArray *arrRedDotReportItems; // @synthesize arrRedDotReportItems=_arrRedDotReportItems;
@property(retain, nonatomic) MemoryMappedKV *digestExposeMMKV; // @synthesize digestExposeMMKV=_digestExposeMMKV;
@property(retain, nonatomic) BrandTLMainSessionExposeItem *exposeItemInMainSession; // @synthesize exposeItemInMainSession=_exposeItemInMainSession;
@property(nonatomic) unsigned int tlPicPreloadDownloadPicCount; // @synthesize tlPicPreloadDownloadPicCount=_tlPicPreloadDownloadPicCount;
@property(nonatomic) unsigned int tlPicPreloadDownloadStartTimeSec; // @synthesize tlPicPreloadDownloadStartTimeSec=_tlPicPreloadDownloadStartTimeSec;
@property(retain, nonatomic) NSMutableArray *tlPicPreloadDownloadPicUrlArr; // @synthesize tlPicPreloadDownloadPicUrlArr=_tlPicPreloadDownloadPicUrlArr;
@property(nonatomic) unsigned int tlPicPreloadDownloadPicTimerLoopCount; // @synthesize tlPicPreloadDownloadPicTimerLoopCount=_tlPicPreloadDownloadPicTimerLoopCount;
@property(retain, nonatomic) MMTimer *tlPicPreloadDownloadPicTimer; // @synthesize tlPicPreloadDownloadPicTimer=_tlPicPreloadDownloadPicTimer;
@property(nonatomic) unsigned int tlPicPreloadUnreadCountBeforeSync; // @synthesize tlPicPreloadUnreadCountBeforeSync=_tlPicPreloadUnreadCountBeforeSync;
@property(nonatomic) unsigned int tlPicPreloadSyncGapTimerLoopCount; // @synthesize tlPicPreloadSyncGapTimerLoopCount=_tlPicPreloadSyncGapTimerLoopCount;
@property(retain, nonatomic) MMTimer *tlPicPreloadSyncGapTimer; // @synthesize tlPicPreloadSyncGapTimer=_tlPicPreloadSyncGapTimer;
@property(nonatomic) _Bool isTlPicPreloadCgiRequesting; // @synthesize isTlPicPreloadCgiRequesting=_isTlPicPreloadCgiRequesting;
@property(nonatomic) unsigned int serviceInitTs; // @synthesize serviceInitTs=_serviceInitTs;
@property(nonatomic) _Bool hasShowFirstGuideLine; // @synthesize hasShowFirstGuideLine=_hasShowFirstGuideLine;
@property(retain, nonatomic) NSString *brandSessionFullFormattedMessage; // @synthesize brandSessionFullFormattedMessage=_brandSessionFullFormattedMessage;
@property(retain, nonatomic) NSMutableSet *recoFlowFeedbackCardIdHistory; // @synthesize recoFlowFeedbackCardIdHistory=_recoFlowFeedbackCardIdHistory;
@property(retain, nonatomic) NSDate *lastExpandMoreSubscribedMsgDate; // @synthesize lastExpandMoreSubscribedMsgDate=_lastExpandMoreSubscribedMsgDate;
@property(nonatomic) unsigned long long currentTLMinExposedSeqId; // @synthesize currentTLMinExposedSeqId=_currentTLMinExposedSeqId;
@property _Bool isTimelinePageDidScroll; // @synthesize isTimelinePageDidScroll=_isTimelinePageDidScroll;
@property _Bool isTimelinePageActive; // @synthesize isTimelinePageActive=_isTimelinePageActive;
@property(retain, nonatomic) NSData *oldOftenReadBizCacheData; // @synthesize oldOftenReadBizCacheData=_oldOftenReadBizCacheData;
@property(retain, nonatomic) BTOftenReadBizCache *oftenReadBizCache; // @synthesize oftenReadBizCache=_oftenReadBizCache;
@property(nonatomic) unsigned long long lastDeleteTooOldTLRecordTime; // @synthesize lastDeleteTooOldTLRecordTime=_lastDeleteTooOldTLRecordTime;
@property(retain, nonatomic) NSMutableArray *arrTmpToAddMsg; // @synthesize arrTmpToAddMsg=_arrTmpToAddMsg;
@property(nonatomic) _Bool needUpdateMainSession; // @synthesize needUpdateMainSession=_needUpdateMainSession;
@property(nonatomic) _Bool isMigratingData; // @synthesize isMigratingData=_isMigratingData;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *m_workerThread; // @synthesize m_workerThread=_m_workerThread;
@property(retain, nonatomic) NSData *oldSessionCacheData; // @synthesize oldSessionCacheData=_oldSessionCacheData;
@property(retain, nonatomic) BrandSessionCache *mainSessionCache; // @synthesize mainSessionCache=_mainSessionCache;
@property(retain, nonatomic) MMBaseSessionStorage *sessionStorage; // @synthesize sessionStorage=_sessionStorage;
@property(retain, nonatomic) BrandTimelineMsgDB *brandMsgDB; // @synthesize brandMsgDB=_brandMsgDB;
@property(retain, nonatomic) MemoryMappedKV *mappedKV; // @synthesize mappedKV=_mappedKV;
- (void)onLiveTaskUpdateStatus:(id)arg1;
- (void)onBatchBrandLivingStatusChange:(id)arg1;
- (void)onBrandLivingStatusChange:(id)arg1 isLiving:(_Bool)arg2 finderFeedExportId:(id)arg3;
- (void)onDeleteSessionOfUser:(id)arg1;
- (void)MessageReturn:(id)arg1 Event:(unsigned int)arg2;
- (void)onModifyContact:(id)arg1;
- (void)onDeleteContact:(id)arg1;
- (void)onFinishMigrate;
- (void)OnDelMsg:(id)arg1 DelAll:(_Bool)arg2;
- (void)OnDelMsg:(id)arg1 MsgWrap:(id)arg2;
- (void)OnGetNewXmlMsg:(id)arg1 Type:(id)arg2 MsgWrap:(id)arg3;
- (void)handleNewMsg:(id)arg1 msgWrap:(id)arg2;
- (void)OnMsgNotAddDBNotify:(id)arg1 MsgWrap:(id)arg2;
- (void)OnAddMsg:(id)arg1 MsgWrap:(id)arg2;
- (void)onMsgDBInitFinish;
- (_Bool)canMsgTopRightUseRecReason;
- (void)resetCurTLMinExposeSequenceId;
- (void)markCurTLMinExposeSequenceId:(unsigned long long)arg1;
- (void)handleStrategyResp:(id)arg1;
- (_Bool)useNewNotificationCellUIForMsgVersion:(unsigned int)arg1;
- (void)sendBizStrategyRequest;
- (void)setDisplayMode:(unsigned int)arg1;
- (unsigned int)getDisplayMode;
- (_Bool)enableFinderLiveDualCardAutoPlay;
- (_Bool)canBrandTimelineVideoItemAutoPlayByNetworkStatus;
- (_Bool)canBrandTimelineVideoItemAutoPlay;
- (_Bool)canEnterBrandFlowList;
- (unsigned int)holdSecAfterUserLeaveForReport;
- (_Bool)showRedPacketCover;
- (_Bool)hideSearchBarWhenEnter;
- (_Bool)nativeCardTitleUpEnable;
- (_Bool)finderLiveAutoPlayEnable;
- (_Bool)shouldKeepDataWhenDeleteTimeLineBox;
- (id)audioFeedsInfoData;
- (unsigned int)timelineFinderInfoEnable;
- (unsigned int)timeGapOfRecDataRequest;
- (_Bool)showRecReplaceButton;
- (unsigned int)sectionGapToPreload;
- (_Bool)isRecoFlowDisable;
- (_Bool)isABTestOpen;
- (_Bool)checkCGIBaseRespSuccess:(id)arg1;
- (void)resetMappedKv;
- (void)checkIfNeedHandleMsg;
- (void)checkIfNeedMigrate;
- (void)onServiceClearData;
- (void)onMainControllStart;
- (void)onServiceMemoryWarning;
- (void)onServiceEnterBackground;
- (void)onServiceEnterForeground;
- (void)onServiceInit;
- (void)dealloc;
- (void)reportInsertCheckInvalidAd:(unsigned long long)arg1;
- (void)reportReceiveInvaildAdFromPrefetch:(unsigned long long)arg1;
- (void)reportMonitorIdKey:(unsigned int)arg1;
- (void)deleteCanvasCardWithMsgId:(unsigned int)arg1;
- (void)launchCanvasContextWithItem:(id)arg1 viewDelegate:(id)arg2 prepareCompletion:(CDUnknownBlockType)arg3 fromPreload:(_Bool)arg4;
- (void)launchCanvasContextWithItem:(id)arg1 viewDelegate:(id)arg2 fromPreload:(_Bool)arg3;
- (void)__advanceLaunchCanvasContextWithItem:(id)arg1;
- (void)advanceLaunchCanvasContextWithItem:(id)arg1 delay:(_Bool)arg2;
- (_Bool)isAdvanceLaunchJSCoreOpen;
- (_Bool)isAdRecConflicCheckOpen;
- (_Bool)isCheckFrequency;
- (void)sendCgiWithReq:(id)arg1 userData:(id)arg2;
- (id)getAdValidExposeConfig;
- (void)setAdValidExposeConfig:(id)arg1;
- (unsigned long long)configAdInsertType;
- (void)setAdInsertType:(unsigned long long)arg1;
- (unsigned int)configAdInsertPos;
- (void)handleTimelineCardCgiRsp:(id)arg1;
- (void)onCanvasAdCardFirstExposed:(id)arg1;
- (void)handleADCheckCgiRsp:(id)arg1;
- (id)genCheckAdCgiDataStrWithMsgArr:(id)arg1 pGetUserData:(id *)arg2;
- (void)sendCheckAdCgiWithMsgArr:(id)arg1;
- (unsigned long long)isAdDataLegal:(id)arg1;
- (_Bool)hasEnoughADCardExposedCountInOneDay;
- (id)getInsertedAdCardListWithLimit:(unsigned int)arg1;
- (id)getAdCardExposeInToday;
- (unsigned int)getAdCardExposeCountInToday;
- (id)getAdCardExposedJsonInfoInToday;
- (_Bool)setAdCardExposeQuotaFromPrefetch:(unsigned int)arg1;
- (unsigned int)getAdCardExposeQuotaFromPrefetch;
- (_Bool)setAdCardExposeQuotaFromServerConfig:(unsigned int)arg1;
- (unsigned int)getAdCardExposeRealQuotaFromServerConfig;
- (unsigned int)getAdCardExposeQuotaFromServerConfig;
- (unsigned int)getAdCardExposeRealQuota;
- (void)deleteAllExpiredADCardMsg;
- (void)deleteAllADCardMsgCreatedBeforeOneDay;
- (void)deleteAllExposedADCardMsg;
- (void)deleteAdStageData;
- (id)getAdStageData;
- (_Bool)deleteADCardMsg:(id)arg1;
- (_Bool)canDeleteADCard;
- (void)adjustAdPosIfNeedAfterResort:(unsigned long long)arg1;
- (_Bool)__insertADCardMsg:(id)arg1 atPos:(unsigned int)arg2;
- (_Bool)__insertADCardMsgWithAdData:(id)arg1 atPos:(unsigned int)arg2 notifyExt:(_Bool)arg3;
- (void)reportBrandCardMoveAd:(int)arg1 extra:(id)arg2;
- (void)__tryInsertOrUpdateAdWithAction:(unsigned long long)arg1 insertType:(unsigned long long)arg2 insertPos:(unsigned int)arg3;
- (void)tryInsetOrUpdateAdWhenEnterTL;
- (void)__realTimeInsertAdDataInTL:(id)arg1 withInserType:(unsigned long long)arg2;
- (void)__realTimeUpdateAdMsgInTL:(id)arg1 withAdDataItem:(id)arg2;
- (void)handleGetADDataFromPrefetcher:(id)arg1;
- (void)delayDispatchMainCellExposeToAd;
- (void)dispatchAdPrefetcherEvent:(unsigned long long)arg1;
- (unsigned int)refreshIntervalSecWithScene:(unsigned long long)arg1;
- (void)handleADDataCgiRsp_Other:(id)arg1;
- (void)handleADDataCgiRsp_ExtInfo:(id)arg1;
- (void)handleADDataCgiRsp_Data:(id)arg1;
- (id)genADCardCgiDataStrWithScene:(unsigned long long)arg1;
- (void)handleAdvertisementExtInfo:(id)arg1;
- (void)handleADDataCgiRsp:(id)arg1;
- (void)requestAdDataWithScene:(unsigned long long)arg1;
- (void)onFirstScreenResortEndEvent:(unsigned long long)arg1 scene:(unsigned int)arg2 endInfo:(id)arg3;
- (void)onFirstScreenResortStartEvent:(unsigned long long)arg1 scene:(unsigned int)arg2 startInfo:(id)arg3;
- (void)onFirstScreenPreResortEvent:(unsigned long long)arg1 scene:(unsigned int)arg2 startInfo:(id)arg3;
- (id)genDicFromBizTLResortEventInfo:(id)arg1;
- (_Bool)checkCanCreateAdBrandServiceFromResortEvent;
- (void)onKVEvent:(int)arg1 value:(id)arg2;
- (void)onIDKeyEvent:(int)arg1 key:(int)arg2 value:(int)arg3;
- (void)onInitDoneEvent:(_Bool)arg1;
- (void)onDataChangeEvent:(int)arg1;
- (void)onXmlPushReceiveWithType:(id)arg1 content:(id)arg2;
- (_Bool)isXmlPushRecommendMsgForAff:(id)arg1;
- (void)onNotifyMagicBrushMainSessionExpose;
- (void)onNotiftyAffDeleteUserName:(id)arg1;
- (void)onNotifyAffDeleteMsg:(id)arg1;
- (void)onNotifyAffInsertNewMsg:(id)arg1;
- (void)onNotifyAffExitTL;
- (void)onNotifyAffEnterTLWithDigestMsgId:(unsigned long long)arg1;
- (void)onNotifyAffTLPageDealloc;
- (void)onNotifyAffTLPageInit;
- (id)getTopAffMsgByCount:(unsigned int)arg1;
- (unsigned int)getAffBoxCovTime;
- (id)getAffMsgByMsgLocalId:(unsigned long long)arg1;
- (unsigned int)getAffLastMsgTime;
- (id)getAffLastMsg;
- (unsigned int)getAffMsgUnreadCount;
- (unsigned int)flutterVCCacheTime;
- (id)affConfigString;
- (void)onTimelineBoxExposed;
- (void)onTimelineBoxDelete;
- (void)resetAffData;
- (_Bool)__getCurAffSwitch;
- (void)__initAffSwitch;
- (void)releasePreloadFlutterInstance:(unsigned int)arg1;
- (void)onTimeUpReleasePreloadFlutterInstance;
- (id)__innerCreateFlutterInstanceWithExptConfig:(id)arg1 route:(id)arg2;
- (id)createFlutterInstanceWithExptConfig:(id)arg1 route:(id)arg2;
- (id)createFlutterInstanceWithExptConfig:(id)arg1;
- (void)__realPreloadFlutterInstanceIfNeed:(id)arg1;
- (void)preloadFlutterInstanceIfNeed;
- (_Bool)isPreloadFlutterInstanceEnable;
- (void)onServiceEnterBackgroundInCategoryFlutter;
- (void)onServiceEnterForegroundInCategoryFlutter;
- (void)onServiceClearDataInCategoryFlutter;
- (void)checkInitAffEnvironment;
- (void)onServiceInitInCategoryFlutter;
- (_Bool)__enableOftenReadBarNewUINeedPreload;
- (_Bool)__enableOftenReadBarNewUI;
- (unsigned int)__getBlockBackgourndResortBitSwitch;
- (unsigned long long)__getResortSceneBitSwitch;
- (_Bool)__getCanUseDiffList;
- (unsigned int)__getExptShowCardOption:(unsigned int)arg1 dataMode:(unsigned int)arg2;
- (_Bool)__getIsInControlGroup;
- (unsigned int)__getTLDataMode;
- (unsigned int)__getTLRenderMode;
- (_Bool)__getShowDynamicCardToast;
- (_Bool)__getShowDynamicCard;
- (id)genExptConfig;
- (void)onFlutterExptStrategyRespUpdate;
- (_Bool)resortBandwidthOptSwitch;
- (_Bool)isFlutterAffSupportRecCard;
- (_Bool)isFlutterAffSupportAd;
- (_Bool)isFlutterAff;
- (_Bool)isExptNotShowAd;
- (_Bool)isExptNotShowFinderLiveBar;
- (id)getExptConfig;
- (id)makeRedDotReportItem:(id)arg1 actType:(unsigned int)arg2;
- (void)aggregateRedDotSessionInfo:(id)arg1 actType:(unsigned int)arg2;
- (void)reportRedDotWhenDeleteBox;
- (void)reportRedDotIfNeeded:(id)arg1 exposeItem:(id)arg2 actType:(unsigned int)arg3;
- (id)fullFillMainSessionMsg:(id)arg1 sessionInfoNotifyType:(unsigned int)arg2;
- (void)reportMainSessionMsgExpose:(id)arg1 exposeItem:(id)arg2 isExposed:(_Bool)arg3;
- (void)__innerAddOrUpdateMainSession:(_Bool)arg1;
- (void)refreshServiceTriggerToRefresh:(id)arg1;
- (id)isUserHasSpecalSessionInfo:(id)arg1;
- (_Bool)isMessageShouldHandled:(id)arg1;
- (_Bool)isUserShouldHandled:(id)arg1;
- (void)onImportMessageSuccess;
- (void)onRebuildSessionStorage;
- (void)workThread_reportAndUpdateExposeItem:(id)arg1 isExpose:(_Bool)arg2;
- (void)handleMainSessionDisappearWithMsg:(id)arg1 rowIndex:(unsigned int)arg2 sessionInfo:(id)arg3;
- (void)handleMainSessionExposeWithMsg:(id)arg1 rowIndex:(unsigned int)arg2 sessionInfo:(id)arg3;
- (void)onMainSessionTabSelect;
- (void)onMainSessionExpose:(id)arg1 isExpose:(_Bool)arg2 rowIndex:(unsigned int)arg3;
- (void)addBrandSessionHolderToSessionList;
- (_Bool)shouldShowNewNotifyMsgCount:(id)arg1;
- (id)genMainFrameSessionInfo;
- (_Bool)needShowUnreadCountOnMainSession;
- (void)clearMainSessionCacheRedDot;
- (void)updateMainSessionLatestMsg;
- (void)updateMainSessionCache;
- (void)rebuildMainSessionCacheFromDB;
- (void)tryLoadMainSessionCache;
- (void)saveMainSessionCache;
- (id)pathForMainSessionCache;
- (_Bool)isMainSessionCacheValid;
- (void)onUpdateMainSessionByFinishMigration;
- (void)onUpdateMainSessionByModMsg:(id)arg1 msgWrap:(id)arg2;
- (void)onUpdateMainSessionByDelMsg:(id)arg1 msgWrap:(id)arg2;
- (void)onUpdateMainSessionByDelBrandSession:(id)arg1;
- (void)onUpdateMainSessionByModifyContactIfNeed:(id)arg1;
- (void)onUpdateMainSessionImmediately;
- (void)onUpdateMainSession;
- (void)innerNotifyDeletedMainSessionCache;
- (id)getMainSessionExposeItem;
- (unsigned int)unreadCountFromMainSessionCache;
- (id)lastMessageFromMainSessionCache;
- (void)clearMainSessionRedDot;
- (_Bool)hasMainSessionRedDot;
- (void)internalHandleNewNotificationByNewXml:(id)arg1;
- (void)internalHandleNewNotification:(id)arg1;
- (void)clearAllNotificationUnreadStatus;
- (_Bool)setNotificationDelFlag:(id)arg1 msgWrap:(id)arg2;
- (void)deleteUnreadNotificationForSession:(id)arg1;
- (_Bool)deleteNotification:(id)arg1;
- (id)getNotificationBySvrId:(unsigned long long)arg1;
- (id)getNotificationFromCreateTime:(unsigned int)arg1 limit:(unsigned int)arg2;
- (id)getUnreadNotificationFromCreateTime:(unsigned int)arg1 limit:(unsigned int)arg2;
- (unsigned int)getNotificationUnreadCountByUserName:(id)arg1;
- (unsigned int)getNotificationUnreadCount;
- (id)getLastUnreadNotification;
- (id)getLastNotification;
- (id)getCachedSupplyBrandFlowListModelWithUsrName:(id)arg1;
- (void)cacheSupplyBrandFlowListModel:(id)arg1;
- (void)preloadOftenReadArticleDataIfNeeded;
- (long long)compareContactData:(id)arg1 withContactData:(id)arg2;
- (_Bool)canEnterBrandFlowListWithOftenReadContactData:(id)arg1;
- (id)getBrandFlowListCellModelWhenClickContact:(id)arg1 allBarContacts:(id)arg2 getIndex:(unsigned int *)arg3;
- (id)getContactDataWithUserName:(id)arg1;
- (id)getContactDataWithContact:(id)arg1;
- (unsigned long long)getOftenReadContactNewMsgType:(id)arg1;
- (void)removeOftenReadNewLiveStatus:(id)arg1;
- (void)tryUpdateBrandOftenReadLive;
- (_Bool)updateOftenReadContactData:(id)arg1 isLiving:(_Bool)arg2 feedExportId:(id)arg3;
- (void)tryUpdateOftenReadWithBatchStatusChange:(id)arg1;
- (void)handleOftenReadContact:(id)arg1 isLiving:(_Bool)arg2 feedExportId:(id)arg3;
- (void)openLiveWithContact:(id)arg1 fromVC:(id)arg2;
- (_Bool)isOftenReadContactHasNewLive:(id)arg1;
- (_Bool)isOftenReadContactLiving:(id)arg1;
- (id)getOftenReadContactData:(id)arg1;
- (_Bool)isContactHasMsgInTime:(unsigned int)arg1 contact:(id)arg2;
- (void)handleDeleteOftenReadContact:(id)arg1;
- (void)handleDeleteOftenReadMsg:(id)arg1;
- (_Bool)isBizInfoValid:(id)arg1;
- (id)exportIdForContactData:(id)arg1 needCheckGreenDot:(_Bool)arg2;
- (id)oftenReadFinderExportIdListWithClickUsrName:(id)arg1;
- (id)oftenReadFinderExportIdList;
- (void)tryPreloadOftenReadFinderItems;
- (void)handleFetchOftenReadResp:(id)arg1;
- (void)updateOftenReadContactByClickMsg:(id)arg1;
- (void)updateOftenReadContactByExposeFlowListItemCellWithUserName:(id)arg1;
- (void)updateOftenReadContactByEnterProfile:(id)arg1;
- (void)updateOftenReadContactByEnterSession:(id)arg1;
- (void)updateOftenReadContactByEnterFinderMember:(id)arg1;
- (void)updateHasNewMsgAndNewMsgType:(id)arg1 newTime:(long long)arg2 newMsgType:(unsigned long long)arg3;
- (void)updateOftenReadByNewMsg:(id)arg1 userName:(id)arg2;
- (_Bool)isContactHasNewMsg:(id)arg1;
- (_Bool)isContactOftenRead:(id)arg1;
- (void)fetchOftenReadBizFromSvr;
- (void)asyncUpdateOftenReadContactByLastMsgTime;
- (void)updateOftenReadContactByLastMsgTime;
- (id)getOftenReadBizContactCache:(_Bool)arg1;
- (void)tryLoadOftenReadFromCache;
- (void)saveOftenReadBizCache;
- (id)pathForOftenReadBizCache;
- (void)setOftenReadNewMsgTime:(unsigned int)arg1;
- (unsigned int)oftenReadNewMsgTime;
- (void)setIsOftenReadRankByServer:(_Bool)arg1;
- (_Bool)isOftenReadRankByServer;
- (long long)brandOftenReadJumpAction;
- (_Bool)useSimulatedNativePersonalCenter;
- (id)getPersonalCenterWxaInfo;
- (_Bool)canShowPersonalCenter;
- (id)getPersonalCenterListInfo;
- (void)handlePersonalCenterResp:(id)arg1;
- (void)reportWithScene:(unsigned int)arg1;
- (void)resetPicPreloadState;
- (_Bool)isPicPreloadSwitchOpen:(unsigned int)arg1;
- (void)onPreloadFinish;
- (void)onAfterDownloadPicGap;
- (void)startDownloadPicTask;
- (void)onAfterSyncGap;
- (void)tryPreloadTLPicIfNeed:(unsigned int)arg1;
- (void)onRefreshStrategyFinish:(_Bool)arg1;
- (void)handleRefreshTLPicPreloadStrategyRsp:(id)arg1;
- (void)tryRefreshTLPicPreloadStrategyIfNeed;
- (id)getWordingInfoWithWording:(id)arg1 negativeFeedbackInfo:(id)arg2;
- (void)reportFinderRecCardClickFeedbackBtnWithViewModel:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)reportFinderRecCardClickFeedbackConfirmBtnCgiWithViewModel:(id)arg1 selectedReasonArr:(id)arg2 exposedReasonArr:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)onFinderContactFollowListHasChange:(id)arg1;
- (long long)getMPFinderFlowStyleConfig;
- (void)updateMPFinderFlowStyleConfig;
- (_Bool)useNewfinderRecommendCardHorizontalStyle;
- (void)getNewfinderRecommendCardHorizontalStyleABConfig;
- (id)getRequestIDsLog:(id)arg1;
- (void)batchGetRecommendCardFinderDataWithSectionDataArr:(id)arg1;
- (void)clearPreloadFinderCardDataArr;
- (void)initBatchPreloadFinderDataLogic;
- (void)deleteRecommendCardFinderDataWithIndexArr:(id)arg1 msgWrap:(id)arg2;
- (void)preDownloadRecommendCardFinderDataWithSectionData:(id)arg1 withIndexes:(id)arg2;
- (void)preDownloadAllRecommendCardFinderDataWithSectionData:(id)arg1;
- (void)preDownloadRecommendCardCoverImageWithSectionData:(id)arg1;
- (id)mmkvKeyWithPrefix:(id)arg1 wrapMsg:(id)arg2;
- (void)handleRecycleReportCgiWrap:(id)arg1;
- (void)reportRecycleSuccessWithReportArr:(id)arg1;
- (void)reportRecycleFailWithReason:(unsigned long long)arg1 msg:(id)arg2;
- (unsigned int)recycleCountWithScene:(unsigned long long)arg1;
- (id)recyclableCardArrByteStrWithScene:(unsigned long long)arg1;
- (id)recyclableCardArrInfoWithMsgArr:(id)arg1 scene:(unsigned long long)arg2 setForceDeleteMsg:(id)arg3;
- (id)getUnexposeRecMsgWithCount:(unsigned int)arg1 retrieveInvalidExposed:(_Bool)arg2;
- (id)recyclableCardArrWithScene:(unsigned long long)arg1;
- (void)handleRecCardRecycleMsgByResort:(id)arg1 setForceDeleteMsg:(id)arg2;
- (void)handleRecCardRecycleRspWithScene:(unsigned long long)arg1 recycleList:(id)arg2 needCheckExposed:(_Bool)arg3;
- (void)updateRecCardRecycleMaxMsgCount:(unsigned int)arg1 scene:(unsigned long long)arg2;
- (void)updateRecCardRecycleData:(id)arg1 scene:(unsigned long long)arg2;
- (void)handleRecCardClickFeedbackConfirmBtnCgiWrap:(id)arg1;
- (void)reportRecCardClickFeedbackConfirmBtnCgiWithSectionData:(id)arg1 extInfo:(id)arg2;
- (_Bool)shouldDeleteArticleCardWhenRefreshCard:(id)arg1;
- (void)handleRefreshRecommendArticleCard:(id)arg1;
- (void)handleRefreshRecommendArticleRsp:(id)arg1;
- (void)refreshRecommendArticleIfNeed:(id)arg1;
- (void)refreshRecommendArticleArrIfNeed:(id)arg1;
- (void)handleRefreshRecommendCardRsp:(id)arg1;
- (void)refreshRecommendCardIfNeed:(id)arg1;
- (void)refreshRecommendMsgIfNeed:(id)arg1;
- (_Bool)isAnyRecommendCardInLastGroup;
- (_Bool)shouldDiscardAfterFilterSubscribedContact:(id)arg1;
- (_Bool)hasSameCardIdMsgInTL:(id)arg1;
- (_Bool)hasSameSvrIdMsgInTL:(id)arg1;
- (unsigned long long)genSvrIdIfZero:(unsigned long long)arg1;
- (void)deleteAllRecommendMsg;
- (_Bool)checkRecycleUniqueRecCard:(id)arg1 cardLogStr:(id)arg2;
- (_Bool)insertRecCardWrapperToDBAndUpdateMainSessionIfNeed:(id)arg1 needCheckGenNewGroup:(_Bool)arg2 groupId:(unsigned int)arg3 limitMaxWeight:(unsigned int)arg4;
- (void)tryInsertRecommendCardToDBWhenClickBrandSession;
- (void)checkAdvanceLaunchCanvasClient:(id)arg1;
- (void)reportHandleRecommendXml:(unsigned long long)arg1 recCardWrapper:(id)arg2;
- (_Bool)handleRecCardWrapper:(id)arg1 fromScene:(unsigned long long)arg2 needCheckGenNewGroup:(_Bool)arg3 groupId:(unsigned int)arg4 limitMaxWeight:(unsigned int)arg5;
- (_Bool)handleRecRespFromResort:(id)arg1 fromScene:(unsigned long long)arg2 resortRet:(_Bool)arg3 groupId:(unsigned int)arg4 limitMaxWeight:(unsigned int)arg5;
- (void)subThread_handleXmlPushRecommendMsg:(id)arg1;
- (_Bool)isXmlPushRecommendMsg:(id)arg1;
- (void)onServiceClearDataInCategoryRecommendCard;
- (void)onServiceInitInCategoryRecommendCard;
- (void)reportTryResortFromScene:(unsigned long long)arg1;
- (void)reportResortIdKey:(unsigned int)arg1 value:(unsigned int)arg2;
- (void)reportResortIdKey:(unsigned int)arg1;
- (_Bool)isOpenRedDotSample;
- (_Bool)isResortDebugForceOpen;
- (_Bool)checkIfBlockResortByMaxGroupIdChange;
- (_Bool)checkIfBlockResortByReqInterval;
- (_Bool)checkIfBlockResortByUnreadCount;
- (id)getResortConfig;
- (void)mainThread_checkRecyleRecCard:(id)arg1;
- (unsigned int)resortContextMsgLimit;
- (id)checkAndGetBizMsgItemListForResortByMsgList:(id)arg1 maxGroupId:(unsigned int)arg2;
- (id)getMsgListForResort:(_Bool *)arg1;
- (void)sendResortCgiWithArrBizItem:(id)arg1 bAllNewMsgResorted:(_Bool)arg2;
- (void)callCompleteBlockInMainThread:(_Bool)arg1;
- (void)notifyHandleResortFinish:(_Bool)arg1;
- (void)markFailReason:(unsigned int)arg1;
- (_Bool)updateRecMsgOnByteBuffer:(id)arg1 withRecReason:(id)arg2;
- (void)batchAsyncUpdateRecMsg:(id)arg1;
- (_Bool)resortMsgArr:(id)arg1 rankSessionId:(id)arg2 pGetMinSeqId:(unsigned long long *)arg3 pGetResortedMsgArr:(id *)arg4 failReason:(unsigned int *)arg5;
- (_Bool)subThread_handleInsideTimelineResp:(id)arg1;
- (_Bool)subThread_handleOutsideTimelineResp:(id)arg1;
- (id)getResortStrategyConfig;
- (void)updateResortStrategyConfig:(id)arg1;
- (void)subThread_handleResortRespRecommondCard:(id)arg1 resortRet:(_Bool)arg2;
- (void)handleResortResp:(id)arg1;
- (void)__cancelResortBeforeCgiResp;
- (void)checkIfCancelResortCGI;
- (void)subThread_insideTLResort;
- (void)__tryResortInsideTimelineWithScene:(unsigned long long)arg1 resortContext:(id)arg2 completeBlock:(CDUnknownBlockType)arg3;
- (void)subThread_outsideResort;
- (void)__tryResortOutsideTimelineWithScene:(unsigned long long)arg1 resortContext:(id)arg2 completeBlock:(CDUnknownBlockType)arg3;
- (void)__tryResortTimelineIfNeed:(unsigned long long)arg1 resortContext:(id)arg2 completeBlock:(CDUnknownBlockType)arg3;
- (void)tryResortTimelineIfNeed:(unsigned long long)arg1 resortContext:(id)arg2;
- (void)tryResortTimelineIfNeed:(unsigned long long)arg1;
- (_Bool)isTimelineOutsideResortSwitchOpen;
- (_Bool)isInsideResortWhenTimelineDidScroll;
- (_Bool)isOutsizeResortWhenTimelineActive;
- (_Bool)isCurrentInsideResortScene;
- (_Bool)isCurrentOutsideResortScene;
- (_Bool)isTimelineResortSwitchOpenForScene:(unsigned long long)arg1;
- (id)getMsgByMsgId:(unsigned int)arg1;
- (void)migrateBrandSessionAndMsg2Timeline;
- (_Bool)isFinishMigrateBrandMsg;
- (void)setMigrateFinishFlag:(_Bool)arg1;
- (void)OnUnReadCountChange:(id)arg1;
- (void)ImageDidFail:(id)arg1;
- (void)ImageDidLoadWithData:(id)arg1 Url:(id)arg2;
- (long long)brandTLCardHeaderJumpAction;
- (_Bool)sectionIsFold:(id)arg1;
- (unsigned long long)sectionShowCount:(id)arg1;
- (unsigned long long)preloadPicCountWithMsg:(id)arg1;
- (_Bool)isTopItemShowLargeCover:(id)arg1;
- (void)downloadReaderWrapsListCoverImageIfNeed:(id)arg1;
- (void)downloadReaderWrapsCoverImageIfNeed:(id)arg1;
- (void)tryDeleteTooOldRecordIfNeed;
- (void)handleNewMsgByTimeline:(id)arg1;
- (_Bool)isListMsgClearUnread;
- (void)setListMsgClearUnread:(_Bool)arg1;
- (void)setStarContactMsgUnreadStatus:(id)arg1;
- (void)clearStarContactMsgUnreadStatus:(id)arg1;
- (void)clearAllTimelineMsgUnreadStatus;
- (unsigned int)getTimelineUnreadMsgCount;
- (unsigned int)getStarUnreadMsgCount;
- (unsigned int)getTimelineMsgMaxGroupId;
- (void)refreshDividingLineSequenceIdFromDB;
- (unsigned long long)getDividingLineSequenceId;
- (void)setDividingLineSequenceId:(unsigned long long)arg1;
- (void)resetTimelinePageScrollState;
- (void)setTimelinePageDidScroll;
- (void)setTimelinePageActive:(_Bool)arg1;
- (id)getDigestExposeInfoByAffMsgId:(unsigned long long)arg1;
- (void)updateMainSessionExposeTimeOnSlotKv:(id)arg1 pos:(unsigned int)arg2 exposeTimeMs:(unsigned int)arg3;
- (void)updateMainSessionExposeOnSlotKv:(id)arg1 pos:(unsigned int)arg2;
- (void)subThread_setTimelineMsgArrValidExposeByMsgId:(id)arg1;
- (void)subThread_setTimelineMsgArrValidExposure:(id)arg1;
- (void)clearMsgExposeSlotKV;
- (unsigned int)getMsgExposeRatioByMsgId:(unsigned int)arg1;
- (void)asyncUpdateMsgExposeRatioByDicInfo:(id)arg1;
- (unsigned int)getMsgExposeCountByMsgId:(unsigned int)arg1;
- (void)asyncUpdateMsgExposeCountByDicInfo:(id)arg1;
- (id)validExposureAreaRatio;
- (void)subThread_setTimelineMsgArrExposureInTLByMsgId:(id)arg1;
- (void)subThread_setTimelineMsgArrExposureInTL:(id)arg1;
- (void)setTimelineMsgExposureInTL:(id)arg1;
- (_Bool)setTimelineMsgWrapExpandByMsgId:(unsigned int)arg1;
- (void)setTimelineMsgWrap:(id)arg1 unfold:(_Bool)arg2;
- (_Bool)setTimelineMsgWrapExpand:(id)arg1;
- (void)notifyDeleteTimelineMsg:(id)arg1;
- (void)notifyAddBrandTimelineMsg:(id)arg1;
- (void)asyncUpdateMsgOnByteBuffer:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)asyncUpdateMsgOnByteBuffer:(id)arg1;
- (_Bool)deleteMsgWithMsgId:(unsigned int)arg1;
- (_Bool)deleteMsg:(id)arg1;
- (void)asyncDeleteMsg:(id)arg1 shouldUpdateMainSession:(_Bool)arg2;
- (void)deleteBrandMsg:(id)arg1 msgWrap:(id)arg2;
- (void)deleteBrandSession:(id)arg1;
- (id)getTopTimelineMsg:(unsigned int)arg1;
- (id)getTimelineMsgFromSequenceId:(unsigned long long)arg1 toCreateTime:(unsigned int)arg2 limit:(unsigned int)arg3;
- (id)getTimelineMsgFromSequenceId:(unsigned long long)arg1 toSequenceId:(unsigned long long)arg2 limit:(unsigned int)arg3;
- (id)getTimelineMsgToSequenceId:(unsigned long long)arg1 limit:(unsigned int)arg2 excludeMsgTypeArr:(id)arg3;
- (id)getTimelineMsgToSequenceId:(unsigned long long)arg1 limit:(unsigned int)arg2;
- (id)getTimelineMsgFromSequenceId:(unsigned long long)arg1 limit:(unsigned int)arg2 includeMsgTypeArr:(id)arg3;
- (id)getTimelineMsgFromSequenceId:(unsigned long long)arg1 limit:(unsigned int)arg2 excludeMsgTypeArr:(id)arg3;
- (id)getTimelineMsgFromSeqId:(unsigned long long)arg1 toGroupId:(id)arg2 limit:(unsigned int)arg3 excludeMsgTypeArr:(id)arg4;
- (id)getTimelineMsgFromSeqId:(unsigned long long)arg1 toGroupId:(id)arg2 limit:(unsigned int)arg3;
- (id)getTimelineMsgFromSequenceId:(unsigned long long)arg1 groupId:(id)arg2 limit:(unsigned int)arg3;
- (id)getTimelineMsgFromSequenceId:(unsigned long long)arg1 limit:(unsigned int)arg2;
- (id)getLastTimelineMsgByCreateTime:(id)arg1;
- (id)getLastTimelineMsgByCreateTime:(id)arg1 changeForDisplay:(_Bool)arg2;
- (id)getLastTimelineMsgByCreateTime;
- (id)getMsgByMsgSvrId:(unsigned long long)arg1 userName:(id)arg2;
- (id)getMsgBySeqId:(unsigned long long)arg1;
- (id)getLastTLMsgBySeqIdWithExptConfig:(id)arg1;
- (id)getLastTLMsgBySeqIdWithDefaultExptConfig;
- (id)getLastLiveNotifyMsg;
- (unsigned int)getBoxCovTime;
- (unsigned int)getLastMsgTime;
- (id)getLastMsg;
- (unsigned int)getTimelineMsgMaxCreateTime;
- (unsigned int)moveMsgToTop:(id)arg1 needNotfiyExt:(_Bool)arg2;
- (void)onServiceInitInCategoryTimeline;
- (id)getCreationCenterBuffer;
- (long long)getCreationCenterNotifyCount;
- (void)updateCreationCenterInfoWithRedDotCount:(long long)arg1 buffer:(id)arg2;
- (void)syncCreationCenterInfo:(id)arg1 scene:(unsigned int)arg2;
- (void)syncCreationCenterInfoIfNeeded;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

