//
// ClassDump By HuangBai Private
//  Copyright (C) 1997-2019 Steve Nygard. Updated HuangBai-2024 
//

@class ConfAVMemberList, IConfSDKRegisterableCallbackHolder, MMConfSDKAudioMgr, MMConfSDKCGIImp, MMConfSDKMemberMgr, MMConfSDKNetworkMgr, MMConfSDKVideoHWenc, MMTimer, NSMutableArray, NSMutableData, NSMutableDictionary, NSObject, NSString, VoIPConfSDKNativeCallbackMgr;
@protocol ILinkPushApiDelegate, OS_dispatch_queue;

@interface ILinkPushService
{
    NSObject<OS_dispatch_queue> *_workerQueue;
    MMConfSDKMemberMgr *_memberMgr;
    MMConfSDKAudioMgr *_audioMgr;
    MMConfSDKNetworkMgr *_networkMgr;
    MMConfSDKCGIImp *_CGIImp;
    id <ILinkPushApiDelegate> _apiDelegate;
    VoIPConfSDKNativeCallbackMgr *voipCallbackMgr;
    IConfSDKRegisterableCallbackHolder *joinSucc;
    IConfSDKRegisterableCallbackHolder *joinFail;
    IConfSDKRegisterableCallbackHolder *inviteSucc;
    IConfSDKRegisterableCallbackHolder *inviteFail;
    IConfSDKRegisterableCallbackHolder *inviteTimeout;
    IConfSDKRegisterableCallbackHolder *recvInvite;
    IConfSDKRegisterableCallbackHolder *recvInviteBusy;
    IConfSDKRegisterableCallbackHolder *recvNotifyFail;
    IConfSDKRegisterableCallbackHolder *ackSucc;
    IConfSDKRegisterableCallbackHolder *ackFail;
    IConfSDKRegisterableCallbackHolder *acceptSucc;
    IConfSDKRegisterableCallbackHolder *acceptFail;
    IConfSDKRegisterableCallbackHolder *acceptTimeout;
    IConfSDKRegisterableCallbackHolder *acceptByOtherDevice;
    IConfSDKRegisterableCallbackHolder *addResult;
    IConfSDKRegisterableCallbackHolder *memberChange;
    IConfSDKRegisterableCallbackHolder *videoMemberChange;
    IConfSDKRegisterableCallbackHolder *talkSucc;
    IConfSDKRegisterableCallbackHolder *talkFail;
    IConfSDKRegisterableCallbackHolder *callBroken;
    IConfSDKRegisterableCallbackHolder *callExit;
    IConfSDKRegisterableCallbackHolder *sessionExpiredCallback;
    IConfSDKRegisterableCallbackHolder *recvMissInvite;
    CDUnknownBlockType _currentInterruptedCallback;
    CDUnknownBlockType _currentSpeakerChangedCallback;
    ConfAVMemberList *confAVMemberList;
    int _currentStatus;
    NSString *_currentAppId;
    int _exitReason;
    _Bool _isInited;
    _Bool _isIniting;
    int _errCode;
    int _initRet;
    _Bool _isRequireExit;
    CDUnknownBlockType _pendingExitCallback;
    _Bool _isSyncJoinDone;
    _Bool _isCallbackJoinDone;
    _Bool _isCallbackTalkDone;
    _Bool _isCameraStarted;
    _Bool _isHandsFree;
    int _screenStatus;
    _Bool _alreadyNotifyReady;
    _Bool _alreadyNotifyScreenSharing;
    _Bool _isProcessingMemberChg;
    long long _roomId;
    int _audioType;
    int _roomType;
    int _videoRatio;
    int _videoLength;
    _Bool _isMicrophoneMute;
    int mLastSimCardType;
    int _hwEncStatus;
    int _capW;
    int _capH;
    int _encStatusList[2];
    _Bool _isSWEncUsing;
    int _capStatus;
    MMConfSDKVideoHWenc *_hwEncoderList[2];
    struct stCloudVHWParam *_qosParam[2];
    CDStruct_6fac3b9d _encModeStatus;
    int _screenEncStatusList[2];
    _Bool _isSWScreenEncUsing;
    MMConfSDKVideoHWenc *_hwScreenEncoderList[2];
    struct __sFILE *_pfEncSteam[2];
    int _hwFrameCnt[2];
    NSString *selfUsername;
    long long selfUin;
    NSString *callerName;
    NSString *_currentGroupid;
    NSString *_currentSdkGroupid;
    MMTimer *_timer;
    NSMutableArray *_displayUserList;
    int _memberRole;
    NSMutableArray *_cachedVideoMemberIds;
    NSMutableArray *_cachedInviteNotify;
    NSMutableDictionary *_bannerCreateUserNameInfo;
    struct __CVBuffer *_screenPixelBuffer;
    int _lastScreenPlaneWidth;
    int _lastScreenPlaneHeight;
    NSMutableDictionary *_cachedJoinRoom;
    long long mStartInviteTime;
    long long mStartJoinTime;
    long long mRecvInviteTime;
    _Bool _enableCustomAudio;
    NSMutableArray *_msgArray;
    _Bool _needReInit;
    _Bool _isPaused;
    NSMutableData *_xpsData;
    int mApplicationState;
}

- (void).cxx_destruct;
- (void)OnConfEvent:(int)arg1 errCode:(int)arg2 data:(id)arg3 callbackData:(id)arg4;
- (void)callIfNotNil:(id)arg1 errCode:(int)arg2 data:(id)arg3 callbackData:(id)arg4;
- (void)updateLiveRemoteStatus:(_Bool)arg1;
- (void)renewTimer;
- (void)onTimerExpired;
- (void)uninitEngine;
- (void)releaseDevice;
- (void)svrReport;
- (void)joinimp:(id)arg1 wxGroupId:(id)arg2;
- (void)joinSync:(id)arg1 wxGroupId:(id)arg2;
- (int)joinroom:(id)arg1 wxGroupId:(id)arg2;
- (void)hangup:(int)arg1;
- (void)sendBannerMsg:(unsigned int)arg1;
- (int)engineDoMemberSelectForView:(id)arg1;
- (id)getMemberByMemberid:(int)arg1;
- (id)getMemberByUsername:(id)arg1;
- (id)getMemberByOpenid:(id)arg1;
- (int)checkUsingMultiPathCellularConn;
- (id)getMemberQualityInfoList;
- (id)sortedTalkingMembers;
- (id)getTalkingMember;
- (id)currentMembers;
- (void)forceExitRoom:(int)arg1;
- (void)exitLiveRoom;
- (int)gotEncodeErrCode:(int)arg1 encIdx:(int)arg2;
- (int)sendCustomVideoEncData:(id)arg1 width:(double)arg2 height:(double)arg3 frameType:(long long)arg4;
- (int)gotXpsData:(id)arg1 codecType:(int)arg2 encIdx:(int)arg3 isScreen:(_Bool)arg4;
- (int)gotEncodedData:(id)arg1 isKeyFrame:(_Bool)arg2 codecType:(int)arg3 encIdx:(int)arg4 isScreen:(_Bool)arg5;
- (id)getLastSEIDataForLive;
- (id)getHEX:(id)arg1 limit:(int)arg2;
- (_Bool)sendMessageEx:(id)arg1;
- (id)appendSEIBuffer:(unsigned long long)arg1 msg:(id)arg2;
- (id)add_emulation_prevention_three_byte:(id)arg1;
- (void)stopVideo;
- (void)switchVideoToScreenPaused;
- (void)doVideoScreenSharingSecurityCheck:(id)arg1 fileId:(id)arg2;
- (void)switchVideoToScreen;
- (void)switchVideoToCamera;
- (void)switchVideoWithCameraEnabled:(_Bool)arg1 screenStatus:(int)arg2;
- (void)onVideoFrame:(int)arg1 data:(const char *)arg2 dataLen:(int)arg3 width:(int)arg4 height:(int)arg5 format:(int)arg6;
- (int)sendScreenData:(void *)arg1;
- (int)sendVideoData:(char *)arg1 dataLen:(int)arg2 imgBuf:(struct __CVBuffer *)arg3 width:(int)arg4 height:(int)arg5;
- (int)sendAudioData:(char *)arg1 length:(unsigned int)arg2;
- (int)sendVideoData:(char *)arg1 dataLen:(int)arg2 imgBuf:(struct __CVBuffer *)arg3 width:(int)arg4 height:(int)arg5 format:(int)arg6;
- (int)sendVideoData:(void *)arg1;
- (void)doQosCtrl:(_Bool)arg1;
- (void)CloseCodec:(int)arg1 codecFlag:(int)arg2;
- (int)SetTestParam:(int)arg1 hwParam:(struct stCloudVHWParam *)arg2;
- (int)GetEncHeight:(int)arg1 rmtDispW:(int)arg2 rmtDispH:(int)arg3 mode:(int)arg4;
- (int)GetEncWidth:(int)arg1 rmtDispW:(int)arg2 rmtDispH:(int)arg3 mode:(int)arg4;
- (void)subscribeByUsername:(id)arg1 NeedBigVideo:(_Bool)arg2;
- (void)subscribeAll;
- (void)mayRelease:(_Bool)arg1;
- (void)updateConfig:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)setMicroPhoneMute:(_Bool)arg1;
- (void)setSpeakerPhone:(_Bool)arg1;
- (void)cleanUpLongTermCallbacks;
- (int)exitConferenceSyncWithReason:(int)arg1;
- (int)convertReason:(int)arg1;
- (void)callbackJoin:(CDUnknownBlockType)arg1 errType:(int)arg2 errCode:(int)arg3 errMsg:(id)arg4;
- (int)initWithSession:(_Bool)arg1;
- (void)stopListenNetworkChange;
- (void)startListenNetworkChange;
- (void)cleanUpJoinStatus;
- (void)callbackDeviceStartFailed:(CDUnknownBlockType)arg1 errCode:(int)arg2;
- (void)tryTriggerJoinSucc:(CDUnknownBlockType)arg1;
- (void)setUpLongTermCallbackAfterJoin;
- (void)HandleMemberchangeEvent:(id)arg1 users:(id)arg2;
- (void)notifyVideoMemberChange:(id)arg1;
- (void)readyToTalk;
- (void)onServiceClearData;
- (void)onServiceEnterForeground;
- (void)onServiceEnterBackground;
- (void)onServiceInit;
- (void)onServiceTerminate;
- (void)resumeEncode;
- (void)pauseEncode;
- (void)notifyAudioDeviceChange:(_Bool)arg1 isWirelessDevice:(_Bool)arg2 isWiredDevice:(_Bool)arg3;
- (void)HeadSetPlugin:(_Bool)arg1;
- (void)EndSysCallInterruption;
- (void)BeginSysCallInterruption;
- (void)dealloc;
- (void)initEngine:(CDUnknownBlockType)arg1;
- (void)setMultitalkSelf:(id)arg1 useruin:(long long)arg2 enableCustomAudio:(_Bool)arg3 multitalkApiDelegate:(id)arg4;
- (id)init;
- (void)whenGoingToResign;
- (void)whenDidActive;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

