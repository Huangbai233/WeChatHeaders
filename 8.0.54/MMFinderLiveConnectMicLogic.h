//
// ClassDump By HuangBai Private 
//  Copyright (C) 1997-2019 Steve Nygard. Updated HuangBai-2024
//

@class FinderJumpInfo, FinderJumpInfo_LiteApp, FinderLiveBattleSettingInfo, FinderLiveGetPurchaseMicInfoResponse, FinderLiveLocation, FinderLiveMicInfo_Wording, FinderLivePurchaseMicConfig, MMFinderLiveAudioRoomConnectMicView, MMFinderLiveAudioRoomLocationGuideView, MMFinderLiveConnectMicAudienceApplyInfo, MMFinderLiveConnectMicAudienceApplyPageSheet, MMFinderLiveConnectMicFlowReporter, MMFinderLiveConnectMicLayoutModeSubtitleWrap, MMFinderLiveConnectMicOperationPanel, MMFinderLiveConnectMicPkPanel, MMFinderLiveConnectMicPkSelectionResult, MMFinderLiveConnectMicTeamPkPanel, MMFinderLiveConnectMicUser, MMFinderLiveFreeMicFeatureDescriptionPanel, MMFinderLiveMicInviteAudiencePanel, MMFinderLiveModifyMicSeatNamePanel, MMFinderLiveOperationView, MMFinderLivePaidConnectMicAudienceApplyInfo, MMFinderLivePaidConnectMicAudienceApplyPanel, MMFinderLivePaidConnectMicAudienceOperationPanel, MMFinderLivePaidConnectMicKeepAliveTipsView, MMFinderLivePreviewRelatedOperationView, MMFinderLiveTaskId, MMFinderLivedConnectMicAudiencePreviewCameraView, MMLiveAudienceConnectMicSessionDataReporter, MMLiveCachedConnectMicInfoBeforeSwitchCdnOrTrtc, MMLocatingCoordinateLogic, MMTimer, NSArray, NSMutableArray, NSMutableDictionary, NSMutableOrderedSet, NSMutableSet, NSString, OrderedDictionary, UIView, WCLiveActionSheet;
@protocol MMFinderLiveConnectMicActionDelegate, MMLiveBeautyOperationPanelExternalClosing;

@interface MMFinderLiveConnectMicLogic
{
    _Bool _isAnchorBattleDisabled;
    _Bool _isAnchorPkChangeLayoutEnabled;
    _Bool _isMicWithShareScreenEnabled;
    _Bool _recordPermissionCheckOK;
    _Bool _shouldRecordFirstMicUITime;
    _Bool _canUseNewMicSEI;
    _Bool _isInStopMultiAnchorMicProcess;
    _Bool _hasStartedActivateMicForAnchor;
    _Bool _isInDelayActivateMicForAnchorProcess;
    _Bool _canAutoConnect;
    _Bool _canShowConnectMicButtonRedDot;
    _Bool _isCdnUserBeforeConnectMic;
    _Bool _canUseFetchLiveMicInfoCGI;
    _Bool _isWaitingMultiAnchorMicAcceptCGI;
    _Bool _shouldAcceptRandomMicAfterLastResp;
    _Bool _hasShownAnchorLocationGuideView;
    _Bool _isFetchingLocationForAudience;
    _Bool _isAudienceConnectMicDismissDefaultSource;
    _Bool _isRenewCreateBattleProcess;
    _Bool _needRenewCreateBattle;
    _Bool _paidApplyMicRequesting;
    int _closeCountOfJoinLiveRespAnchorMicSession;
    unsigned int _fetchLiveMicInfoFailedCount;
    unsigned int _audienceDelayTimeInPaidMicCountdown;
    id <MMFinderLiveConnectMicActionDelegate> _actionDelegate;
    MMFinderLiveConnectMicUser *_connectMicAudienceSelfUser;
    MMFinderLiveConnectMicUser *_micTalkingAudienceSelfUser;
    MMFinderLivePreviewRelatedOperationView *_previewRelatedOperationView;
    unsigned long long _micLayoutMode;
    OrderedDictionary *_applyConnectMicAudienceDict;
    NSMutableSet *_unreadApplyConnectMicAudienceSet;
    NSMutableOrderedSet *_closedMicAudienceSessionIdSet;
    OrderedDictionary *_invitedMicAudienceDict;
    OrderedDictionary *_applyConnectMicAnchorDict;
    NSMutableSet *_unreadApplyConnectMicAnchorSet;
    unsigned long long _currentCdnVideoDisplayType;
    unsigned long long _currentCdnVideoDisplayScene;
    unsigned long long _recordPermissionCheckScene;
    MMFinderLiveConnectMicAudienceApplyPageSheet *_applyConnectMicPageSheet;
    WCLiveActionSheet *_modifyMicSeatInfoActionSheet;
    WCLiveActionSheet *_applyAudioMicActionSheet;
    MMFinderLiveAudioRoomConnectMicView *_applyAudioMicActionPage;
    WCLiveActionSheet *_cancelOrStopConnectMicActionSheetForAnchor;
    WCLiveActionSheet *_cancelOrStopConnectMicActionSheetForAudience;
    WCLiveActionSheet *_freeMicUserActionSheet;
    MMFinderLiveModifyMicSeatNamePanel *_modifyMicSeatNamePanel;
    MMFinderLiveMicInviteAudiencePanel *_inviteAudiencePanel;
    NSMutableDictionary *_closeInfoDict;
    MMFinderLiveConnectMicPkPanel *_pkPanel;
    NSMutableDictionary *_unorderedConnectMicAudienceDict;
    OrderedDictionary *_waitConnectAudienceDict;
    NSMutableArray *_connectMicAudienceListForCDNUser;
    OrderedDictionary *_otherRoomConnectMicAudienceDict;
    NSArray *_allMicTalkingUsersList;
    MMTimer *_anchorCheckAcceptedAudienceTimer;
    MMTimer *_anchorCheckMicAnchorUsersTimer;
    MMTimer *_anchorCheckReceivedMicUsersTimer;
    OrderedDictionary *_cachedMicTalkingAudienceDict;
    OrderedDictionary *_micTalkingAudienceDict;
    OrderedDictionary *_appliedMicAnchorDict;
    OrderedDictionary *_acceptedMicAnchorDict;
    MMFinderLiveConnectMicUser *_randomMicTempAnchorUser;
    NSString *_multiAnchorMicSessionIdInJoinLiveResp;
    MMFinderLiveConnectMicUser *_tappedFreeMicUser;
    MMFinderLiveFreeMicFeatureDescriptionPanel *_freeMicFeatureDescriptionPanel;
    unsigned long long _lastStartFreeMicTalkingTime;
    unsigned long long _lastStopFreeMicTalkingTime;
    unsigned long long _timeIntervalThresholdFromLastStartFreeMic;
    unsigned long long _timeIntervalThresholdFromLastStopFreeMic;
    MMFinderLiveConnectMicFlowReporter *_micFlowReporter;
    MMLiveAudienceConnectMicSessionDataReporter *_audienceConnectMicSessionDataReporter;
    unsigned long long _micIndexForAudienceToApplyMic;
    MMFinderLiveConnectMicAudienceApplyInfo *_audienceApplyMicInfo;
    MMFinderLiveConnectMicLayoutModeSubtitleWrap *_micLayoutModeSubtitleWrap;
    unsigned long long _timeIntervalThresholdFromLastFetchLiveMicInfoCGI;
    unsigned long long _lastFetchLiveMicInfoTime;
    unsigned long long _activateMicForAnchorExitRoomRequestCount;
    unsigned long long _activateMicForAnchorExitRoomFinishedCount;
    MMFinderLivedConnectMicAudiencePreviewCameraView *_audiencePreviewCameraView;
    UIView<MMLiveBeautyOperationPanelExternalClosing> *_currentAudienceCameraSettingsCategoryPanel;
    MMFinderLiveConnectMicTeamPkPanel *_teamupPanel;
    MMLiveCachedConnectMicInfoBeforeSwitchCdnOrTrtc *_cachedInfoBeforeSwitchCdnOrTrtc;
    MMLocatingCoordinateLogic *_locatingLogic;
    FinderLiveLocation *_finderLiveLocation;
    MMTimer *_locationValidityTimer;
    MMTimer *_locationGuideTimer;
    MMFinderLiveAudioRoomLocationGuideView *_anchorLocationGuideView;
    unsigned long long _locationPermissionCheckScene;
    NSMutableArray *_renewCreateBattleComplishBlock;
    NSString *_lastFinishedBattleSessionId;
    unsigned long long _selectedBattleDuration;
    MMFinderLiveConnectMicPkSelectionResult *_lastSelectResult;
    unsigned long long _prePkLayoutMode;
    OrderedDictionary *_connectMicAudienceDict;
    NSString *_anchorMicGroupSessionId;
    FinderLiveMicInfo_Wording *_micInfoWording;
    FinderLiveBattleSettingInfo *_battleSettings;
    MMFinderLiveConnectMicOperationPanel *_connectMicOperationPanel;
    NSString *_focusedSdkUserId;
    MMFinderLivePaidConnectMicAudienceApplyPanel *_strongPaidMicAudienceApplyPanel;
    MMFinderLivePaidConnectMicAudienceApplyPanel *_weakPaidMicAudienceApplyPanel;
    MMFinderLivePaidConnectMicAudienceOperationPanel *_weakPaidMicAudienceOperationPanel;
    FinderLivePurchaseMicConfig *_purchaseMicConfig;
    double _paidMicAnchorRating;
    FinderJumpInfo *_paidMicHistoryJumpInfo;
    MMFinderLivePaidConnectMicAudienceApplyInfo *_applyInfo;
    FinderLiveGetPurchaseMicInfoResponse *_cacheGetPurchaseMicInfoResponse;
    FinderJumpInfo_LiteApp *_cachedAudienceFeedBackJumpInfo;
    MMTimer *_paidMicCountdownTimer;
    NSString *_paidMicAudienceApplySessionId;
    NSMutableSet *_paidMicForceManualDisconnectSessionIdSet;
    NSMutableSet *_paidMicAutoDisconnectingSessionIdSet;
    MMFinderLivePaidConnectMicKeepAliveTipsView *_keepAliveTipsView;
}

+ (unsigned long long)convertToMicUserAttrTypeFromConditionType:(unsigned long long)arg1;
+ (unsigned long long)timestampForPaidConnectMicUsageInMS;
+ (unsigned long long)timestampForPaidConnectMicUsageInSeconds;
- (void).cxx_destruct;
@property(nonatomic) unsigned int audienceDelayTimeInPaidMicCountdown; // @synthesize audienceDelayTimeInPaidMicCountdown=_audienceDelayTimeInPaidMicCountdown;
@property(retain, nonatomic) MMFinderLivePaidConnectMicKeepAliveTipsView *keepAliveTipsView; // @synthesize keepAliveTipsView=_keepAliveTipsView;
@property(retain, nonatomic) NSMutableSet *paidMicAutoDisconnectingSessionIdSet; // @synthesize paidMicAutoDisconnectingSessionIdSet=_paidMicAutoDisconnectingSessionIdSet;
@property(retain, nonatomic) NSMutableSet *paidMicForceManualDisconnectSessionIdSet; // @synthesize paidMicForceManualDisconnectSessionIdSet=_paidMicForceManualDisconnectSessionIdSet;
@property(retain, nonatomic) NSString *paidMicAudienceApplySessionId; // @synthesize paidMicAudienceApplySessionId=_paidMicAudienceApplySessionId;
@property(retain, nonatomic) MMTimer *paidMicCountdownTimer; // @synthesize paidMicCountdownTimer=_paidMicCountdownTimer;
@property(retain, nonatomic) FinderJumpInfo_LiteApp *cachedAudienceFeedBackJumpInfo; // @synthesize cachedAudienceFeedBackJumpInfo=_cachedAudienceFeedBackJumpInfo;
@property(retain, nonatomic) FinderLiveGetPurchaseMicInfoResponse *cacheGetPurchaseMicInfoResponse; // @synthesize cacheGetPurchaseMicInfoResponse=_cacheGetPurchaseMicInfoResponse;
@property(retain, nonatomic) MMFinderLivePaidConnectMicAudienceApplyInfo *applyInfo; // @synthesize applyInfo=_applyInfo;
@property(retain, nonatomic) FinderJumpInfo *paidMicHistoryJumpInfo; // @synthesize paidMicHistoryJumpInfo=_paidMicHistoryJumpInfo;
@property(nonatomic) double paidMicAnchorRating; // @synthesize paidMicAnchorRating=_paidMicAnchorRating;
@property(retain, nonatomic) FinderLivePurchaseMicConfig *purchaseMicConfig; // @synthesize purchaseMicConfig=_purchaseMicConfig;
@property(nonatomic) __weak MMFinderLivePaidConnectMicAudienceOperationPanel *weakPaidMicAudienceOperationPanel; // @synthesize weakPaidMicAudienceOperationPanel=_weakPaidMicAudienceOperationPanel;
@property(nonatomic) __weak MMFinderLivePaidConnectMicAudienceApplyPanel *weakPaidMicAudienceApplyPanel; // @synthesize weakPaidMicAudienceApplyPanel=_weakPaidMicAudienceApplyPanel;
@property(retain, nonatomic) MMFinderLivePaidConnectMicAudienceApplyPanel *strongPaidMicAudienceApplyPanel; // @synthesize strongPaidMicAudienceApplyPanel=_strongPaidMicAudienceApplyPanel;
@property(nonatomic) _Bool paidApplyMicRequesting; // @synthesize paidApplyMicRequesting=_paidApplyMicRequesting;
@property(retain, nonatomic) NSString *focusedSdkUserId; // @synthesize focusedSdkUserId=_focusedSdkUserId;
@property(retain, nonatomic) MMFinderLiveConnectMicOperationPanel *connectMicOperationPanel; // @synthesize connectMicOperationPanel=_connectMicOperationPanel;
@property(retain, nonatomic) FinderLiveBattleSettingInfo *battleSettings; // @synthesize battleSettings=_battleSettings;
@property(retain, nonatomic) FinderLiveMicInfo_Wording *micInfoWording; // @synthesize micInfoWording=_micInfoWording;
@property(copy, nonatomic) NSString *anchorMicGroupSessionId; // @synthesize anchorMicGroupSessionId=_anchorMicGroupSessionId;
@property(retain, nonatomic) OrderedDictionary *connectMicAudienceDict; // @synthesize connectMicAudienceDict=_connectMicAudienceDict;
@property(nonatomic) unsigned long long prePkLayoutMode; // @synthesize prePkLayoutMode=_prePkLayoutMode;
@property(retain, nonatomic) MMFinderLiveConnectMicPkSelectionResult *lastSelectResult; // @synthesize lastSelectResult=_lastSelectResult;
@property(readonly, nonatomic) unsigned long long selectedBattleDuration; // @synthesize selectedBattleDuration=_selectedBattleDuration;
@property(retain, nonatomic) NSString *lastFinishedBattleSessionId; // @synthesize lastFinishedBattleSessionId=_lastFinishedBattleSessionId;
@property(retain, nonatomic) NSMutableArray *renewCreateBattleComplishBlock; // @synthesize renewCreateBattleComplishBlock=_renewCreateBattleComplishBlock;
@property(nonatomic) _Bool needRenewCreateBattle; // @synthesize needRenewCreateBattle=_needRenewCreateBattle;
@property(nonatomic) _Bool isRenewCreateBattleProcess; // @synthesize isRenewCreateBattleProcess=_isRenewCreateBattleProcess;
@property(nonatomic) _Bool isAudienceConnectMicDismissDefaultSource; // @synthesize isAudienceConnectMicDismissDefaultSource=_isAudienceConnectMicDismissDefaultSource;
@property(nonatomic) _Bool isFetchingLocationForAudience; // @synthesize isFetchingLocationForAudience=_isFetchingLocationForAudience;
@property(nonatomic) _Bool hasShownAnchorLocationGuideView; // @synthesize hasShownAnchorLocationGuideView=_hasShownAnchorLocationGuideView;
@property(nonatomic) unsigned long long locationPermissionCheckScene; // @synthesize locationPermissionCheckScene=_locationPermissionCheckScene;
@property(retain, nonatomic) MMFinderLiveAudioRoomLocationGuideView *anchorLocationGuideView; // @synthesize anchorLocationGuideView=_anchorLocationGuideView;
@property(retain, nonatomic) MMTimer *locationGuideTimer; // @synthesize locationGuideTimer=_locationGuideTimer;
@property(retain, nonatomic) MMTimer *locationValidityTimer; // @synthesize locationValidityTimer=_locationValidityTimer;
@property(retain, nonatomic) FinderLiveLocation *finderLiveLocation; // @synthesize finderLiveLocation=_finderLiveLocation;
@property(retain, nonatomic) MMLocatingCoordinateLogic *locatingLogic; // @synthesize locatingLogic=_locatingLogic;
@property(retain, nonatomic) MMLiveCachedConnectMicInfoBeforeSwitchCdnOrTrtc *cachedInfoBeforeSwitchCdnOrTrtc; // @synthesize cachedInfoBeforeSwitchCdnOrTrtc=_cachedInfoBeforeSwitchCdnOrTrtc;
@property(nonatomic) _Bool shouldAcceptRandomMicAfterLastResp; // @synthesize shouldAcceptRandomMicAfterLastResp=_shouldAcceptRandomMicAfterLastResp;
@property(nonatomic) _Bool isWaitingMultiAnchorMicAcceptCGI; // @synthesize isWaitingMultiAnchorMicAcceptCGI=_isWaitingMultiAnchorMicAcceptCGI;
@property(retain, nonatomic) MMFinderLiveConnectMicTeamPkPanel *teamupPanel; // @synthesize teamupPanel=_teamupPanel;
@property(retain, nonatomic) UIView<MMLiveBeautyOperationPanelExternalClosing> *currentAudienceCameraSettingsCategoryPanel; // @synthesize currentAudienceCameraSettingsCategoryPanel=_currentAudienceCameraSettingsCategoryPanel;
@property(retain, nonatomic) MMFinderLivedConnectMicAudiencePreviewCameraView *audiencePreviewCameraView; // @synthesize audiencePreviewCameraView=_audiencePreviewCameraView;
@property(nonatomic) unsigned long long activateMicForAnchorExitRoomFinishedCount; // @synthesize activateMicForAnchorExitRoomFinishedCount=_activateMicForAnchorExitRoomFinishedCount;
@property(nonatomic) unsigned long long activateMicForAnchorExitRoomRequestCount; // @synthesize activateMicForAnchorExitRoomRequestCount=_activateMicForAnchorExitRoomRequestCount;
@property(nonatomic) unsigned int fetchLiveMicInfoFailedCount; // @synthesize fetchLiveMicInfoFailedCount=_fetchLiveMicInfoFailedCount;
@property(nonatomic) unsigned long long lastFetchLiveMicInfoTime; // @synthesize lastFetchLiveMicInfoTime=_lastFetchLiveMicInfoTime;
@property(nonatomic) unsigned long long timeIntervalThresholdFromLastFetchLiveMicInfoCGI; // @synthesize timeIntervalThresholdFromLastFetchLiveMicInfoCGI=_timeIntervalThresholdFromLastFetchLiveMicInfoCGI;
@property(nonatomic) _Bool canUseFetchLiveMicInfoCGI; // @synthesize canUseFetchLiveMicInfoCGI=_canUseFetchLiveMicInfoCGI;
@property(nonatomic) _Bool isCdnUserBeforeConnectMic; // @synthesize isCdnUserBeforeConnectMic=_isCdnUserBeforeConnectMic;
@property(retain, nonatomic) MMFinderLiveConnectMicLayoutModeSubtitleWrap *micLayoutModeSubtitleWrap; // @synthesize micLayoutModeSubtitleWrap=_micLayoutModeSubtitleWrap;
@property(retain, nonatomic) MMFinderLiveConnectMicAudienceApplyInfo *audienceApplyMicInfo; // @synthesize audienceApplyMicInfo=_audienceApplyMicInfo;
@property(nonatomic) unsigned long long micIndexForAudienceToApplyMic; // @synthesize micIndexForAudienceToApplyMic=_micIndexForAudienceToApplyMic;
@property(nonatomic) _Bool canShowConnectMicButtonRedDot; // @synthesize canShowConnectMicButtonRedDot=_canShowConnectMicButtonRedDot;
@property(nonatomic) _Bool canAutoConnect; // @synthesize canAutoConnect=_canAutoConnect;
@property(retain, nonatomic) MMLiveAudienceConnectMicSessionDataReporter *audienceConnectMicSessionDataReporter; // @synthesize audienceConnectMicSessionDataReporter=_audienceConnectMicSessionDataReporter;
@property(retain, nonatomic) MMFinderLiveConnectMicFlowReporter *micFlowReporter; // @synthesize micFlowReporter=_micFlowReporter;
@property(nonatomic) unsigned long long timeIntervalThresholdFromLastStopFreeMic; // @synthesize timeIntervalThresholdFromLastStopFreeMic=_timeIntervalThresholdFromLastStopFreeMic;
@property(nonatomic) unsigned long long timeIntervalThresholdFromLastStartFreeMic; // @synthesize timeIntervalThresholdFromLastStartFreeMic=_timeIntervalThresholdFromLastStartFreeMic;
@property(nonatomic) unsigned long long lastStopFreeMicTalkingTime; // @synthesize lastStopFreeMicTalkingTime=_lastStopFreeMicTalkingTime;
@property(nonatomic) unsigned long long lastStartFreeMicTalkingTime; // @synthesize lastStartFreeMicTalkingTime=_lastStartFreeMicTalkingTime;
@property(nonatomic) __weak MMFinderLiveFreeMicFeatureDescriptionPanel *freeMicFeatureDescriptionPanel; // @synthesize freeMicFeatureDescriptionPanel=_freeMicFeatureDescriptionPanel;
@property(retain, nonatomic) MMFinderLiveConnectMicUser *tappedFreeMicUser; // @synthesize tappedFreeMicUser=_tappedFreeMicUser;
@property(nonatomic) _Bool isInDelayActivateMicForAnchorProcess; // @synthesize isInDelayActivateMicForAnchorProcess=_isInDelayActivateMicForAnchorProcess;
@property(nonatomic) _Bool hasStartedActivateMicForAnchor; // @synthesize hasStartedActivateMicForAnchor=_hasStartedActivateMicForAnchor;
@property(nonatomic) int closeCountOfJoinLiveRespAnchorMicSession; // @synthesize closeCountOfJoinLiveRespAnchorMicSession=_closeCountOfJoinLiveRespAnchorMicSession;
@property(copy, nonatomic) NSString *multiAnchorMicSessionIdInJoinLiveResp; // @synthesize multiAnchorMicSessionIdInJoinLiveResp=_multiAnchorMicSessionIdInJoinLiveResp;
@property(nonatomic) _Bool isInStopMultiAnchorMicProcess; // @synthesize isInStopMultiAnchorMicProcess=_isInStopMultiAnchorMicProcess;
@property(retain, nonatomic) MMFinderLiveConnectMicUser *randomMicTempAnchorUser; // @synthesize randomMicTempAnchorUser=_randomMicTempAnchorUser;
@property(retain, nonatomic) OrderedDictionary *acceptedMicAnchorDict; // @synthesize acceptedMicAnchorDict=_acceptedMicAnchorDict;
@property(retain, nonatomic) OrderedDictionary *appliedMicAnchorDict; // @synthesize appliedMicAnchorDict=_appliedMicAnchorDict;
@property(retain, nonatomic) OrderedDictionary *micTalkingAudienceDict; // @synthesize micTalkingAudienceDict=_micTalkingAudienceDict;
@property(retain, nonatomic) OrderedDictionary *cachedMicTalkingAudienceDict; // @synthesize cachedMicTalkingAudienceDict=_cachedMicTalkingAudienceDict;
@property(nonatomic) _Bool canUseNewMicSEI; // @synthesize canUseNewMicSEI=_canUseNewMicSEI;
@property(nonatomic) _Bool shouldRecordFirstMicUITime; // @synthesize shouldRecordFirstMicUITime=_shouldRecordFirstMicUITime;
@property(retain, nonatomic) MMTimer *anchorCheckReceivedMicUsersTimer; // @synthesize anchorCheckReceivedMicUsersTimer=_anchorCheckReceivedMicUsersTimer;
@property(retain, nonatomic) MMTimer *anchorCheckMicAnchorUsersTimer; // @synthesize anchorCheckMicAnchorUsersTimer=_anchorCheckMicAnchorUsersTimer;
@property(retain, nonatomic) MMTimer *anchorCheckAcceptedAudienceTimer; // @synthesize anchorCheckAcceptedAudienceTimer=_anchorCheckAcceptedAudienceTimer;
@property(retain, nonatomic) NSArray *allMicTalkingUsersList; // @synthesize allMicTalkingUsersList=_allMicTalkingUsersList;
@property(retain, nonatomic) OrderedDictionary *otherRoomConnectMicAudienceDict; // @synthesize otherRoomConnectMicAudienceDict=_otherRoomConnectMicAudienceDict;
@property(retain, nonatomic) NSMutableArray *connectMicAudienceListForCDNUser; // @synthesize connectMicAudienceListForCDNUser=_connectMicAudienceListForCDNUser;
@property(retain, nonatomic) OrderedDictionary *waitConnectAudienceDict; // @synthesize waitConnectAudienceDict=_waitConnectAudienceDict;
@property(retain, nonatomic) NSMutableDictionary *unorderedConnectMicAudienceDict; // @synthesize unorderedConnectMicAudienceDict=_unorderedConnectMicAudienceDict;
@property(retain, nonatomic) MMFinderLiveConnectMicPkPanel *pkPanel; // @synthesize pkPanel=_pkPanel;
@property(retain, nonatomic) NSMutableDictionary *closeInfoDict; // @synthesize closeInfoDict=_closeInfoDict;
@property(nonatomic) __weak MMFinderLiveMicInviteAudiencePanel *inviteAudiencePanel; // @synthesize inviteAudiencePanel=_inviteAudiencePanel;
@property(nonatomic) __weak MMFinderLiveModifyMicSeatNamePanel *modifyMicSeatNamePanel; // @synthesize modifyMicSeatNamePanel=_modifyMicSeatNamePanel;
@property(retain, nonatomic) WCLiveActionSheet *freeMicUserActionSheet; // @synthesize freeMicUserActionSheet=_freeMicUserActionSheet;
@property(retain, nonatomic) WCLiveActionSheet *cancelOrStopConnectMicActionSheetForAudience; // @synthesize cancelOrStopConnectMicActionSheetForAudience=_cancelOrStopConnectMicActionSheetForAudience;
@property(retain, nonatomic) WCLiveActionSheet *cancelOrStopConnectMicActionSheetForAnchor; // @synthesize cancelOrStopConnectMicActionSheetForAnchor=_cancelOrStopConnectMicActionSheetForAnchor;
@property(retain, nonatomic) MMFinderLiveAudioRoomConnectMicView *applyAudioMicActionPage; // @synthesize applyAudioMicActionPage=_applyAudioMicActionPage;
@property(retain, nonatomic) WCLiveActionSheet *applyAudioMicActionSheet; // @synthesize applyAudioMicActionSheet=_applyAudioMicActionSheet;
@property(nonatomic) __weak WCLiveActionSheet *modifyMicSeatInfoActionSheet; // @synthesize modifyMicSeatInfoActionSheet=_modifyMicSeatInfoActionSheet;
@property(retain, nonatomic) MMFinderLiveConnectMicAudienceApplyPageSheet *applyConnectMicPageSheet; // @synthesize applyConnectMicPageSheet=_applyConnectMicPageSheet;
@property(nonatomic) unsigned long long recordPermissionCheckScene; // @synthesize recordPermissionCheckScene=_recordPermissionCheckScene;
@property(nonatomic) _Bool recordPermissionCheckOK; // @synthesize recordPermissionCheckOK=_recordPermissionCheckOK;
@property(nonatomic) unsigned long long currentCdnVideoDisplayScene; // @synthesize currentCdnVideoDisplayScene=_currentCdnVideoDisplayScene;
@property(nonatomic) unsigned long long currentCdnVideoDisplayType; // @synthesize currentCdnVideoDisplayType=_currentCdnVideoDisplayType;
@property(retain, nonatomic) NSMutableSet *unreadApplyConnectMicAnchorSet; // @synthesize unreadApplyConnectMicAnchorSet=_unreadApplyConnectMicAnchorSet;
@property(retain, nonatomic) OrderedDictionary *applyConnectMicAnchorDict; // @synthesize applyConnectMicAnchorDict=_applyConnectMicAnchorDict;
@property(retain, nonatomic) OrderedDictionary *invitedMicAudienceDict; // @synthesize invitedMicAudienceDict=_invitedMicAudienceDict;
@property(retain, nonatomic) NSMutableOrderedSet *closedMicAudienceSessionIdSet; // @synthesize closedMicAudienceSessionIdSet=_closedMicAudienceSessionIdSet;
@property(retain, nonatomic) NSMutableSet *unreadApplyConnectMicAudienceSet; // @synthesize unreadApplyConnectMicAudienceSet=_unreadApplyConnectMicAudienceSet;
@property(retain, nonatomic) OrderedDictionary *applyConnectMicAudienceDict; // @synthesize applyConnectMicAudienceDict=_applyConnectMicAudienceDict;
@property(nonatomic) unsigned long long micLayoutMode; // @synthesize micLayoutMode=_micLayoutMode;
@property(nonatomic) _Bool isMicWithShareScreenEnabled; // @synthesize isMicWithShareScreenEnabled=_isMicWithShareScreenEnabled;
@property(nonatomic) _Bool isAnchorPkChangeLayoutEnabled; // @synthesize isAnchorPkChangeLayoutEnabled=_isAnchorPkChangeLayoutEnabled;
@property(nonatomic) _Bool isAnchorBattleDisabled; // @synthesize isAnchorBattleDisabled=_isAnchorBattleDisabled;
@property(retain, nonatomic) MMFinderLivePreviewRelatedOperationView *previewRelatedOperationView; // @synthesize previewRelatedOperationView=_previewRelatedOperationView;
@property(retain, nonatomic) MMFinderLiveConnectMicUser *micTalkingAudienceSelfUser; // @synthesize micTalkingAudienceSelfUser=_micTalkingAudienceSelfUser;
@property(retain, nonatomic) MMFinderLiveConnectMicUser *connectMicAudienceSelfUser; // @synthesize connectMicAudienceSelfUser=_connectMicAudienceSelfUser;
@property(nonatomic) __weak id <MMFinderLiveConnectMicActionDelegate> actionDelegate; // @synthesize actionDelegate=_actionDelegate;
- (void)anchorConnectMicModeSettingPanelReportWithExtraDict:(id)arg1 subElementType:(unsigned int)arg2;
- (_Bool)anchorConnectMicModeSettingPanelCanChangeMicLayoutMode;
- (void)anchorConnectMicModeSettingPanelDidUpdatePaidConnectMicAnchorSetting:(id)arg1;
- (void)anchorConnectMicModeSettingPanelDidCloseWithSelectedMode:(unsigned long long)arg1 paidMicSetting:(id)arg2;
- (void)onMMFinderLiveMicInviteAudiencePanelInviteUser:(id)arg1 micIndex:(unsigned long long)arg2;
- (void)onMMFinderLiveModifyMicSeatNamePanelModifyMicSeatName:(id)arg1 withSeatId:(unsigned long long)arg2 seatBaseInfo:(id)arg3;
- (void)onMMFinderLiveAudioRoomInfoViewUnmuteMicWithUserInfo:(id)arg1;
- (void)onMMFinderLiveAudioRoomInfoViewTappedWithUserInfo:(id)arg1 micSeatInfo:(id)arg2 targetView:(id)arg3;
- (void)onMMFinderLiveMicInviteAudienceBubbleViewAcceptButtonTappedWithSeatId:(unsigned long long)arg1 inviteMicBuffer:(id)arg2;
- (void)maximizeOrMinimizeMicAudience:(id)arg1 isMaximizeOperation:(_Bool)arg2;
- (void)handleInviteAudienceMicWithSeatId:(unsigned int)arg1 isVideoMic:(_Bool)arg2 expiredTime:(unsigned long long)arg3 inviteMicBuffer:(id)arg4;
- (void)inviteAudienceConnectMicWithUserInfo:(id)arg1 micIndex:(unsigned long long)arg2;
- (void)showInviteAudiencePanelWithMicIndex:(unsigned long long)arg1;
- (void)onLiveKTVSongOperationRequestSongBlockedWithType:(unsigned long long)arg1 taskId:(id)arg2;
- (void)onLiveTaskId:(id)arg1 ktvState:(id)arg2 singerUserIdChanged:(id)arg3;
- (void)checkAndUpdateAudioRoomMicUsersInfoForTrtcAudienceWithLiveTask:(id)arg1 isMicLayoutModeChanged:(_Bool)arg2;
- (void)updateKtvSingerFlagInAudioRoomMicUsersInfo;
- (void)updateAudioRoomMicViewsWithUIChangeType:(unsigned long long)arg1;
- (void)updateAudioRoomInfoView;
- (void)handleAudioRoomSEIMicMsgInfoUpdated:(id)arg1 listChanged:(_Bool)arg2;
- (void)resetAllMicIndexInListForAudioRoomModeWithUnoccupiedSeatListUpdateFlag:(_Bool)arg1;
- (void)resetAllMicIndexInListWithAudioRoomScene:(unsigned long long)arg1;
- (void)updateAudioRoomModeMicIndexAndSeatListForTrtcUserWithLiveTask:(id)arg1;
- (void)handleAudioRoomSceneChangedTo:(unsigned long long)arg1;
- (void)updateViewsAfterMicUsersInfoSeatNameChanged:(_Bool)arg1;
- (void)modifyMicSeatName:(id)arg1 withSeatId:(unsigned long long)arg2;
- (void)showModifyMicSeatInfoActionSheetWithSeatBaseInfo:(id)arg1 settingFlag:(unsigned long long)arg2;
- (void)checkAudiencePkStartTipsStateIfNeeded;
- (void)onMMFinderLiveConnectedMicUserCellViewConnectMicToUser:(id)arg1;
- (void)updateAnchorPkLayoutMode:(unsigned long long)arg1 notifyToServer:(_Bool)arg2;
- (void)onConnectMicAnchorPkLayoutModeChangeConfirmed:(unsigned long long)arg1;
- (void)onConnectMicAudienceSettingsPanel:(id)arg1 autoConnectChanged:(_Bool)arg2;
- (void)onConnectMicAudienceSettingsPanel:(id)arg1 conditionChanged:(unsigned long long)arg2;
- (_Bool)tryRemoveConnectMicUserFromApplyDictForPaidMicWithSdkUserId:(id)arg1 sessionId:(id)arg2;
- (void)doStopAudienceSelfConnectMic;
- (void)onConnectMicPkPanelWillClose;
- (void)onConnectMicPkPanelFinishPkPrematurely;
- (void)onConnectMicPkPanelQuitPk;
- (void)onMMFinderLiveConnectMicPkPanelInviteMicToAudienceUser:(id)arg1;
- (void)onMMFinderLiveConnectMicPkPanelCancelConnectToUser:(id)arg1;
- (void)onMMFinderLiveConnectMicPkPanelCloseConnectToUser:(id)arg1;
- (void)onMMFinderLiveConnectMicPkPanelApplyConnectToUser:(id)arg1;
- (void)onMMFinderLiveConnectMicPkPanelAcceptConnectFromUser:(id)arg1;
- (void)onMMFinderLiveConnectMicPkPanelMoreAction;
- (void)onMMFinderLiveConnectMicPkPanelSearchAction;
- (void)onMMFinderLiveConnectMicPkPanelStartPk;
- (void)onMMFinderLiveConnectMicPkPanelChangePlayMode;
- (void)onMMFinderLiveConnectMicPkPanelApplyOneMore;
- (void)onMMFinderLiveConnectMicPkPanelCancelPk;
- (void)onMMFinderLiveConnectMicPkPanelAcceptPk;
- (void)onMMFinderLiveConnectMicPkPanelCloseMic;
- (void)updateAnchorPkChangeLayoutEnabled:(_Bool)arg1;
- (void)updateMicWithShareScreenEnabled:(_Bool)arg1;
- (_Bool)checkIsShareScreenBlocked:(_Bool)arg1 showToast:(_Bool)arg2;
- (_Bool)checkIsShareScreenBlockedAndShowToast;
- (void)handleIsViewCapturingChangedTo:(_Bool)arg1;
- (void)closeAllPageSheets;
- (void)onMMLiveMakeupOperationPanelClose:(_Bool)arg1;
- (void)onMMLiveBeautyOperationContainerViewClose:(_Bool)arg1;
- (void)onMMLiveFilterOperationPanelClose:(_Bool)arg1;
- (void)onMMLiveConnectMicAudienceCameraOperationPanelLayoutUpdated:(id)arg1;
- (void)onMMLiveConnectMicAudienceCameraOperationPanel:(id)arg1 didCloseWithNextState:(unsigned long long)arg2;
- (void)onMMLiveConnectMicAudienceCameraOperationPanel:(id)arg1 willCloseWithNextState:(unsigned long long)arg2;
- (void)onMMLiveConnectMicAudienceCameraOperationPanelSwitchCameraInvoked:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)onMMLiveConnectMicAudienceCameraOperationPanelMirrorFrontCameraInvoked:(id)arg1;
- (void)onConnectMicAudienceApplyCameraSettingsRequestedFromPageSheet:(id)arg1;
- (void)onConnectMicAudienceApplyCanceledFromPageSheet:(id)arg1;
- (void)onConnectMicAudienceAppliedUsingVideo:(_Bool)arg1 fromPageSheet:(id)arg2;
- (void)scrollActionSheet:(id)arg1 didSelecteItem:(id)arg2;
- (void)closeConnectMicOperationPanelAnimated:(_Bool)arg1;
- (void)onRequestSynchronzizeInfoForSEIAnchorInfo:(id)arg1;
- (void)OnRecordDeniedByWeChat;
- (void)OnRecordDenied;
- (void)OnRecordPermissioned;
- (void)onExtendFromCollapseAnimationDidEndWithLiveTask:(id)arg1;
- (void)handleAudienceLocalAudioModeChangedTo:(_Bool)arg1;
- (void)handleLiveAdvertisementAppearanceChanged:(_Bool)arg1 withLiveAdId:(id)arg2;
- (void)handleLiveVideoViewRealAppearanceChanged:(_Bool)arg1 withFinderLiveTask:(id)arg2;
- (void)onLiveView:(id)arg1 videoViewAppearanceChanged:(_Bool)arg2;
- (void)onLiveViewMainVideoViewFrameChanged:(id)arg1 newVideoViewFrame:(struct CGRect)arg2;
- (void)onMMFinderLiveMicTalkingUsersViewTapUser:(id)arg1;
- (void)onMMFinderLiveConnectMicAllUserInfoPkStatusChange:(unsigned long long)arg1 toState:(unsigned long long)arg2;
- (void)handleConnectMicSettingUpdatedChanges:(id)arg1;
- (_Bool)onMMFinderLiveConnectMicOperationPanelIsApplyAudienceBattleBlocked;
- (_Bool)isApplyAudienceBattleBlocked;
- (_Bool)onMMFinderLiveConnectMicOperationPanelIsChangeMicLayoutModeBlocked;
- (_Bool)isChangeMicLayoutModeBlocked;
- (_Bool)isChangeMicLayoutModeToFocusModeBlocked;
- (_Bool)onMMFinderLiveConnectMicOperationPanelIsFocusBlocked;
- (id)onMMFinderLiveConnectMicOperationPanelGetFocusedUserId;
- (void)onMMFinderLiveConnectMicInvitePkPanelCloseMic;
- (void)onMMFinderLiveConnectMicNewInvitePkPanelTapPkViewWithOpponentScenario:(unsigned long long)arg1;
- (void)onMMFinderLiveConnectMicAllUserInfoViewPkHeatViewTappedForPkUser:(id)arg1;
- (void)onMMFinderLiveConnectMicAllUserInfoViewTapCurrentAnchorMuteMicButton;
- (void)onMMFinderLiveConnectMicAllUserInfoViewGiftingRequestedWithPreferredGiftId:(id)arg1;
- (void)onMMFinderLiveConnectMicAllUserInfoSeatViewTappedWithMicSeatInfo:(id)arg1;
- (void)onMMFinderLiveConnectMicAllUserInfoViewTapVote;
- (void)onMMFinderLiveConnectMicAllUserInfoViewUpdatedConnectMicUserList;
- (void)onMMFinderLiveConnectMicAllUserInfoViewUpdatedWidgets;
- (void)onMMFinderLiveConnectMicAllUserInfoViewTapAcceptPk;
- (void)onMMFinderLiveConnectMicAllUserInfoViewTapUserAreaWithUserInfo:(id)arg1 targetMicOperationView:(id)arg2 isAvatarTapped:(_Bool)arg3;
- (void)onMMFinderLiveConnectMicAllUserInfoViewUnmuteMicWithUserInfo:(id)arg1;
- (void)onMMFinderLiveConnectMicAllUserInfoViewHiddenStateDidChange:(id)arg1;
- (void)onMMFinderLiveConnectMicOperationPanelSwitchConnectMicMode;
- (void)onMMFinderLiveConnectMicOperationPanelShowKtvSongList;
- (void)onMMFinderLiveConnectMicOperationPanelUpdateMicLayoutMode:(unsigned long long)arg1 focusedUserId:(id)arg2 userIndices:(id)arg3;
- (void)updateMicLayoutMode:(unsigned long long)arg1 focusedUserId:(id)arg2 userIndicesDict:(id)arg3 andUpdateMicInfo:(_Bool)arg4;
- (void)onMMFinderLiveConnectMicOperationPanelUpdateCanAutoConnect:(_Bool)arg1;
- (void)autoConnectCurrentAppliedMicAudienceWithFinderLiveTask:(id)arg1;
- (_Bool)updateCanAutoConnect:(_Bool)arg1;
- (void)onMMFinderLiveConnectMicOperationPanelRandomMatchAnchorMic;
- (void)startRandomMic;
- (_Bool)onMMFinderLiveConnectMicOperationPanelIsRandomMatchAnchorMicBlocked;
- (_Bool)onMMFinderLiveConnectMicOperationPanelIsSearchOnlineAnchorBlocked;
- (void)onMMFinderLiveConnectMicOperationPanelChangeConditionTypeAudience:(unsigned long long)arg1;
- (id)getRealAppliedAnchorUserForAnchorFromUser:(id)arg1;
- (id)getRealAcceptedAudienceForAnchorFromUser:(id)arg1;
- (void)onMMFinderLiveConnectMicOperationPanelInviteMicToAudienceUser:(id)arg1;
- (void)onMMFinderLiveConnectMicOperationPanelCancelConnectToUser:(id)arg1;
- (void)onMMFinderLiveConnectMicOperationPanelCloseConnectToUser:(id)arg1;
- (void)handleAcceptLiveMicResult:(_Bool)arg1 error:(id)arg2 sessionId:(id)arg3 userInfo:(id)arg4 isNewAnchorMic:(_Bool)arg5;
- (void)onMMFinderLiveConnectMicOperationPanelApplyConnectToUser:(id)arg1;
- (void)checkAndUpdateAcceptedMicAudienceMicIndexWithUserInfo:(id)arg1 audioRoomScene:(unsigned long long)arg2;
- (_Bool)checkIsAnchorMicBlockedByViewCaptureAndShowToast;
@property(readonly, nonatomic) _Bool randomMicCapable;
- (_Bool)checkCanApplyOrAcceptNewAnchorMicAndShowToast:(_Bool)arg1;
- (_Bool)checkCanApplyOrAcceptNewAnchorMic;
- (void)realAcceptConnectMicWithUser:(id)arg1;
- (void)onMMFinderLiveConnectMicOperationPanelAcceptConnectFromUser:(id)arg1;
- (_Bool)onMMFinderLiveConnectMicOperationPanelGetIsWaitingMultiAnchorMicAcceptCGI;
- (void)onMMFinderLiveConnectMicOperationPanelGetPaidConnectMicPanelInfoForAnchor:(CDUnknownBlockType)arg1;
- (unsigned long long)onMMFinderLiveConnectMicOperationPanelGetBannedConditionType;
- (id)onMMFinderLiveConnectMicOperationPanelGetInvitedMicAudienceDict;
- (id)onMMFinderLiveConnectMicOperationPanelGetConnectingAnchorUserList;
- (id)onMMFinderLiveConnectMicOperationPanelGetConnectMicUserListWithType:(unsigned long long)arg1;
- (_Bool)onMMFinderLiveConnectMicOperationPanelShouldShowRedDotAtTab:(unsigned long long)arg1;
- (void)onMMFinderLiveConnectMicOperationPanelClose;
- (void)checkAndUpdateKTVStatus;
- (id)getRemovedAudienceSetForInviteAudienceMic;
- (id)getWaitConnectAudienceSetForInviteAudienceMic;
- (void)checkAndUpdateInviteAudiencePanel;
- (void)checkAndUpdatePkPanel;
- (void)checkAndUpdateConnectMicOperationPanel;
- (void)_doApplyConnectMicWithVideo:(_Bool)arg1 showLocation:(_Bool)arg2;
- (void)checkMysteriousBadgeInfoAndApplyConnectMicWithVideo:(_Bool)arg1 showLocation:(_Bool)arg2;
- (void)checkMysteriousBadgeInfoAndApplyConnectMicWithVideo:(_Bool)arg1;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)onMMFinderLiveConnectMicUserViewTapped;
- (void)onMMFinderLiveConnectMicUserViewTapHangup;
- (void)onMMFinderLiveConnectMicUserViewMoveEnd;
@property(readonly, nonatomic) _Bool hasConnectingOrWaitConnectMicAnchor;
@property(readonly, nonatomic) unsigned long long connectingAndWaitConnectMicAnchorCount;
@property(readonly, nonatomic) _Bool isWaitingConnectingMic;
@property(readonly, nonatomic) _Bool isAudienceWaitingConnectingMic;
@property(readonly, nonatomic) _Bool isConnectingMic;
@property(readonly, nonatomic) UIView *containerView;
- (id)operationViewModel;
- (id)getFinderLiveTask;
@property(readonly, nonatomic) MMFinderLiveOperationView *finderLiveOperationView;
@property(readonly, nonatomic) MMFinderLiveTaskId *finderLiveTaskId;
- (_Bool)checkAndUnmuteMicWithUserInfoFromMicView:(id)arg1;
- (void)updateAllOtherRoomMicUsersVolumeAndTalkingStateByMicUserInfo:(id)arg1 withFinderLiveTask:(id)arg2;
- (void)updateMicUser:(id)arg1 micMuted:(_Bool)arg2;
- (void)updateMicUserHeatValuesInMicInfo:(id)arg1;
- (void)updateMicUserLocation;
- (void)updateMicUsersInMicInfo:(id)arg1;
- (void)tryShowMicActionSheetForAudienceWithUserInfo:(id)arg1;
- (void)checkReceivedMicUsersForAnchor;
- (void)stopAnchorCheckReceivedMicUsersTimer;
- (void)startAnchorCheckReceivedMicUsersTimer;
- (void)checkAllAcceptedAnchorUsersWithCurrentServerTime:(unsigned int)arg1;
- (void)checkAllAppliedAnchorUsersWithCurrentServerTime:(unsigned int)arg1;
- (void)checkAllMicAnchorUsersForAnchor;
- (_Bool)shouldStopAnchorCheckMicAnchorTimer;
- (void)checkAndStopAnchorCheckMicAnchorUsersTimer;
- (void)stopAnchorCheckMicAnchorUsersTimer;
- (void)startAnchorCheckMicAnchorUsersTimer;
- (void)checkAllWaitConnectMicAudienceUsers;
- (void)stopAnchorCheckAcceptedAudienceTimer;
- (void)startAnchorCheckAcceptedAudienceTimer;
- (void)setFocusedSdkUserIdAndUpdateAnchorStatus:(id)arg1;
- (void)startActivateLiveConnectMicForAnchor;
- (void)activateLiveConnectMicForAnchor;
- (void)startActivateMicForFreeMicAudience;
- (void)activateMicForFreeMicAudience;
- (void)onFinderLocationServiceAuthorizationStatusDidChange:(_Bool)arg1;
- (void)onLocationAuthorizationStatusUpdatedWithAccuracyAuthorization:(long long)arg1;
- (void)resumeActionAfterLocationAuthReq:(_Bool)arg1;
- (void)goToSettingLocationAuthorization;
- (void)showAlertForLocationAuthorization;
- (_Bool)checkLocationAuthWithAction:(_Bool)arg1;
- (void)stopLocationValidityTimer;
- (void)startLocationValidityTimer;
- (void)fetchLocation:(CDUnknownBlockType)arg1;
- (void)onAnchorAllowingLocation:(CDUnknownBlockType)arg1;
- (void)showAudioRoomAnchorLocationGuide;
- (void)checkAndShowAudioRoomAnchorLocationGuide;
- (void)prepareAudioRoomAnchorLocationGuide;
- (void)checkAndUpdateShowAnchorLocationFlagForAudience;
- (void)setLiveAnchorLocationStatus:(_Bool)arg1;
- (void)updateShowAnchorLocationFlagForAnchor:(_Bool)arg1 completeBlock:(CDUnknownBlockType)arg2;
- (void)updateAudienceMicLayoutModeWithSEIMicMsgInfo:(id)arg1 oldMicUsersInfo:(id)arg2 cachedSeiMicMsgInfo:(id)arg3;
- (void)checkAndClearCachedInfoBeforeSwitchCdnOrTrtc;
- (void)updateMicViewUserStatusUIWithChangeType:(unsigned long long)arg1;
- (void)checkAndCancelRandomConnectMicForAnchor;
- (void)notifyCancelRandomConnectMicSuccessfulByUser:(_Bool)arg1;
- (_Bool)cancelRandomConnectMicForAnchorByUser:(_Bool)arg1;
- (void)stopAllConnectedAndAppliedAudienceForAnchorWithScene:(long long)arg1 needCloseMic:(_Bool)arg2;
- (void)checkAndStopAllAudienceConnectMicForAnchor;
- (void)checkAndStopAnchorMicForAnchor:(_Bool)arg1;
- (void)tryStopAndCancelAllConnectMicForAnchor;
- (void)checkAndClearInvitedPkState;
- (void)checkAndUpdateMicLayoutModeWithBattleLayoutValue:(unsigned int)arg1;
- (void)updateBattleReportInfo;
- (void)updateUserPkStateUI;
- (void)startOrStopAnchorSEISynchronize:(_Bool)arg1;
- (_Bool)handleBattleInfo_new:(id)arg1 fromJoinLive:(_Bool)arg2 micSessionId:(id)arg3 vroomId:(id)arg4 serverUnixEpochTimeInSeconds:(unsigned long long)arg5;
- (_Bool)handleBattleInfo:(id)arg1 fromJoinLive:(_Bool)arg2 micSessionId:(id)arg3 serverUnixEpochTimeInSeconds:(unsigned long long)arg4;
- (void)updatePkAtmosphereRelatedViewIfNeeded;
- (_Bool)updateNewConnectMicAnchorUserPkState:(unsigned long long)arg1 timeLeft:(unsigned int)arg2 battleInfo:(id)arg3 serverUnixEpochTimeInSeconds:(unsigned long long)arg4;
- (void)clearAnchorPkInfo;
- (void)resetAnchorPkInfo;
- (_Bool)updateConnectMicAnchorUserPkState:(unsigned long long)arg1 timeLeft:(unsigned int)arg2 currentRewardWecoin:(unsigned long long)arg3 otherRewardWecoin:(unsigned long long)arg4 pkResult:(long long)arg5 ownerPlayerInfo:(id)arg6 otherPlayerInfo:(id)arg7 winningStreakCount:(unsigned int)arg8;
- (unsigned int)getAudienceDelayTimeInPK;
- (id)currentAnchorFinderUserName;
- (void)stopAllInvalidConnectMicWithConditionType:(unsigned long long)arg1;
- (void)localStopConnectMicManuallyWithUserInfo:(id)arg1;
- (void)stopMultiAnchorConnectMic;
- (void)checkCachedMicTalkingAudienceForAnchorMainSendCloseOK:(id)arg1;
- (void)updateCloseInfoDicWithSessionId:(id)arg1 connectMicUserInfo:(id)arg2 shouldResetCount:(_Bool)arg3 shouldRemove:(_Bool)arg4;
- (void)sendCloseConnectMicCgiWithConnectMicUser:(id)arg1 andCloseScene:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)sendCloseConnectMicCgiWithConnectMicUser:(id)arg1 andCloseScene:(long long)arg2;
- (void)checkAndClearConnectMicUserTipViewWithUserInfo:(id)arg1;
- (void)reportAudienceConnectMicSessionEnd;
- (void)reportAudienceConnectMicSessionBegin;
- (void)checkAndNotifyConnectMicEndWithUserInfo:(id)arg1;
- (void)notifyConnectMicWithUserInfo:(id)arg1;
- (void)updateConnectMicButtonBadge;
- (void)clearUnreadApplyMicAnchorSetWithUsername:(id)arg1;
- (void)checkAndDismissAllActionSheet;
- (void)handleClearLive;
- (void)stopConnectMicOrStopAudioForFreeMicWithTask:(id)arg1;
- (void)realStopConnectMicWithTask:(id)arg1;
- (void)stopAudienceConnectMicWithMicUser:(id)arg1 andCloseScene:(long long)arg2;
- (void)localStopAnchorConnectMicWithMicUser:(id)arg1 shouldReport:(_Bool)arg2 andCloseScene:(long long)arg3;
- (void)cancelNewAnchorConnectMicWithMicUserInfo:(id)arg1 showToast:(_Bool)arg2 closeScene:(long long)arg3;
- (void)cancelAnchorConnectMicWithMicUserInfo:(id)arg1 andCloseScene:(long long)arg2;
- (void)localStopOrCancelAnchorConnectMicWithMicUser:(id)arg1 shouldReport:(_Bool)arg2 andCloseScene:(long long)arg3;
- (void)localStopOrCancelAnchorConnectMicWithMicUser:(id)arg1 andCloseScene:(long long)arg2;
- (void)stopConnectMicForAnchorWithMicAudience:(id)arg1;
- (void)checkAndCancelAllConnectMicForAnchor;
- (void)checkAndStopConnectMicForAudienceEnterBackground;
- (void)checkAndStopConnectMicForAudience;
- (void)connectMicAudienceTimeOutWithUserInfo:(id)arg1;
- (void)checkConnectingMicTimeOutForAnchorRandomMic;
- (void)checkConnectingMicTimeOutForAnchorMic;
- (void)cancelConnectMicWithUserInfo:(id)arg1 showToast:(_Bool)arg2 isTimeOut:(_Bool)arg3;
- (void)cancelConnectMicWithUserInfo:(id)arg1 showToast:(_Bool)arg2 closeScene:(long long)arg3;
- (void)checkAndCancelConnectMicForAudience;
- (unsigned long long)applyConnectMicReportType:(long long)arg1;
- (id)applyConnectMicFailedByMicSettingMsgForErrorCode:(long long)arg1 isAcceptErrorTip:(_Bool)arg2;
- (_Bool)isApplyConnectMicFailedByMicSettingErrorCode:(long long)arg1;
- (id)applyConnectMicFailedToastMsgForErrorCode:(long long)arg1 isAcceptErrorTip:(_Bool)arg2;
- (_Bool)isApplyConnectMicFailedToastErrorCode:(long long)arg1;
- (id)applyConnectMicCgiCommonFailedToastWithIsAcceptErrorTipFlag:(_Bool)arg1;
- (void)updateApplyMicExpiredTimeForAnchor:(unsigned long long)arg1 withUserInfo:(id)arg2;
- (void)updateAudienceMicExpiredTimeForAudience:(unsigned long long)arg1;
- (void)handleApplyLiveMicResult:(_Bool)arg1 error:(id)arg2 sessionId:(id)arg3 applyId:(id)arg4 userInfo:(id)arg5 isNewAnchorMic:(_Bool)arg6 expiredTime:(unsigned long long)arg7 isInvitedMicByAnchor:(_Bool)arg8;
- (void)startApplyConnectMicWithVideo:(_Bool)arg1 showLocation:(_Bool)arg2;
- (_Bool)setupConnectMicUserSelfUserWithUseVideo:(_Bool)arg1;
- (id)generateSelfFinderContactForConnectMic;
- (void)restartAudienceCameraPreviewWithLiveTask:(id)arg1;
- (void)stopAudienceCameraPreviewWithLiveTask:(id)arg1;
- (void)startAudienceCameraPreviewWithLiveTask:(id)arg1;
- (void)showCameraOperationPageSheetForAudience;
- (void)showCancelApplyOrStopConnectActionSheetForAnchorWithUserInfo:(id)arg1;
- (void)showConfirmStopMicActionSheetForAudience;
- (void)checkAndSwitchAudienceSelfUserMicStreamMode:(unsigned long long)arg1;
- (void)showCancelApplyOrStopConnectActionSheetForAudienceByTapMicArea:(_Bool)arg1;
- (void)showCancelApplyOrStopConnectActionSheetForAudience;
- (void)enterForeground;
- (void)enterBackground;
- (void)handleApplyMicIntercomResult:(_Bool)arg1 error:(id)arg2 sessionId:(id)arg3 liveSdkInfo:(id)arg4 userInfo:(id)arg5;
- (_Bool)tryStopMicTalking;
- (void)tryMicTalking;
- (void)commentTalkButtonDidTapAction;
- (_Bool)tryStopAndCancelAllAnchorMicForAnchorWithTask:(id)arg1 closeScene:(long long)arg2;
- (_Bool)tryStopConnectMicWithCloseScene:(long long)arg1;
- (_Bool)tryStopConnectMic;
- (_Bool)audienceShouldTryStopConnectMicWhenLiveIsPaused;
- (id)pkPanelModel;
- (_Bool)micButtonActionOpenPkPanelIfNeed;
- (void)connectMicAction;
- (void)fetchLocationAndCheckBadge;
- (void)connectMicActionForAudience;
- (void)resetAudienceApplyMicInfo;
- (_Bool)shouldShowAudienceAccountIntroView;
- (void)setMicMuted:(_Bool)arg1;
- (void)mirrorFrontCamera;
- (void)switchCameraWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)hideConnectMicButtonRedDotAndUpdateFlag:(_Bool)arg1;
- (void)changeAndUpdateConnectMicButtonState;
- (void)updateStateAndReportForFreeMicRealStartTalking;
- (void)clearMicTalkingAudienceSelfUserInfoWithToast:(_Bool)arg1;
- (void)clearConnectMicAudienceSelfUserInfoWithToast:(_Bool)arg1;
- (void)clearConnectMicAudienceSelfUserInfoWithToast:(_Bool)arg1 customToastMsg:(id)arg2;
- (void)clearRandomMicTempAnchorUserInfoAndUpdateButtonStateHighlighted:(_Bool)arg1;
- (void)updateIsApplyOrConnectingMicWithOtherAnchor;
- (void)clearConnectMicAnchorUserInfo:(id)arg1;
- (void)handleMicDidReady;
- (void)handleSendFirstLocalAudioFrame;
- (void)handlePlayingViaCdnChanged:(_Bool)arg1;
- (void)autoUpdateMicLayoutModeIfNeeded;
- (void)onPaidConnectMicModeChanged;
- (void)handleFirstJoinLive;
- (void)handleFirstShowCdnPlayerView;
- (void)updateOtherRoomMicUsersWithAnchorSdkUserId:(id)arg1 anchorSEIInfo:(id)arg2;
- (void)showOtherMicAnchorMicMutedToastWithUserInfo:(id)arg1;
- (void)handleOtherRoomMicAnchorIsAudioModeChanged:(id)arg1;
- (_Bool)updateConnectMicUserTalkingStateWithUserInfo:(id)arg1 andIsTalking:(_Bool)arg2;
- (void)handleAllUserVoiceVolume:(id)arg1 totalVolume:(long long)arg2;
- (void)checkAndUpdateMicUsersInfoForTrtcAudienceWithLiveTask:(id)arg1 isSEIInfoChanged:(_Bool)arg2 isMicLayoutModeChanged:(_Bool)arg3;
- (void)checkAndUpdateMicUsersMicIndexByFocusedSdkUserIdForTrtcAudienceWithLiveTask:(id)arg1;
- (_Bool)checkAndUpdateMicUsersFocusingStatusForTrtcAudienceWithLiveTask:(id)arg1;
- (void)handleSEIMicTalkingUsersListUpdated:(id)arg1;
- (void)handleSEIMicMsgInfoUpdated:(id)arg1 listChanged:(_Bool)arg2;
- (void)handleSEIConnectMicUserInfoListUpdated:(id)arg1 listChanged:(_Bool)arg2;
- (void)handleConnectToOtherRoomResult:(_Bool)arg1 userId:(id)arg2 errCode:(int)arg3 errMsg:(id)arg4;
- (void)handleRemoteUserLeaveRoomWithSdkUserId:(id)arg1 reason:(long long)arg2;
- (void)handleRemoteUserEnterRoomWithSdkUserId:(id)arg1;
- (void)handleUser:(id)arg1 videoAvailable:(_Bool)arg2;
- (void)handleUser:(id)arg1 audioAvailable:(_Bool)arg2;
- (void)checkAndUpdateCloudMixtureParams;
- (void)onTrtcSwitchRoleError:(int)arg1 errMsg:(id)arg2;
- (void)onTrtcSwitchRoleFinished;
- (void)updateLiveOperationViewWithMicTalkingUsers:(id)arg1;
- (void)updateMicInfoAndMicTalkingUI;
- (void)notifyConnectMicConditionSetting:(unsigned long long)arg1;
- (void)notifyCanApplyConnectMicValueChanged:(_Bool)arg1;
- (void)checkAndUpdateLiveView;
- (void)swapMicIndexOfAnchorAndFocusedAudience;
- (void)checkFocusedSdkUserIdAndUpdateMicIndexWithAnchorSdkUserId:(id)arg1;
- (void)updateMicIndexAfterLayoutModeChangedWithUserIndicesDict:(id)arg1;
- (void)updateMicIndexAfterLayoutModeChangedWithAnchorSdkUserId:(id)arg1 andUserIndicesDict:(id)arg2;
- (void)delaySyncNotifySeiInfo;
- (void)syncNotifySeiInfoToServer;
- (void)changeOrUpdateConnectMicAfterLayoutModeChanged;
- (void)changeOrUpdateConnectMicModeShouldUpdateUsersInfo:(_Bool)arg1;
- (void)changeOrUpdateConnectMicMode;
- (void)checkAndShowConnectMicVideoOperationView;
- (void)updateAllMicNormalizedUserFrameForTrtcUserInAnchorToAudienceAudienceTeamupPkScenario;
- (void)updateAllMicNormalizedUserFrameForTrtcUserInAnchorToAudienceAudienceSoloPkScenario;
- (void)updateAllMicNormalizedUserFrameForTrtcUserInAnchorToAudienceFocusedScenario;
- (void)updateAllMicNormalizedUserFrameForTrtcUserInAnchorToAudienceLeadScenario;
- (void)updateAllMicNormalizedUserFrameForTrtcUserInAnchorToAudienceGrabScenario;
- (void)updateAllMicNormalizedUserFrameForTrtcUserInAnchorToAudienceCommonScenario;
- (void)updateAllMicNormalizedUserFrameForTrtcUserInAnchorToAudienceScenario;
- (void)updateAllMicNormalizedUserFrameForTrtcUserInAnchorMicCrossRoomPkScenario;
- (void)updateAllMicNormalizedUserFrameForTrtcUserInAnchorToAnchorFocusedScenario;
- (void)updateAllMicNormalizedUserFrameForTrtcUserInAnchorToAnchorNoFocusScenario;
- (void)updateAllMicNormalizedUserFrameForTrtcUserInAnchorToAnchorScenario;
- (void)updateAllMicNormalizedUserFrameForTrtcUser;
- (void)updateAllMicIndexInListForAnchorMicCrossRoomPkScene;
- (unsigned long long)updateMicIndexForUserInDict:(id)arg1 withCurrentMicIndex:(unsigned long long)arg2 shouldSortList:(_Bool)arg3 andUpdatedUserIdSet:(id)arg4;
- (void)resetAllMicIndexInListWithWaitConnectAudience:(_Bool)arg1 shouldUpdateUnoccupiedSeatList:(_Bool)arg2;
- (void)checkAndUpdateMicUsersMicIndexAndSeatListForTrtcUser;
- (void)updateListInMicUsersInfoForTrtcUserWithLiveTask:(id)arg1 andOldMicUsersInfo:(id)arg2;
- (_Bool)updateMicUsersInfoForFocusModeBySeiWithLiveTask:(id)arg1;
- (void)updateAllConnectedMicUsersInfo;
- (void)showAudienceSelfConnectMicUserViewWithState:(unsigned long long)arg1;
- (void)updateAnchorRandomConnectAvatarsWithLiveContacts:(id)arg1;
- (void)showAnchorRandomMicStateView;
- (void)updateConnectMicConditionSetting:(unsigned long long)arg1 fromJoinLive:(_Bool)arg2;
- (void)closeAllMicTalkingUsersForAnchor;
- (void)notifyFreeTalkFlagValueChanged:(_Bool)arg1;
- (void)realEnableFreeTalk:(_Bool)arg1 withLiveTask:(id)arg2 completeBlock:(CDUnknownBlockType)arg3;
- (void)realEnableFreeTalkFail:(_Bool)arg1 completeBlock:(CDUnknownBlockType)arg2;
- (void)openMicModeSettingPanel;
- (void)batchEnableApplyConnectMic:(_Bool)arg1 enableFreeTalk:(_Bool)arg2 enablePaidMic:(_Bool)arg3 paidMicSetting:(id)arg4 completeBlock:(CDUnknownBlockType)arg5;
- (void)forceDisableFreeTalk;
- (void)enableFreeTalk:(_Bool)arg1 completeBlock:(CDUnknownBlockType)arg2;
- (void)updateCanApplyFreeTalk:(_Bool)arg1 fromJoinLive:(_Bool)arg2;
- (void)updateCanApplyConnectMic:(_Bool)arg1 fromJoinLive:(_Bool)arg2;
- (void)enableApplyConnectMicFailedWithTargetValue:(_Bool)arg1 andCompleteBlock:(CDUnknownBlockType)arg2;
- (void)enableApplyConnectMic:(_Bool)arg1 completeBlock:(CDUnknownBlockType)arg2;
- (void)realCheckAndUpdateMicUsersStatusForCdnAudienceWithOldVersionSeiMicUserList:(id)arg1;
- (void)checkConnectMicUsersStatusForCdnAudience;
- (void)checkConnectMicUserInfoAndVideoSizeForCdnAudience;
- (void)updateConnectMicAudienceListForCDNUser;
- (void)updateConnectMicUsersInfoForCDNUser;
- (id)findMicAudienceUserInfoForCDNUserBySdkUserId:(id)arg1;
- (void)checkRemoteClosedWaitConnectMicAudienceForCDNUser;
- (void)checkAndClearConnectMicAudienceForCDNUser;
- (void)clearOtherRoomConnectMicAudienceDic;
- (void)clearConnectMicAudienceListForCDNUser;
- (void)checkAndClearMicTalkingDictAndListForCdnUser;
- (void)checkRemoteClosedCachedMicTalkingAudienceForCDNUser;
- (void)checkAndUpdateMicTalkingListForCdnUser;
- (void)receiveMicBattleSettings:(id)arg1;
- (void)receiveMicWording:(id)arg1;
- (void)receiveLiveMicHeartBrokenUsers:(id)arg1;
- (void)checkAndChangeToCDNPlayWithTask:(id)arg1;
- (void)receiveLiveMicBreakTrtcWithSdkUserId:(id)arg1;
- (void)receiveCloseMicIntercomWithSessionId:(id)arg1;
- (void)receiveMicIntercomFinderLiveContact:(id)arg1 sdkUserId:(id)arg2 sessionId:(id)arg3 fromFirstJoinLive:(_Bool)arg4;
- (void)receiveAnchorConnectMicNotifyApplyRandomMicContact:(id)arg1 randomMicBuffer:(id)arg2 isMultiAnchorMic:(_Bool)arg3;
- (void)receiveAnchorCloseConnectMicMsgForAudienceWithSessionId:(id)arg1;
- (void)receiveOtherRoomAudienceCloseConnectMicMsgWithContact:(id)arg1 sessionId:(id)arg2 sdkUserId:(id)arg3;
- (void)updateAudioModeBackgroundConfiguration:(id)arg1 withSessionId:(id)arg2 andFinderLiveTask:(id)arg3;
- (void)receiveAnchorConnectMicStatus:(long long)arg1 connectMicFinderContact:(id)arg2 coverImageUrlString:(id)arg3 liveRoomImages:(id)arg4 sessionId:(id)arg5 sequence:(unsigned long long)arg6 sdkUserId:(id)arg7 sdkRoomId:(unsigned int)arg8 fromJoinLive:(_Bool)arg9;
- (void)receiveAnchorCloseConnectMicFromContact:(id)arg1 sessionId:(id)arg2 sdkUserId:(id)arg3;
- (void)receiveAnchorAcceptConnectMicFromContact:(id)arg1 coverImageUrlString:(id)arg2 liveRoomImages:(id)arg3 sdkUserId:(id)arg4 sdkRoomId:(unsigned int)arg5 sdkPkSign:(id)arg6 sdkNewPkSign:(id)arg7 sessionId:(id)arg8 sequence:(unsigned long long)arg9;
- (void)receiveAnchorApplyConnectMicFromContact:(id)arg1 coverImageUrlString:(id)arg2 sdkUserId:(id)arg3 sdkRoomId:(unsigned int)arg4 liveRoomImages:(id)arg5 randomMicBuffer:(id)arg6 sessionId:(id)arg7;
- (void)checkAndFetchFinderLiveMicInfo;
- (void)stopJoinLiveRespAnchorMicSession;
- (void)handleAnchorNewPkInfoInJoinLiveResp:(id)arg1;
- (void)handleAnchorNewCloseConnectMicFromContact:(id)arg1 sdkUserId:(id)arg2 applyId:(id)arg3 sessionId:(id)arg4;
- (void)handleSdkRoomIdChangedForConnectingMicAnchorUser:(id)arg1 withFinderLiveTask:(id)arg2;
- (_Bool)handleMicAnchorUserInfo:(id)arg1 withFinderLiveTask:(id)arg2;
- (_Bool)handleNewOtherRoomMicAnchorUser:(id)arg1;
- (void)handleAnchorNewAcceptConnectMicFromContact:(id)arg1 pkroomAnchors:(id)arg2 sessionId:(id)arg3 vroomId:(id)arg4 vroomIdVersion:(unsigned long long)arg5;
- (void)checkAndAcceptNewRandomMic;
- (void)acceptNewRandomMic;
- (void)handleAnchorNewApplyMicForTargetAnchorWithUserInfo:(id)arg1;
- (void)handleAnchorNewApplyMicForSenderWithUserInfo:(id)arg1;
- (void)handleAnchorNewApplyConnectMicFromContact:(id)arg1 applyAnchor:(id)arg2 acceptorAnchor:(id)arg3 pkroomAnchors:(id)arg4 applyId:(id)arg5 randomMicBuffer:(id)arg6 expiredTime:(unsigned long long)arg7;
- (void)receiveConnectMicUserForAudience:(id)arg1 updateMicUsersListForCdnAudience:(_Bool)arg2;
- (void)receiveSelfConnectMicUserInfo:(id)arg1 fromJoinLive:(_Bool)arg2;
- (void)receiveConnectMicAudienceUserForAnchor:(id)arg1 expiredTime:(unsigned long long)arg2 fromJoinLive:(_Bool)arg3;
- (void)receiveConnectMicOtherRoomAudienceUser:(id)arg1 updateMicUsersListForCdnAudience:(_Bool)arg2;
- (void)receiveConnectMicAudienceUser:(id)arg1 expiredTime:(unsigned long long)arg2 fromJoinLive:(_Bool)arg3 updateMicUsersListForCdnAudience:(_Bool)arg4;
- (void)receiveConnectMicLiveSdkInfo:(id)arg1 expiredTime:(unsigned long long)arg2 sessionId:(id)arg3 sequence:(unsigned long long)arg4 seatId:(unsigned int)arg5 useVideo:(_Bool)arg6;
- (unsigned long long)currentMaxConnectingMicAudienceCountWithFinderLiveTask:(id)arg1;
- (void)receiveApplyConnectMicFromContact:(id)arg1 sdkUserId:(id)arg2 sessionId:(id)arg3 expiredTime:(unsigned long long)arg4 micUserAttrFlag:(unsigned int)arg5 seatId:(unsigned int)arg6 useVideo:(_Bool)arg7 autoConnect:(_Bool)arg8;
- (void)receiveCloseConnectMicMsgForAudienceWithSessionId:(id)arg1 closeMicInfo:(id)arg2;
- (void)receiveCloseConnectMicMsgWithContact:(id)arg1 sessionId:(id)arg2 closeMicInfo:(id)arg3;
- (void)checkRemoteClosedAudienceTRTCStatus:(id)arg1;
- (id)getConnectMicAudienceUserListWithApplyAudience:(_Bool)arg1;
- (_Bool)removeMicTalkingAudienceWithSdkUserId:(id)arg1;
- (_Bool)addMicTalkingAudienceWithUserInfo:(id)arg1;
- (void)addCachedMicTalkingAudienceWithUserInfo:(id)arg1;
- (_Bool)removeWaitConnectAudienceWithSessionId:(id)arg1 updatePanel:(_Bool)arg2;
- (_Bool)removeWaitConnectAudienceWithSessionId:(id)arg1;
- (_Bool)addWaitConnectAudienceWithUserInfo:(id)arg1 updatePanel:(_Bool)arg2;
- (_Bool)addWaitConnectAudienceWithUserInfo:(id)arg1;
- (_Bool)removeOtherRoomConnectMicAudienceWithSdkUserId:(id)arg1;
- (void)updateOtherRoomUserRoomIdWithUserInfo:(id)arg1 andAnchorUserInfo:(id)arg2;
- (_Bool)addOtherRoomConnectMicAudienceWithUserInfo:(id)arg1;
- (_Bool)removeAppliedMicAnchorWithUserInfo:(id)arg1 updatePanelAndButton:(_Bool)arg2;
- (_Bool)removeAppliedOrAcceptedMicAnchorWithUserInfo:(id)arg1 updatePanelAndButton:(_Bool)arg2;
- (_Bool)removeAppliedOrAcceptedMicAnchorWithUserInfo:(id)arg1;
- (void)delayActivateLiveConnectMicForAnchor;
- (void)checkAndCallActivateLiveConnectMicForAnchor;
- (_Bool)removeConnectMicAnchorWithSdkUserId:(id)arg1;
- (_Bool)addConnectMicAnchorWithUserInfo:(id)arg1;
- (_Bool)removeConnectMicAudienceWithSessionId:(id)arg1 showToast:(_Bool)arg2;
- (_Bool)removeConnectMicAudienceWithSessionId:(id)arg1;
- (_Bool)addConnectMicAudienceWithUserInfo:(id)arg1;
- (void)checkAllCachedMicUsersDictWithUserInfo:(id)arg1;
- (void)dealloc;
- (id)initWithTaskId:(id)arg1;
- (void)receiveBattleNotifyInfo:(id)arg1;
- (void)differBattleDataChangedWithBeforePkInfo:(id)arg1 afterPkInfo:(id)arg2;
- (_Bool)anchorCreateCrossRoomBattle:(id)arg1;
- (void)anchorModifyCrossRoomBattle:(id)arg1;
- (void)anchorModifyCrossRoomBattleWithPkSelectionResult:(id)arg1 isModifyBattle:(_Bool)arg2;
- (id)createCrossRoomPkSelectResultWithCurrentBattleInfo;
- (void)anchorModifyCrossRoomBattle;
- (void)anchorQuitCrossRoomBattle;
- (void)renewCreateAudienceBattle:(unsigned long long)arg1 battleScope:(unsigned long long)arg2 battleDuration:(unsigned long long)arg3 winningCondition:(unsigned long long)arg4 winningConditionArguments:(id)arg5 teamInfo:(id)arg6 block:(CDUnknownBlockType)arg7;
- (void)anchorModifyAudienceBattle:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)actionAnchorChangePlayMode;
- (void)handleCreateBattleWithAudienceResult:(_Bool)arg1 error:(id)arg2 battleSessionId:(id)arg3 battleMode:(unsigned long long)arg4 battleScope:(unsigned long long)arg5 battleDuration:(unsigned long long)arg6 winningCondition:(unsigned long long)arg7 winningConditionArguments:(id)arg8 teamInfo:(id)arg9;
- (void)failRenewCreateAudienceBattleProcess;
- (void)liveVCBlockLoading:(_Bool)arg1;
- (_Bool)anchorCreateAudienceBattle:(id)arg1;
- (void)handleCancelBattleWithAudienceResult:(_Bool)arg1 error:(id)arg2;
- (void)anchorFinishAudienceBattlePrematurely;
- (void)anchorCancelAudienceBattle;
- (void)handleInitiateBattleWithAudienceResult:(_Bool)arg1 error:(id)arg2 battleSessionId:(id)arg3;
- (void)anchorStartAudienceOrCrossRoomBattle;
- (id)currentAudienceBattleTeamInfo;
- (id)createAudienceBattleTeamInfoWithBattleMode:(unsigned long long)arg1 battleDuration:(unsigned long long)arg2 battleScope:(unsigned long long)arg3;
- (void)handleNewAcceptConnectMicBattleResult:(_Bool)arg1 error:(id)arg2 battleSessionId:(id)arg3;
- (void)anchorAcceptMultiAnchorsOrCrossRoomPk;
- (void)handleNewApplyConnectMicBattleResult:(_Bool)arg1 error:(id)arg2 battleSessionId:(id)arg3;
- (void)anchorApplyNewPk:(unsigned long long)arg1 scope:(unsigned long long)arg2 teamInfo:(id)arg3 battleDuration:(unsigned long long)arg4 winningCondition:(unsigned long long)arg5 winningConditionArguments:(id)arg6 battleLayout:(unsigned int)arg7;
- (id)prepareAnchorPkTeamInfoForApply:(unsigned long long)arg1 scope:(unsigned long long)arg2;
- (void)anchorApplyMultiAnchorsBattleOneMore;
- (void)actionAnchorStartBattleOneMore;
- (void)actionAnchorStartBattle;
- (void)actionAnchorCancelBattle:(unsigned long long)arg1;
- (void)actionAnchorAcceptBattle:(unsigned long long)arg1;
- (void)actionAnchorQuitBattle;
- (void)actionAnchorCloseMic;
- (void)actionAnchorApplyBattle:(unsigned long long)arg1;
- (id)audiencePkReassignUserIndicesWithMode:(unsigned long long)arg1;
- (id)currentAudienceUserIndices;
- (void)applyAudienceBattleWithPkSelectionResult:(id)arg1 isModifyBattle:(_Bool)arg2;
- (void)applyAnchorBattleWithPkSelectionResult:(id)arg1 isModifyBattle:(_Bool)arg2;
- (void)anchorApplyNewBattleNotOneMoreWithOpponentScenario:(unsigned long long)arg1 isModifyBattle:(_Bool)arg2 requireChanges:(_Bool)arg3;
- (void)closeConnectMicBattle:(unsigned long long)arg1 shouldShowToast:(_Bool)arg2;
- (void)cancelOrRejectPkWithCloseScene:(unsigned long long)arg1 shouldShowToast:(_Bool)arg2;
- (void)cancelOrRejectPkWithCloseScene:(unsigned long long)arg1;
- (id)paidconnectmic_anchorContact;
- (void)showPaidMicPageSheet:(id)arg1;
- (_Bool)isMicPurchaseSettingStillUpToDate:(id)arg1;
- (_Bool)isPaidConnectMic;
- (void)paidconnectmic_stopLoading;
- (void)paidconnectmic_startLoading;
- (void)removeKeepAliveTipsView;
- (void)showKeepAliveViewForUserIfNeeded:(id)arg1 forceUpdateLayout:(_Bool)arg2;
- (void)autoDisconnectUserIfNeeded:(id)arg1;
- (void)onPaidMicCountdownTimerFired;
- (void)invalidatePaidMicCountdownTimer;
- (void)schedulePaidMicCountdownTimerIfNeeded;
- (void)handleSEIMicUserInfoListForPaidMic:(id)arg1;
- (void)handleAcceptLiveMicForPaidMicWithUser:(id)arg1 sessionId:(id)arg2 anchorStatus:(id)arg3;
- (void)handleLiveClosedForPaidMic;
- (void)updateMicLayoutModeForPaidMicIfNeeded;
- (void)handlePaidMicConfig:(id)arg1;
- (void)initPaidMicLogic;
- (_Bool)paidConnectMicAnchorSettingPanelCanChangeMicLayoutMode:(id)arg1;
- (void)paidConnectMicAnchorSettingPanelDidCancel:(id)arg1;
- (void)paidConnectMicAnchorSettingPanel:(id)arg1 didConfirmWithLatestSetting:(id)arg2;
- (void)onMMFinderLiveConnectMicOperationPanelClickPaidMicSettingWithPanelInfo:(id)arg1;
- (void)updatePaidConnectMicAnchorSetting:(id)arg1;
- (void)markPaidMicForceManualDisconnectWithSessionId:(id)arg1;
- (void)handleMicAudienceRemovedForPaidMicWithSessionId:(id)arg1;
- (void)reportPaidConnectMicUserWithSessionId:(id)arg1 timestampInMS:(unsigned long long)arg2 retryCount:(unsigned char)arg3;
- (void)handlePaidConnectMicUserEstimatedEndTimeDidFill:(id)arg1;
- (void)onPaidConnectMicAudienceOperationPanelDidClickCancelConnect:(id)arg1;
- (void)onPaidConnectMicAudienceOperationPanel:(id)arg1 didConfirmBidWithAmount:(unsigned long long)arg2;
- (void)consumeDidCancel:(id)arg1;
- (void)consumeDidFail:(id)arg1 error:(id)arg2;
- (void)consumeDidSuccess:(id)arg1 result:(id)arg2;
- (id)genConsumeParameterWithResp:(id)arg1 price:(unsigned int)arg2;
- (void)_openOrUpdatePaidConnectMicAudienceOperationPanelWithResp:(id)arg1;
- (void)_openOrUpdatePaidConnectMicAudienceApplyPanelWithResp:(id)arg1;
- (void)_openPaidConnectMicPanelWithPurchaseMicInfoResp:(id)arg1;
- (void)showPaidMicAudienceFeedbackIfNeeded;
- (void)handlePaidMicAudienceFeedbackJumpInfo:(id)arg1;
- (void)openPaidConnectMicOperationPanelForAudience;
- (void)setupSelfConnectUserWithResp:(id)arg1;
- (void)_doApplyBidWithPrice:(unsigned long long)arg1;
- (void)_doApplyPaidConnectMicWithApplyInfo:(id)arg1;
- (void)handleSelfConnectMicApplyAcceptedForPaidMic;
- (void)paidConnectMicAudienceApplyPanel:(id)arg1 didClickApplyWithApplyInfo:(id)arg2;
- (void)paidConnectMicAudienceApplyPanelDidClickCameraSetting:(id)arg1;
- (void)recoverAudienceApplyPanelIfNeeded;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

