//
// ClassDump By HuangBai Private 
//  Copyright (C) 1997-2019 Steve Nygard. Updated HuangBai-2024
//

#import <UIKit/UIViewController.h>

@class FlutterEngine, FlutterKeyboardManager, FlutterView, NSObject, NSString, UIHoverGestureRecognizer, UIPanGestureRecognizer, UIPinchGestureRecognizer, UIRotationGestureRecognizer, UIScrollView, UIView, VSyncClient;
@protocol FlutterBinaryMessenger;

@interface FlutterViewController : UIViewController
{
    struct unique_ptr<fml::WeakNSObjectFactory<FlutterViewController>, std::default_delete<fml::WeakNSObjectFactory<FlutterViewController>>> _weakFactory;
    struct scoped_nsobject<FlutterEngine> _engine;
    struct scoped_nsobject<FlutterView> _flutterView;
    struct scoped_nsobject<UIView> _splashScreenView;
    struct ScopedTypeRef<void (^)(), fml::internal::ScopedBlockTraits<void (^)()>> _flutterViewRenderedCallback;
    struct ScopedTypeRef<double (^)(), fml::internal::ScopedBlockTraits<double (^)()>> _textScaleFactorDelegate;
    struct ScopedTypeRef<bool (^)(), fml::internal::ScopedBlockTraits<bool (^)()>> _darkModeDelegate;
    unsigned long long _orientationPreferences;
    long long _statusBarStyle;
    struct ViewportMetrics _viewportMetrics;
    _Bool _initialized;
    _Bool _viewOpaque;
    _Bool _engineNeedsLaunch;
    _Bool _insetsByNative;
    _Bool _hideStatusBar;
    struct scoped_nsobject<NSMutableSet<NSNumber *>> _ongoingTouches;
    struct scoped_nsobject<UIScrollView> _scrollView;
    struct scoped_nsobject<UIView> _keyboardAnimationView;
    struct scoped_nsobject<SpringAnimation> _keyboardSpringAnimation;
    struct MouseState _mouseState;
    double _scrollInertiaEventStartline;
    double _scrollInertiaEventAppKitDeadline;
    _Bool _autoReleaseFlutterView;
    _Bool _isInPipMode;
    _Bool _displayingFlutterUI;
    _Bool _flutterPrefersStatusBarHidden;
    _Bool _engineAllowHeadlessExecution;
    _Bool _allowDeliverAppLifecycleInViewControllerLifecycle;
    _Bool _disableKeyboardAnim;
    _Bool _isHomeIndicatorHidden;
    _Bool _isPresentingViewControllerAnimating;
    _Bool _shouldIgnoreViewportMetricsUpdatesDuringRotation;
    _Bool _keyboardAnimationIsShowing;
    _Bool _isKeyboardInOrTransitioningFromBackground;
    _Bool _isVoiceOverRunning;
    CDUnknownBlockType _viewSafeAreaInsetsDelegate;
    UIScrollView *_hostScrollerView;
    CDUnknownBlockType _onInputAccessViewAdded;
    CDUnknownBlockType _onInputAccessViewRemoved;
    double _targetViewInsetBottom;
    double _originalViewInsetBottom;
    VSyncClient *_keyboardAnimationVSyncClient;
    struct TimePoint _keyboardAnimationStartTime;
    VSyncClient *_touchRateCorrectionVSyncClient;
    UIHoverGestureRecognizer *_hoverGestureRecognizer;
    UIPanGestureRecognizer *_discreteScrollingPanGestureRecognizer;
    UIPanGestureRecognizer *_continuousScrollingPanGestureRecognizer;
    UIPinchGestureRecognizer *_pinchGestureRecognizer;
    UIRotationGestureRecognizer *_rotationGestureRecognizer;
    FlutterKeyboardManager *_keyboardManager;
}

+ (_Bool)isUIAccessibilityIsVoiceOverRunning;
+ (_Bool)accessibilityIsOnOffSwitchLabelsEnabled;
+ (_Bool)automaticallyNotifiesObserversOfDisplayingFlutterUI;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(retain, nonatomic) FlutterKeyboardManager *keyboardManager; // @synthesize keyboardManager=_keyboardManager;
@property(readonly, nonatomic) _Bool isVoiceOverRunning; // @synthesize isVoiceOverRunning=_isVoiceOverRunning;
@property(retain, nonatomic) UIRotationGestureRecognizer *rotationGestureRecognizer; // @synthesize rotationGestureRecognizer=_rotationGestureRecognizer;
@property(retain, nonatomic) UIPinchGestureRecognizer *pinchGestureRecognizer; // @synthesize pinchGestureRecognizer=_pinchGestureRecognizer;
@property(retain, nonatomic) UIPanGestureRecognizer *continuousScrollingPanGestureRecognizer; // @synthesize continuousScrollingPanGestureRecognizer=_continuousScrollingPanGestureRecognizer;
@property(retain, nonatomic) UIPanGestureRecognizer *discreteScrollingPanGestureRecognizer; // @synthesize discreteScrollingPanGestureRecognizer=_discreteScrollingPanGestureRecognizer;
@property(retain, nonatomic) UIHoverGestureRecognizer *hoverGestureRecognizer; // @synthesize hoverGestureRecognizer=_hoverGestureRecognizer;
@property(retain, nonatomic) VSyncClient *touchRateCorrectionVSyncClient; // @synthesize touchRateCorrectionVSyncClient=_touchRateCorrectionVSyncClient;
@property(nonatomic) _Bool isKeyboardInOrTransitioningFromBackground; // @synthesize isKeyboardInOrTransitioningFromBackground=_isKeyboardInOrTransitioningFromBackground;
@property(nonatomic) struct TimePoint keyboardAnimationStartTime; // @synthesize keyboardAnimationStartTime=_keyboardAnimationStartTime;
@property(nonatomic) _Bool keyboardAnimationIsShowing; // @synthesize keyboardAnimationIsShowing=_keyboardAnimationIsShowing;
@property(retain, nonatomic) VSyncClient *keyboardAnimationVSyncClient; // @synthesize keyboardAnimationVSyncClient=_keyboardAnimationVSyncClient;
@property(nonatomic) double originalViewInsetBottom; // @synthesize originalViewInsetBottom=_originalViewInsetBottom;
@property(nonatomic) double targetViewInsetBottom; // @synthesize targetViewInsetBottom=_targetViewInsetBottom;
@property(nonatomic) _Bool shouldIgnoreViewportMetricsUpdatesDuringRotation; // @synthesize shouldIgnoreViewportMetricsUpdatesDuringRotation=_shouldIgnoreViewportMetricsUpdatesDuringRotation;
@property(nonatomic) _Bool isPresentingViewControllerAnimating; // @synthesize isPresentingViewControllerAnimating=_isPresentingViewControllerAnimating;
@property(nonatomic) _Bool isHomeIndicatorHidden; // @synthesize isHomeIndicatorHidden=_isHomeIndicatorHidden;
@property(copy, nonatomic) CDUnknownBlockType onInputAccessViewRemoved; // @synthesize onInputAccessViewRemoved=_onInputAccessViewRemoved;
@property(copy, nonatomic) CDUnknownBlockType onInputAccessViewAdded; // @synthesize onInputAccessViewAdded=_onInputAccessViewAdded;
@property(retain, nonatomic) UIScrollView *hostScrollerView; // @synthesize hostScrollerView=_hostScrollerView;
@property(copy, nonatomic) CDUnknownBlockType viewSafeAreaInsetsDelegate; // @synthesize viewSafeAreaInsetsDelegate=_viewSafeAreaInsetsDelegate;
@property(nonatomic) _Bool disableKeyboardAnim; // @synthesize disableKeyboardAnim=_disableKeyboardAnim;
@property(nonatomic) _Bool allowDeliverAppLifecycleInViewControllerLifecycle; // @synthesize allowDeliverAppLifecycleInViewControllerLifecycle=_allowDeliverAppLifecycleInViewControllerLifecycle;
@property(readonly, nonatomic) _Bool engineAllowHeadlessExecution; // @synthesize engineAllowHeadlessExecution=_engineAllowHeadlessExecution;
@property(nonatomic, getter=isDisplayingFlutterUI) _Bool displayingFlutterUI; // @synthesize displayingFlutterUI=_displayingFlutterUI;
- (_Bool)getPipMode;
- (void)setPipMode:(_Bool)arg1;
- (void)setUseCoreTextShape:(_Bool)arg1;
- (void)setFontShapeUseCoreText:(_Bool)arg1;
- (void)setNeedAutoReleaseFlutterView:(_Bool)arg1;
- (void)setPresentsWithTransaction:(_Bool)arg1;
- (id)restorationPlugin;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)pinchEvent:(id)arg1;
- (void)continuousScrollEvent:(id)arg1;
- (void)discreteScrollEvent:(id)arg1;
- (void)hoverEvent:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveEvent:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (struct PointerData)updateMousePointerDataFrom:(id)arg1;
@property(readonly, nonatomic) _Bool isPresentingViewController;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (id)valuePublishedByPlugin:(id)arg1;
- (_Bool)hasPlugin:(id)arg1;
- (id)registrarForPlugin:(id)arg1;
- (id)pluginRegistry;
- (id)lookupKeyForAsset:(id)arg1 fromPackage:(id)arg2;
- (id)lookupKeyForAsset:(id)arg1;
- (void)textureFrameAvailable:(long long)arg1;
- (void)unregisterTexture:(long long)arg1;
- (long long)registerTexture:(id)arg1;
- (void)cleanUpConnection:(long long)arg1;
- (long long)setMessageHandlerOnChannel:(id)arg1 binaryMessageHandler:(CDUnknownBlockType)arg2 taskQueue:(id)arg3;
- (long long)setMessageHandlerOnChannel:(id)arg1 binaryMessageHandler:(CDUnknownBlockType)arg2;
- (id)makeBackgroundTaskQueue;
- (void)sendOnChannel:(id)arg1 message:(id)arg2 binaryReply:(CDUnknownBlockType)arg3;
- (void)sendOnChannel:(id)arg1 message:(id)arg2;
@property(readonly, nonatomic) NSObject<FlutterBinaryMessenger> *binaryMessenger;
- (void *)platformViewsController;
@property(readonly, nonatomic) FlutterView *flutterView;
@property(nonatomic) _Bool prefersStatusBarHidden; // @synthesize prefersStatusBarHidden=_flutterPrefersStatusBarHidden;
- (void)onPreferredStatusBarStyleUpdated:(id)arg1;
- (long long)preferredStatusBarStyle;
- (id)contrastMode;
- (id)brightnessMode;
- (_Bool)isAlwaysUse24HourFormat;
- (double)textScaleFactor;
- (void)onUserSettingsChanged:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (_Bool)accessibilityPerformEscape;
- (int)accessibilityFlags;
- (void)onAccessibilityStatusChanged:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (_Bool)prefersHomeIndicatorAutoHidden;
- (void)onShowHomeIndicatorNotification:(id)arg1;
- (void)onHideHomeIndicatorNotification:(id)arg1;
- (void)performOrientationUpdate:(unsigned long long)arg1;
- (void)requestGeometryUpdateForWindowScenes:(id)arg1;
- (void)onOrientationPreferencesUpdated:(id)arg1;
- (void)pressesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)pressesEnded:(id)arg1 withEvent:(id)arg2;
- (void)pressesChanged:(id)arg1 withEvent:(id)arg2;
- (void)pressesBegan:(id)arg1 withEvent:(id)arg2;
- (void)handlePressEvent:(id)arg1 nextAction:(CDUnknownBlockType)arg2;
- (void)ensureViewportMetricsIsCorrect;
- (void)removeKeyboardAnimationView;
- (void)invalidateKeyboardAnimationVSyncClient;
- (void)setUpKeyboardAnimationVsyncClient:(CDUnknownBlockType)arg1;
- (void)setUpKeyboardSpringAnimationIfNeeded:(id)arg1;
- (void)startKeyBoardAnimation:(double)arg1;
- (double)calculateKeyboardInset:(struct CGRect)arg1 keyboardMode:(long long)arg2;
- (double)calculateMultitaskingAdjustment:(struct CGRect)arg1 keyboardFrame:(struct CGRect)arg2;
- (long long)calculateKeyboardAttachMode:(id)arg1;
- (_Bool)isKeyboardNotificationForDifferentView:(id)arg1;
- (_Bool)shouldIgnoreKeyboardNotification:(id)arg1;
- (void)handleKeyboardNotification:(id)arg1;
- (void)keyboardWillBeHidden:(id)arg1;
- (void)keyboardWillChangeFrame:(id)arg1;
- (void)keyboardWillShowNotification:(id)arg1;
- (void)setViewportMetricsPaddings;
- (void)setViewportMetricsSize;
- (void)viewSafeAreaInsetsDidChange;
- (_Bool)waitForFirstFrame:(double)arg1;
- (void)viewDidLayoutSubviews;
- (void)updateViewportMetricsIfNeeded;
- (void)invalidateTouchRateCorrectionVSyncClient;
- (void)triggerTouchRateCorrectionIfNeeded:(id)arg1;
- (void)createTouchRateCorrectionVSyncClientIfNeeded;
- (void)forceTouchesCancelled:(id)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)dispatchTouches:(id)arg1 pointerDataChangeOverride:(long long *)arg2 event:(id)arg3;
- (void)goToApplicationLifecycle:(id)arg1;
- (void)appOrSceneWillEnterForeground;
- (void)appOrSceneDidEnterBackground;
- (void)appOrSceneWillTerminate;
- (void)appOrSceneWillResignActive;
- (void)appOrSceneBecameActive;
- (void)sceneWillEnterForeground:(id)arg1;
- (void)sceneDidEnterBackground:(id)arg1;
- (void)sceneWillDisconnect:(id)arg1;
- (void)sceneWillResignActive:(id)arg1;
- (void)sceneBecameActive:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationBecameActive:(id)arg1;
- (void)dealloc;
- (void)deregisterNotifications;
- (void)flushOngoingTouches;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)removeInternalPlugins;
- (void)addInternalPlugins;
- (void)viewDidLoad;
- (void)surfaceUpdated:(_Bool)arg1;
- (void)setFlutterViewDidRenderCallback:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) UIView *splashScreenView;
- (id)splashScreenFromXib:(id)arg1;
- (id)splashScreenFromStoryboard:(id)arg1;
- (_Bool)loadDefaultSplashScreenView;
- (id)keyboardSpringAnimation;
- (id)keyboardAnimationView;
@property(readonly, nonatomic) long long viewIdentifier; // @dynamic viewIdentifier;
- (void)installFirstFrameCallback;
- (void)removeSplashScreenView:(CDUnknownBlockType)arg1;
- (void)callViewRenderedCallback;
- (void)installSplashScreenViewIfNecessary;
- (_Bool)scrollViewShouldScrollToTop:(id)arg1;
- (void)createAndAttachFlutterView;
- (struct PointerData)generatePointerDataForFake;
- (void)loadView;
- (void)setDarkModeDelegate:(CDUnknownBlockType)arg1;
- (void)setTextScaleFactorDelegate:(CDUnknownBlockType)arg1;
- (void)pushRoute:(id)arg1;
- (void)popRoute;
- (void)setInsetsToFlutterDirect:(struct CGRect *)arg1;
- (void)setInitialRoute:(id)arg1;
- (void)setUpApplicationLifecycleNotifications:(id)arg1;
- (void)setUpSceneLifecycleNotifications:(id)arg1;
- (void)hideStatusBar;
- (void)showStatusBar;
- (void)setUpNotificationCenterObservers;
- (WeakNSObject_d08cd568)getWeakNSObject;
@property(readonly, nonatomic) __weak FlutterEngine *engine;
- (void)performCommonViewControllerInitialization;
@property(nonatomic, getter=isViewOpaque) _Bool viewOpaque;
- (void)sharedSetupWithProject:(id)arg1 initialRoute:(id)arg2;
- (id)init;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithProject:(id)arg1 initialRoute:(id)arg2 nibName:(id)arg3 bundle:(id)arg4;
- (id)initWithProject:(id)arg1 nibName:(id)arg2 bundle:(id)arg3;
- (id)initWithEngine:(id)arg1 nibName:(id)arg2 bundle:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) UIView *view;

@end

